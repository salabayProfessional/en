{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchView.tsx\";\nimport React from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { Spinner } from \"reactstrap\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\nimport { BTN_BG } from \"../../classes\";\nimport \"./SearchWord.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchView = ({\n  onSubmit,\n  initialState,\n  loading,\n  data,\n  dispatchWord\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-word col-12\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      initialValues: initialState,\n      children: () => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"search-panel col-12\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control btn-bg\",\n            placeholder: \"word\",\n            name: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-panel\",\n            children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 30\n            }, this) : data === null || data === void 0 ? void 0 : data.map(d => {\n              var _d$phonetics$, _d$meanings$, _d$meanings$2, _d$meanings$2$definit, _d$meanings$3, _d$meanings$3$definit, _d$meanings$4, _d$meanings$4$definit;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: d.word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Phonetics:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$phonetics$ = d.phonetics[0]) === null || _d$phonetics$ === void 0 ? void 0 : _d$phonetics$.text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Meanings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 32\n                  }, this), \" part of speech: \", d === null || d === void 0 ? void 0 : (_d$meanings$ = d.meanings[0]) === null || _d$meanings$ === void 0 ? void 0 : _d$meanings$.partOfSpeech, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 95\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Definitions:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$2 = d.meanings[0]) === null || _d$meanings$2 === void 0 ? void 0 : (_d$meanings$2$definit = _d$meanings$2.definitions[0]) === null || _d$meanings$2$definit === void 0 ? void 0 : _d$meanings$2$definit.definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 96\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Synonyms:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$3 = d.meanings[0]) === null || _d$meanings$3 === void 0 ? void 0 : (_d$meanings$3$definit = _d$meanings$3.definitions[0]) === null || _d$meanings$3$definit === void 0 ? void 0 : _d$meanings$3$definit.synonyms.map(synonym => /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [synonym, \", \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 116\n                  }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 142\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Example:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$4 = d.meanings[0]) === null || _d$meanings$4 === void 0 ? void 0 : (_d$meanings$4$definit = _d$meanings$4.definitions[0]) === null || _d$meanings$4$definit === void 0 ? void 0 : _d$meanings$4$definit.example, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 89\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Origin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : d.origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: BTN_BG,\n                  type: \"button\",\n                  onClick: () => dispatchWord({\n                    word: data\n                  }),\n                  children: \"ADD IN DICTIONARY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 29\n                }, this)]\n              }, generateString(), true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SearchView;\nexport default SearchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchView\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchView.tsx"],"names":["React","Field","Form","Formik","Spinner","generateString","BTN_BG","SearchView","onSubmit","initialState","loading","data","dispatchWord","map","d","word","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { Spinner } from \"reactstrap\";\nimport { WordData } from \"../../store/slices/types\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\nimport { BTN_BG } from \"../../classes\";\nimport \"./SearchWord.scss\";\n\nconst SearchView: React.FC<{\n  onSubmit: any,\n  initialState: any,\n  loading: any,\n  data: any,\n  dispatchWord: any\n}> = ({\n  onSubmit,\n  initialState,\n  loading,\n  data,\n  dispatchWord,\n}) => {\n\n  return (\n    <div className=\"search-word col-12\">  \n      <Formik  \n        onSubmit={onSubmit}\n        initialValues={initialState}\n      >\n        {\n          () => {\n            return (\n              <Form className=\"search-panel col-12\">\n                <Field className=\"form-control btn-bg\" placeholder=\"word\" name=\"word\" />\n                <div className=\"info-panel\">\n                  {\n                    loading? <Spinner /> : (\n                      data?.map((d: WordData) => {\n                        return (\n                          <div key={generateString()}>\n                            <h4>{d.word}</h4>\n                            <p><b>Phonetics:</b> {d?.phonetics[0]?.text}</p>\n                            <p><b>Meanings:</b> part of speech: {d?.meanings[0]?.partOfSpeech}<br /></p>\n                            <p><b>Definitions:</b> {d?.meanings[0]?.definitions[0]?.definition}<br /></p>\n                            <p><b>Synonyms:</b> {d?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span>{synonym}, </span>)}<br /></p>\n                            <p><b>Example:</b> {d?.meanings[0]?.definitions[0]?.example}<br /></p>\n                            <p><b>Origin</b> {d?.origin}<br /></p>\n                            <button \n                              className={BTN_BG} type=\"button\" \n                              onClick={() => dispatchWord({word: data})}>ADD IN DICTIONARY</button>\n                          </div>\n                        )\n                      })\n                    )\n                  }\n                </div>\n              </Form>\n            )\n          }\n        }\n      </Formik>\n    </div>\n  )\n}\n\nexport default SearchView\n"]},"metadata":{},"sourceType":"module"}