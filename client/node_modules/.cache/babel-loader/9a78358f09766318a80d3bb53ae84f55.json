{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/DataWords.tsx\";\nimport { Button } from 'evergreen-ui';\nimport React from 'react';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DataWords = ({\n  data,\n  active,\n  newActive\n}) => {\n  var _data$phonetics$, _data$meanings$, _data$meanings$2, _data$meanings$2$defi, _data$meanings$3, _data$meanings$3$defi, _data$meanings$4, _data$meanings$4$defi;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"word-item col-11\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: data === null || data === void 0 ? void 0 : data.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"option col-1\",\n          onClick: () => newActive(data.word),\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"as\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tab-item ${active === (data === null || data === void 0 ? void 0 : data.word) ? \"show\" : \"close\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Phonetics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 12\n        }, this), \" \", data === null || data === void 0 ? void 0 : (_data$phonetics$ = data.phonetics[0]) === null || _data$phonetics$ === void 0 ? void 0 : _data$phonetics$.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Meanings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 12\n        }, this), \" part of speech: \", data === null || data === void 0 ? void 0 : (_data$meanings$ = data.meanings[0]) === null || _data$meanings$ === void 0 ? void 0 : _data$meanings$.partOfSpeech, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Definitions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 12\n        }, this), \" \", data === null || data === void 0 ? void 0 : (_data$meanings$2 = data.meanings[0]) === null || _data$meanings$2 === void 0 ? void 0 : (_data$meanings$2$defi = _data$meanings$2.definitions[0]) === null || _data$meanings$2$defi === void 0 ? void 0 : _data$meanings$2$defi.definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 79\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Synonyms:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        }, this), \" \", data === null || data === void 0 ? void 0 : (_data$meanings$3 = data.meanings[0]) === null || _data$meanings$3 === void 0 ? void 0 : (_data$meanings$3$defi = _data$meanings$3.definitions[0]) === null || _data$meanings$3$defi === void 0 ? void 0 : _data$meanings$3$defi.synonyms.map(synonym => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [synonym, \", \"]\n        }, generateString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 99\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 148\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Example:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 12\n        }, this), \" \", data === null || data === void 0 ? void 0 : (_data$meanings$4 = data.meanings[0]) === null || _data$meanings$4 === void 0 ? void 0 : (_data$meanings$4$defi = _data$meanings$4.definitions[0]) === null || _data$meanings$4$defi === void 0 ? void 0 : _data$meanings$4$defi.example, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }, this), \" \", data === null || data === void 0 ? void 0 : data.origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = DataWords;\nexport default DataWords;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataWords\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/DataWords.tsx"],"names":["Button","React","generateString","DataWords","data","active","newActive","word","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","map","synonym","example","origin"],"mappings":"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","sourcesContent":["import { Button } from 'evergreen-ui'\nimport React from 'react'\nimport { generateString } from '../../../../specialFunction/specialFunction'\n\nconst DataWords: React.FC<{data: any, active: string, newActive: any}> = ({data, active, newActive}) => {\n  return (\n    <>\n      <tr className=\"word-item col-11\">\n        <th>{data?.word}</th>\n        <>\n          <th className=\"option col-1\" onClick={() => newActive(data.word)}>...</th>\n          <Button >as</Button>\n        </>\n      </tr>\n      <div className={`tab-item ${active === data?.word? \"show\" : \"close\"}`}>\n        <p><b>Phonetics:</b> {data?.phonetics[0]?.text}</p>\n        <p><b>Meanings:</b> part of speech: {data?.meanings[0]?.partOfSpeech}<br /></p>\n        <p><b>Definitions:</b> {data?.meanings[0]?.definitions[0]?.definition}<br /></p>\n        <p><b>Synonyms:</b> {data?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span key={generateString()}>{synonym}, </span>)}<br /></p>\n        <p><b>Example:</b> {data?.meanings[0]?.definitions[0]?.example}<br /></p>\n        <p><b>Origin</b> {data?.origin}<br /></p>\n      </div>\n    </>\n  )\n}\n\nexport default DataWords\n"]},"metadata":{},"sourceType":"module"}