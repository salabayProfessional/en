{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst findPart;\n\nconst foundWord = (word, state, partIdx) => state.dictionary[partIdx].words.findIndex(item => item.word === word);\n\nconst initialState = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [{\n    part: \"one\",\n    words: []\n  }]\n};\nconst auth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    log_out: state => {\n      state.authentication = false;\n    },\n    sign_in: state => {\n      state.authentication = true;\n    },\n    add_part_own_dictionary: (state, {\n      payload\n    }) => {\n      state.dictionary = [...state.dictionary, payload];\n    },\n    add_word_own_dictionary: (state, {\n      payload\n    }) => {\n      const foundedPart = state.dictionary.length;\n      state.dictionary[foundedPart - 1].words = [...state.dictionary[foundedPart - 1].words, ...payload.word];\n    },\n    remove_word: (state, {\n      payload\n    }) => {\n      const removeWord = payload.word;\n      const findPart = state.dictionary.findIndex(part => part.part === payload.part);\n      const itWordID = foundWord(removeWord);\n      state.dictionary[findPart].words = [...state.dictionary[findPart].words.slice(0, itWordID), ...state.dictionary[findPart].words.slice(itWordID + 1)];\n    }\n  }\n});\nexport const {\n  log_out,\n  sign_in,\n  add_word_own_dictionary,\n  add_part_own_dictionary,\n  remove_word\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/store/slices/authReducer.ts"],"names":["createSlice","findPart","foundWord","word","state","partIdx","dictionary","words","findIndex","item","initialState","authentication","role","name","surname","email","photo","describe","password","part","auth","reducers","log_out","sign_in","add_part_own_dictionary","payload","add_word_own_dictionary","foundedPart","length","remove_word","removeWord","itWordID","slice","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { AuthReducer } from './types';\n\nconst findPart\nconst foundWord = (word: string, state: AuthReducer, partIdx: number) => state.dictionary[partIdx].words.findIndex((item) => item.word === word);\n\nconst initialState: AuthReducer = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [\n    {\n      part: \"one\", \n      words: [],\n    }\n  ],\n};\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n      log_out: (state) => {\n        state.authentication = false\n      },\n      sign_in: (state) => {\n        state.authentication = true\n      },\n      add_part_own_dictionary: (state, {payload}) => {\n        state.dictionary = [...state.dictionary, payload];\n      },\n      add_word_own_dictionary: (state, {payload}) => {\n        const foundedPart = state.dictionary.length\n        state.dictionary[foundedPart - 1].words = [...state.dictionary[foundedPart - 1].words, ...payload.word];\n      },\n      remove_word: (state, {payload}) => {\n        const removeWord = payload.word;\n        const findPart = state.dictionary.findIndex((part) => part.part === payload.part);\n        const itWordID = foundWord(removeWord);\n\n        state.dictionary[findPart].words = [\n          ...state.dictionary[findPart].words.slice(0, itWordID), \n          ...state.dictionary[findPart].words.slice(itWordID + 1, )\n        ]\n      },\n    },\n});\n\nexport const { log_out, sign_in, add_word_own_dictionary, add_part_own_dictionary, remove_word } = auth.actions;\n\nexport default auth.reducer;"]},"metadata":{},"sourceType":"module"}