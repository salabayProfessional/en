{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/src/pages/Profile/underPages/Create-test/Cteate-test.tsx\",\n    _s = $RefreshSig$();\n\nimport { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Table } from 'reactstrap';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateTest = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    selectedWords: []\n  };\n  const list = allWords.map(word => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: word.en\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: word.ua\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          type: \"checkbox\",\n          value: `${word.en}&${word.ua}`,\n          name: \"selectedWords\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, generateString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  });\n\n  const onSubmit = (values, setFieldValue) => {\n    const words = values.words.map(word => {\n      const idx = word.indexOf(\"&\");\n      return {\n        en: word.slice(0, idx),\n        ua: word.slice(idx + 1)\n      }; // split words on \"&\" en-word&ua-word\n    });\n    dispatch(create_test({\n      name: values.name,\n      words: words,\n      type: \"en-ua\",\n      options: values.options\n    }));\n    setFieldValue(\"name\", \"\");\n    setFieldValue(\"timer\", 60);\n    setFieldValue(\"amount\", 10);\n    setFieldValue(\"type\", \"en-ua\");\n    setFieldValue(\"words\", []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-test\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: (values, {\n          setFieldValue\n        }) => onSubmit(values, setFieldValue),\n        children: ({\n          values,\n          handleSubmit,\n          setFieldValue\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Words selected: \", values.selectedWords.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-page\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"left col-6\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-words\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"bg-dark\",\n                    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: list\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"right col-6\",\n                children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"form-control\",\n                    color: \"success\",\n                    type: \"button\",\n                    onClick: () => {\n                      if (values.selectedWords.length !== values.amount) {\n                        return alert(`You need to select a ${values.amount}`);\n                      } else {\n                        alert(\"success\");\n                        handleSubmit();\n                      }\n                    },\n                    children: \"CREATE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateTest, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateTest;\nexport default CreateTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/src/pages/Profile/underPages/Create-test/Cteate-test.tsx"],"names":["Field","Formik","Form","React","useDispatch","Button","FormGroup","Table","allWords","generateString","create_test","CreateTest","dispatch","initialValues","name","amount","type","timer","selectedWords","list","map","word","en","ua","onSubmit","values","setFieldValue","words","idx","indexOf","slice","options","handleSubmit","length","alert"],"mappings":"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","sourcesContent":["import { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Label, Table } from 'reactstrap';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { InitialValues } from './types';\n\nconst CreateTest: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    selectedWords: [],\n  }\n\n  const list = allWords.map((word: {en: string, ua: string}) => {\n    return (\n      <tr key={generateString()}>\n        <td>{word.en}</td>\n        <td>{word.ua}</td>\n        <th>\n          <Field type=\"checkbox\" value={`${word.en}&${word.ua}`} name=\"selectedWords\" />\n        </th>\n      </tr>\n    )\n  });\n\n  const onSubmit = (values: any, setFieldValue: any) => {\n      const words = values.words.map((word: string) => {\n        const idx = word.indexOf(\"&\");\n        return {en: word.slice(0, idx), ua: word.slice(idx + 1)};// split words on \"&\" en-word&ua-word\n      });\n  \n      dispatch(create_test({\n        name: values.name,\n        words: words,\n        type: \"en-ua\",\n        options: values.options\n      }));\n      \n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"timer\", 60);\n      setFieldValue(\"amount\", 10);\n      setFieldValue(\"type\", \"en-ua\");\n      setFieldValue(\"words\", []);\n  };\n\n  return (\n    <>\n    <div className=\"create-test\">\n      <Formik initialValues={initialValues} onSubmit={(values, {setFieldValue}) => onSubmit(values, setFieldValue)}>\n        {({values, handleSubmit, setFieldValue}) => {\n          return (\n            <Form>\n              <header>\n                <h2>Words selected: {values.selectedWords.length}</h2>\n              </header>\n              <div className=\"create-page\">\n                <div className=\"left col-6\">\n                  <div className=\"table-words\">\n                    <Table className=\"bg-dark\">\n                      <tbody>\n                        {\n                          list\n                        }\n                      </tbody>\n                    </Table>\n                  </div>\n                </div>\n\n                <div className=\"right col-6\">\n                  \n                  <FormGroup>\n                    <Button \n                      className=\"form-control\" \n                      color=\"success\" \n                      type=\"button\" \n                      onClick={() => {\n                        if(values.selectedWords.length !== values.amount) {\n                          return alert(`You need to select a ${values.amount}`)\n                        } else {\n                          alert(\"success\");\n                          handleSubmit();\n                        }\n                    }}\n                    >\n                      CREATE\n                    </Button>\n                  </FormGroup>\n                </div>\n              </div>\n            </Form>\n          )\n        }}\n      </Formik>\n    </div>\n    </>\n  )\n}\n\nexport default CreateTest;"]},"metadata":{},"sourceType":"module"}