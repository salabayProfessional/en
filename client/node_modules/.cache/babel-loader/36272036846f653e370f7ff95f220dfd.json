{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OwnDictionary = () => {\n  _s();\n\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n\n  const newActive = word => {\n    if (active === word) {\n      setActive(\"\");\n    } else {\n      setActive(word);\n    }\n\n    ;\n  };\n\n  const ownDictionarySplitOnPart = ownDictionary => {\n    const length = ownDictionary.length / 30;\n    if (length < 30) for (let i = 0; i < length; i) {\n      console.log(ownDictionary.splice(0, 30));\n    }\n  };\n\n  ownDictionarySplitOnPart(ownDictionary);\n  const listWords = ownDictionary.map(data => /*#__PURE__*/_jsxDEV(DataWords, {\n    data: data,\n    active: active,\n    newActive: newActive\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 49\n  }, this));\n  const dictionaryTabs = ownDictionary.map((_, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-outline-info\",\n    children: idx\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 56\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"own-dictionary\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      Left: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-tabs\",\n          children: dictionaryTabs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"bg-light\",\n          style: {\n            height: \"100%\"\n          },\n          children: listWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this),\n      Right: /*#__PURE__*/_jsxDEV(SearchWord, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this),\n      fixed: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OwnDictionary, \"KUk7RAhcz/jXjCl1nefigRTnEQo=\", false, function () {\n  return [useOwnDictionary];\n});\n\n_c = OwnDictionary;\nexport default OwnDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnDictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx"],"names":["React","useState","Table","Row","SearchWord","useOwnDictionary","DataWords","OwnDictionary","ownDictionary","active","setActive","newActive","word","ownDictionarySplitOnPart","length","i","console","log","splice","listWords","map","data","dictionaryTabs","_","idx","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AACpC,QAAMC,aAAa,GAAGH,gBAAgB,EAAtC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,SAAS,GAAIC,IAAD,IAAkB;AAClC,QAAGH,MAAM,KAAKG,IAAd,EAAoB;AAClBF,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD,KAFD,MAEM;AACJA,MAAAA,SAAS,CAACE,IAAD,CAAT;AACD;;AAAA;AACF,GAND;;AAQA,QAAMC,wBAAwB,GAAIL,aAAD,IAAwB;AACvD,UAAMM,MAAM,GAAGN,aAAa,CAACM,MAAd,GAAuB,EAAtC;AACA,QAAGA,MAAM,GAAG,EAAZ,EACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,MAAnB,EAA2BC,CAA3B,EAA8B;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYT,aAAa,CAACU,MAAd,CAAqB,CAArB,EAAwB,EAAxB,CAAZ;AACD;AACF,GAND;;AAQAL,EAAAA,wBAAwB,CAACL,aAAD,CAAxB;AAEA,QAAMW,SAAS,GAAGX,aAAa,CAACY,GAAd,CAAmBC,IAAD,iBAAU,QAAC,SAAD;AAAW,IAAA,IAAI,EAAEA,IAAjB;AAAuB,IAAA,MAAM,EAAEZ,MAA/B;AAAuC,IAAA,SAAS,EAAEE;AAAlD;AAAA;AAAA;AAAA;AAAA,UAA5B,CAAlB;AACA,QAAMW,cAAc,GAAGd,aAAa,CAACY,GAAd,CAAkB,CAACG,CAAD,EAAIC,GAAJ,kBAAY;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAA,cAA0CA;AAA1C;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,eAAE;AAAA,gCACJ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACGF;AADH;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,KAAK,EAAE;AAACG,YAAAA,MAAM,EAAE;AAAT,WAAnC;AAAA,oBAAsDN;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAOE,MAAA,KAAK,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPT;AAQE,MAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD;;GAAMZ,a;UACkBF,gB;;;KADlBE,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n\n  const newActive = (word: string) => {\n    if(active === word) {\n      setActive(\"\");\n    }else {\n      setActive(word);\n    };\n  };\n\n  const ownDictionarySplitOnPart = (ownDictionary: any) => {\n    const length = ownDictionary.length / 30;\n    if(length < 30)\n    for(let i = 0; i < length; i) {\n      console.log(ownDictionary.splice(0, 30));\n    }\n  }\n\n  ownDictionarySplitOnPart(ownDictionary);\n\n  const listWords = ownDictionary.map((data) => <DataWords data={data} active={active} newActive={newActive}/>);\n  const dictionaryTabs = ownDictionary.map((_, idx) => <button className=\"btn btn-outline-info\">{idx}</button>)\n\n  return (\n    <div className=\"own-dictionary\">\n      <Row\n        Left={<div>\n          <div className=\"dictionary-tabs\">\n            {dictionaryTabs}\n          </div>\n          <Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords}</Table>\n        </div>}\n        Right={<SearchWord />}\n        fixed=\"right\"\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n"]},"metadata":{},"sourceType":"module"}