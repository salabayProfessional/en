{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/src/component/Options/Options.tsx\",\n    _s = $RefreshSig$();\n\nimport { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport optionsData from '../../mockData/options';\nimport { set_options } from '../../store/slices/optionsReducer';\nimport './Options.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    timer: \"60\",\n    type: \"en-ua\",\n    words: \"10\",\n    random: true\n  };\n\n  const onSubmit = values => {\n    dispatch(set_options(values));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    onSubmit: values => onSubmit(values),\n    children: () => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options bg-dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"OPTIONS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options__list\",\n            children: optionsData.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"options__list-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"title-left\",\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group__checkbox\",\n                  children: item.options.map((o, id) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"option__checkbox\",\n                      children: [o, /*#__PURE__*/_jsxDEV(Field, {\n                        name: item.title,\n                        value: o,\n                        type: \"radio\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 43,\n                        columnNumber: 35\n                      }, this)]\n                    }, \"group__checkbox\" + id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 27\n                }, this)]\n              }, `options-item-${idx}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-success btn-apply\",\n          children: \"APPLY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Options, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Options;\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/src/component/Options/Options.tsx"],"names":["Field","Formik","Form","React","useDispatch","optionsData","set_options","Options","dispatch","initialValues","timer","type","words","random","onSubmit","values","map","item","idx","title","options","o","id"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,IADa;AAEpBC,IAAAA,IAAI,EAAE,OAFc;AAGpBC,IAAAA,KAAK,EAAE,IAHa;AAIpBC,IAAAA,MAAM,EAAE;AAJY,GAAtB;;AAOA,QAAMC,QAAQ,GAAIC,MAAD,IAAiB;AAChCP,IAAAA,QAAQ,CAACF,WAAW,CAACS,MAAD,CAAZ,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAEN,aADjB;AAEE,IAAA,QAAQ,EAAGM,MAAD,IAAYD,QAAQ,CAACC,MAAD,CAFhC;AAAA,cAIG,MAAM;AACL,0BACE,QAAC,IAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,sBAEIV,WAAW,CAACW,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC7B,kCACE;AAAI,gBAAA,SAAS,EAAC,oBAAd;AAAA,wCACE;AAAI,kBAAA,SAAS,EAAC,YAAd;AAAA,4BAA4BD,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,iBAAf;AAAA,4BACGF,IAAI,CAACG,OAAL,CAAaJ,GAAb,CAAiB,CAACK,CAAD,EAASC,EAAT,KAAwB;AACxC,wCACE;AAAK,sBAAA,SAAS,EAAC,kBAAf;AAAA,iCACGD,CADH,eAEE,QAAC,KAAD;AAAO,wBAAA,IAAI,EAAEJ,IAAI,CAACE,KAAlB;AAAyB,wBAAA,KAAK,EAAEE,CAAhC;AAAmC,wBAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,8BAFF;AAAA,uBAAuC,oBAAoBC,EAA3D;AAAA;AAAA;AAAA;AAAA,4BADF;AAMD,mBAPA;AADH;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAyC,gBAAeJ,GAAI,EAA5D;AAAA;AAAA;AAAA;AAAA,sBADF;AAeD,aAhBD;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA6BD;AAlCH;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CApDD;;GAAMX,O;UACaH,W;;;KADbG,O;AAsDN,eAAeA,OAAf","sourcesContent":["import { Field, Formik, Form } from 'formik';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport optionsData from '../../mockData/options';\nimport { set_options } from '../../store/slices/optionsReducer';\nimport './Options.scss';\n\nconst Options: React.FC = () => {\n  const dispatch = useDispatch()\n  \n  const initialValues = {\n    timer: \"60\",\n    type: \"en-ua\",\n    words: \"10\",\n    random: true,\n  };\n\n  const onSubmit = (values: any) => {\n    dispatch(set_options(values));\n  };\n\n  return (\n    <Formik \n      initialValues={initialValues} \n      onSubmit={(values) => onSubmit(values)}\n    >\n      {() => {\n        return (\n          <Form>\n            <div className=\"options bg-dark\">\n              <h1 className=\"title\">OPTIONS</h1>\n                <div className=\"options__list\">\n                  {\n                    optionsData.map((item, idx) => {\n                      return (\n                        <li className=\"options__list-item\" key={`options-item-${idx}`}>     \n                          <h3 className=\"title-left\">{item.title}</h3>\n                          <div className=\"group__checkbox\">\n                            {item.options.map((o: any, id: number) => {\n                              return (\n                                <div className=\"option__checkbox\" key={\"group__checkbox\" + id}>\n                                  {o}\n                                  <Field name={item.title} value={o} type=\"radio\" />\n                                </div>\n                              )\n                            })}\n                          </div>\n                        </li>\n                      )\n                    })\n                  } \n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-outline-success btn-apply\">APPLY</button>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n};\n\nexport default Options;\n"]},"metadata":{},"sourceType":"module"}