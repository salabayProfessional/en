{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'reactstrap';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport \"./Dictionary.scss\";\nimport { mockData } from './mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dictionary = () => {\n  _s();\n\n  const [isList, setIsList] = useState(false);\n\n  const toggleList = () => setIsList(!isList);\n\n  const [dictionaries, setDictionaries] = useState([]);\n  const [activeDictionary, setActiveDictionary] = useState({});\n\n  const toggleActiveListItem = name => {\n    if (name === activeDictionary) {\n      setActiveDictionary({});\n    } else {\n      setActiveDictionary(name);\n    }\n  };\n\n  useEffect(() => {\n    setDictionaries(mockData);\n  }, []);\n\n  const randomDictionaryWords = activeDictionary => {\n    setActiveDictionary({\n      name: activeDictionary.name,\n      words: shuffle(activeDictionary.words)\n    });\n  };\n\n  const tableSettingList = mockData.map(item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n        onClick: () => toggleActiveListItem(item),\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), activeDictionary.name === item.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-option\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => randomDictionaryWords(activeDictionary),\n          children: \"RANDOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictionary-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-words\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-words__party\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-dictionary-words-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              className: \"table-dictionary-words\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"EN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"UA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"YOUR\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: activeDictionary === null || activeDictionary === void 0 ? void 0 : activeDictionary.words.map((item, idx) => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      scope: \"row\",\n                      children: idx\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.en\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.ua\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: \"answer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-success btn-100\",\n              children: \"EDIT THE DICTIONARY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"filter\",\n            className: \"btn-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"Add new dictionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            onClick: () => toggleList(),\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), isList && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              hover: true,\n              children: tableSettingList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictionary, \"q0Qdwn8LPKxHm4CwdeIhK2WZ+Cw=\");\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useEffect","useState","Table","shuffle","mockData","Dictionary","isList","setIsList","toggleList","dictionaries","setDictionaries","activeDictionary","setActiveDictionary","toggleActiveListItem","name","randomDictionaryWords","words","tableSettingList","map","item","idx","en","ua"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table } from 'reactstrap';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport \"./Dictionary.scss\";\nimport { mockData } from './mockData';\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const [dictionaries, setDictionaries] = useState<any>([]);\n  const [activeDictionary, setActiveDictionary] = useState<any>({});\n\n  const toggleActiveListItem = (name: string) => {\n\n    if(name === activeDictionary) {\n      setActiveDictionary({});\n    } else {\n      setActiveDictionary(name);\n    }\n  }\n\n  useEffect(() => {\n    setDictionaries(mockData);\n  }, []);\n\n  const randomDictionaryWords = (activeDictionary: any) => {\n    setActiveDictionary({name: activeDictionary.name, words: shuffle(activeDictionary.words)});\n  };\n\n  const tableSettingList = mockData.map((item: any,) => {\n    return (\n      <>\n        <tbody onClick={() => toggleActiveListItem(item)}>\n          <tr>\n            <th scope=\"row\">\n              {item.name}\n            </th>\n          </tr>\n        </tbody>\n       {\n         activeDictionary.name === item.name && (\n          <div className=\"active-option\">\n            <button className=\"btn btn-outline-success\" onClick={() => randomDictionaryWords(activeDictionary)}>RANDOM</button>\n          </div>\n         )\n       }\n      </>\n    )\n  });\n\n  return (\n    <div className=\"dictionary-page\">\n      <div className=\"col-9\">\n        <div className=\"dictionary-words\">\n          <div className=\"dictionary-words__party\">\n            <div className=\"table-dictionary-words-wrapper\">\n              <Table className=\"table-dictionary-words\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>EN</th>\n                    <th>UA</th>\n                    <th>YOUR</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  { \n                    activeDictionary?.words.map((item: any, idx: number) => {\n                      return (\n                        <tr>\n                          <th scope=\"row\">{ idx }</th>\n                          <td>{ item.en }</td>\n                          <td>{ item.ua }</td>\n                          <td>answer</td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n            </Table>\n          <button className=\"btn btn-outline-success btn-100\">EDIT THE DICTIONARY</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-3\">\n        <div className=\"dictionary-options\">\n          <div className=\"dictionary-options__party\">\n              <input type=\"text\" placeholder=\"filter\" className=\"btn-100\" />\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">Add new dictionary</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">DELETE</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n              {\n                isList && (\n                  <div className=\"\">\n                    <Table hover>\n                      {\n                        tableSettingList\n                      }\n                    </Table>\n                  </div>\n                )\n              }\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}