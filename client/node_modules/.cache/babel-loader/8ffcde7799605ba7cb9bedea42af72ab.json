{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"evergreen-ui\";\nimport React, { useState, useMemo } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OwnDictionary = () => {\n  _s();\n\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"\");\n\n  const newActive = word => {\n    if (active === word) {\n      setActive(\"\");\n    } else {\n      setActive(word);\n    }\n\n    ;\n  };\n\n  const listWords = useMemo(() => {\n    var _ownDictionary$idx, _ownDictionary$idx$wo;\n\n    const idx = ownDictionary.findIndex(item => item.part === activePart);\n    return (_ownDictionary$idx = ownDictionary[idx]) === null || _ownDictionary$idx === void 0 ? void 0 : (_ownDictionary$idx$wo = _ownDictionary$idx.words) === null || _ownDictionary$idx$wo === void 0 ? void 0 : _ownDictionary$idx$wo.map(word => {\n      return /*#__PURE__*/_jsxDEV(DataWords, {\n        data: word,\n        active: active,\n        newActive: newActive,\n        activePart: activePart\n      }, generateString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this);\n    });\n  }, [activePart, active, ownDictionary]);\n  const dictionaryTabs = ownDictionary.map(part => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      marginY: 8,\n      marginRight: 12,\n      onClick: () => setActivePart(part.part),\n      children: part.part\n    }, generateString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  });\n  console.log(ownDictionary);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"own-dictionary\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      Left: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-tabs\",\n          children: dictionaryTabs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"bg-light\",\n          style: {\n            height: \"100%\"\n          },\n          children: listWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this),\n      Right: /*#__PURE__*/_jsxDEV(SearchWord, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this),\n      fixed: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OwnDictionary, \"oYefVL4ZF4nswZUhQePyi+BM0Cw=\", false, function () {\n  return [useOwnDictionary];\n});\n\n_c = OwnDictionary;\nexport default OwnDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnDictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx"],"names":["Button","React","useState","useMemo","Table","Row","SearchWord","useOwnDictionary","generateString","DataWords","OwnDictionary","ownDictionary","active","setActive","activePart","setActivePart","newActive","word","listWords","idx","findIndex","item","part","words","map","dictionaryTabs","console","log","height"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AACpC,QAAMC,aAAkB,GAAGJ,gBAAgB,EAA3C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMc,SAAS,GAAIC,IAAD,IAAkB;AAClC,QAAGL,MAAM,KAAKK,IAAd,EAAoB;AAClBJ,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD;;AAAA;AACF,GAND;;AAQA,QAAMC,SAAS,GAAGf,OAAO,CAAC,MAAO;AAAA;;AAC/B,UAAMgB,GAAG,GAAGR,aAAa,CAACS,SAAd,CAAyBC,IAAD,IAAeA,IAAI,CAACC,IAAL,KAAcR,UAArD,CAAZ;AAEA,iCAAOH,aAAa,CAACQ,GAAD,CAApB,gFAAO,mBAAoBI,KAA3B,0DAAO,sBAA2BC,GAA3B,CAAgCP,IAAD,IAAe;AACnD,0BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,IAAjB;AAAuB,QAAA,MAAM,EAAEL,MAA/B;AAAuC,QAAA,SAAS,EAAEI,SAAlD;AAAoF,QAAA,UAAU,EAAEF;AAAhG,SAAkEN,cAAc,EAAhF;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJM,CAAP;AAKD,GARwB,EAQtB,CAACM,UAAD,EAAaF,MAAb,EAAqBD,aAArB,CARsB,CAAzB;AAUA,QAAMc,cAAc,GAAGd,aAAa,CAACa,GAAd,CAAmBF,IAAD,IAAe;AACtD,wBACE,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,WAAW,EAAE,EAFf;AAIE,MAAA,OAAO,EAAE,MAAMP,aAAa,CAACO,IAAI,CAACA,IAAN,CAJ9B;AAAA,gBAMGA,IAAI,CAACA;AANR,OAGOd,cAAc,EAHrB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXsB,CAAvB;AAaAkB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,eAAE;AAAA,gCACJ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACGc;AADH;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,KAAK,EAAE;AAACG,YAAAA,MAAM,EAAE;AAAT,WAAnC;AAAA,oBAAsDV;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAOE,MAAA,KAAK,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPT;AAQE,MAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApDD;;GAAMR,a;UACuBH,gB;;;KADvBG,a;AAsDN,eAAeA,aAAf","sourcesContent":["import { Button } from \"evergreen-ui\";\nimport React, { useState, useMemo } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary: any = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"\");\n\n  const newActive = (word: string) => {\n    if(active === word) {\n      setActive(\"\");\n    } else {\n      setActive(word);\n    };\n  };\n\n  const listWords = useMemo(() =>  {\n    const idx = ownDictionary.findIndex((item: any) => item.part === activePart);\n\n    return ownDictionary[idx]?.words?.map((word: any) => {\n      return (\n        <DataWords data={word} active={active} newActive={newActive} key={generateString()} activePart={activePart}/>\n      )\n    })\n  }, [activePart, active, ownDictionary]);\n\n  const dictionaryTabs = ownDictionary.map((part: any) => {\n    return (\n      <Button \n        marginY={8} \n        marginRight={12}\n        key={generateString()} \n        onClick={() => setActivePart(part.part)}\n      >\n        {part.part}\n      </Button>\n    )\n  });\n\n  console.log(ownDictionary)\n\n  return (\n    <div className=\"own-dictionary\">\n      <Row\n        Left={<div>\n          <div className=\"dictionary-tabs\">\n            {dictionaryTabs}\n          </div>\n          <Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords}</Table>\n        </div>}\n        Right={<SearchWord />}\n        fixed=\"right\"\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n"]},"metadata":{},"sourceType":"module"}