{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  start: false,\n  test: null,\n  infoTest: \"\",\n  allTests: []\n};\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: state => {\n      state.test = null;\n    },\n    set_info_id: (state, {\n      payload\n    }) => {\n      state.infoTest = payload;\n    },\n    create_test: (state, {\n      payload\n    }) => {\n      state.allTests = [...state.allTests, payload];\n    }\n  },\n  extraReducers: state => state\n});\nexport const {\n  set_start_test,\n  set_test,\n  set_info_id,\n  create_test,\n  reset_test\n} = tests.actions;\nexport default tests.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/store/slices/testsReducer.ts"],"names":["createSlice","initialState","start","test","infoTest","allTests","tests","name","reducers","set_start_test","state","action","payload","set_test","reset_test","set_info_id","create_test","extraReducers","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAGA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE,KAD0B;AAEjCC,EAAAA,IAAI,EAAE,IAF2B;AAGjCC,EAAAA,QAAQ,EAAE,EAHuB;AAIjCC,EAAAA,QAAQ,EAAE;AAJuB,CAAnC;AAOA,MAAMC,KAAK,GAAGN,WAAW,CAAC;AACxBO,EAAAA,IAAI,EAAE,OADkB;AAExBN,EAAAA,YAFwB;AAGxBO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCD,MAAAA,KAAK,CAACR,KAAN,GAAcS,MAAM,CAACC,OAArB;AACD,KAHO;AAIRC,IAAAA,QAAQ,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACC,OAApB;AACD,KANO;AAORE,IAAAA,UAAU,EAAGJ,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACD,KATO;AAURY,IAAAA,WAAW,EAAE,CAACL,KAAD,EAAQ;AAACE,MAAAA;AAAD,KAAR,KAAsB;AACjCF,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,OAAjB;AACD,KAZO;AAaRI,IAAAA,WAAW,EAAE,CAACN,KAAD,EAAQ;AAACE,MAAAA;AAAD,KAAR,KAAsB;AACjCF,MAAAA,KAAK,CAACL,QAAN,GAAiB,CAAC,GAAGK,KAAK,CAACL,QAAV,EAAoBO,OAApB,CAAjB;AACD;AAfO,GAHc;AAoBxBK,EAAAA,aAAa,EAAGP,KAAD,IAAgBA;AApBP,CAAD,CAAzB;AAsBA,OAAO,MAAM;AAAED,EAAAA,cAAF;AAAkBI,EAAAA,QAAlB;AAA4BE,EAAAA,WAA5B;AAAyCC,EAAAA,WAAzC;AAAsDF,EAAAA;AAAtD,IAAqER,KAAK,CAACY,OAAjF;AAEP,eAAeZ,KAAK,CAACa,OAArB","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { TestsReducer } from './types';\n\nconst initialState: TestsReducer = {\n  start: false,\n  test: null,\n  infoTest: \"\",\n  allTests: [], \n};\n\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: (state) => {\n      state.test = null;\n    },\n    set_info_id: (state, {payload}) => {\n      state.infoTest = payload;\n    },\n    create_test: (state, {payload}) => {\n      state.allTests = [...state.allTests, payload];\n    },\n  },\n  extraReducers: (state: any) => state\n});\nexport const { set_start_test, set_test, set_info_id, create_test, reset_test } = tests.actions;\n\nexport default tests.reducer;"]},"metadata":{},"sourceType":"module"}