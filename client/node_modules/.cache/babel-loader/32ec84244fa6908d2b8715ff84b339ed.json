{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./SearchWord.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getResource = async url => {\n  axios.get(url).then(d => d).catch(e => console.log(e, \"un known word!\"));\n};\n\nconst SearchWord = () => {\n  _s();\n\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  ;\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const initialState = {\n    word: \"\"\n  };\n\n  const onSubmit = async values => {\n    setLoading(true);\n    axios.get(API_BASE + values.word).then(d => {\n      setData(d.data);\n      setLoading(false);\n    }).then(() => console.log(data));\n  };\n\n  useEffect(() => console.log(\"update\"), [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-word col-12\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      initialValues: initialState,\n      children: () => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"search-panel col-12\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control btn-bg\",\n            placeholder: \"word\",\n            name: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-panel\",\n            onClick: () => console.log(data),\n            children: [data === null || data === void 0 ? void 0 : data.map(d => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: d.word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Phonetics:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 30\n                  }, this), \" \", d.phonetics[0].text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"meanings\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Meanings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 27\n                  }, this), \" part of speech: \", d.meanings[0].partOfSpeech, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 88\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Definitions:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 29\n                  }, this), \" \", d.meanings[0].definitions[0].definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 90\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"synonyms\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Synonyms:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 29\n                  }, this), \" \", d.meanings[0].definitions[0].synonyms.map(synonym => synonym + \", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 126\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"example\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Example:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 29\n                  }, this), \" \", d.meanings[0].definitions[0].example, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 83\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Origin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 29\n                  }, this), \" \", d.origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this);\n            }), loading && \"Loading...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchWord, \"e2WPURhZO+vgWkProC5DhPL24KA=\");\n\n_c = SearchWord;\nexport default SearchWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWord\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx"],"names":["axios","Field","Form","Formik","React","useEffect","useState","getResource","url","get","then","d","catch","e","console","log","SearchWord","API_BASE","data","setData","loading","setLoading","initialState","word","onSubmit","values","map","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\"\nimport \"./SearchWord.scss\";\n\nconst getResource = async (url: string) => {\n  axios.get(url)\n   .then((d) => d)\n   .catch(e => console.log(e, \"un known word!\"));\n };\n\nconst SearchWord: React.FC = () => {\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n\n  interface Data {\n    word: string,\n    phonetics: {\n      audio: string\n      text: string\n    }[], \n    meanings: {partOfSpeech: string, definitions: {\n      definition: string, \n      example: string, \n      synonyms: string[], \n      antonyms: string[],\n    }[]}[],\n    origin: string,\n    phonetic: string\n  };\n\n  const [data, setData] = useState<Data[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  interface InitialState {\n    word: string\n  }\n\n  const initialState : InitialState= {\n    word: \"\",\n  }\n\n  const onSubmit = async (values: InitialState) => {\n    setLoading(true);\n    axios.get(API_BASE + values.word)\n    .then((d: any) => {\n      setData(d.data);\n      setLoading(false);\n    })\n    .then(() => console.log(data))\n  };\n\n  useEffect(() => console.log(\"update\"), [data]);\n\n  return (\n    <div className=\"search-word col-12\">\n      <Formik  \n        onSubmit={onSubmit}\n        initialValues={initialState}\n      >\n        {\n          () => {\n            return (\n              <Form className=\"search-panel col-12\">\n                <Field className=\"form-control btn-bg\" placeholder=\"word\" name=\"word\" />\n                <div className=\"info-panel\" onClick={() => console.log(data)}>\n                  {\n                    data?.map((d: Data) => {\n                      return (\n                        <div>\n                          <h4>{d.word}</h4>\n                          <p><b>Phonetics:</b> {d.phonetics[0].text}</p>\n                          <p className=\"meanings\">\n                          <b>Meanings:</b> part of speech: {d.meanings[0].partOfSpeech}<br />\n                          </p>\n                          <p>\n                            <b>Definitions:</b> {d.meanings[0].definitions[0].definition}<br />\n                          </p>\n                          <p className=\"synonyms\">\n                            <b>Synonyms:</b> {d.meanings[0].definitions[0].synonyms.map((synonym: string) => synonym + \", \")}<br />\n                          </p>\n                          <p className=\"example\">\n                            <b>Example:</b> {d.meanings[0].definitions[0].example}<br />\n                          </p>\n                          <p>\n                            <b>Origin</b> {d.origin}<br />\n                          </p>\n                        </div>\n                      )\n                    })\n                  }\n                  { loading && \"Loading...\"}\n                </div>\n              </Form>\n            )\n          }\n        }\n      </Formik>\n    </div>\n  )\n};\n\nexport default SearchWord;\n"]},"metadata":{},"sourceType":"module"}