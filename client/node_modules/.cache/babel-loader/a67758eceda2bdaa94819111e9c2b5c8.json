{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../../hooks/useRedux\";\nimport { add_word_own_dictionary, add_part_own_dictionary } from \"../../store/slices/authReducer\";\nimport SearchView from \"./SearchView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchWord = () => {\n  _s();\n\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n  const ownDictionary = useAppSelector(state => state.auth.dictionary);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  ;\n  const initialState = {\n    word: \"\"\n  };\n\n  const onSubmit = async values => {\n    setLoading(true);\n    axios.get(API_BASE + values.word).then(d => {\n      setData(d.data);\n      setLoading(false);\n    });\n  };\n\n  const dispatchOwnhWord = data => {\n    var _ownDictionary, _ownDictionary2, _ownDictionary2$words;\n\n    const length = ownDictionary.length; //last idx\n\n    if (ownDictionary.length === 0 || ((_ownDictionary = ownDictionary[length - 1]) === null || _ownDictionary === void 0 ? void 0 : _ownDictionary.words.length) >= 30) {\n      dispatch(add_part_own_dictionary({\n        part: `${length + 1} part`,\n        words: []\n      }));\n      dispatch(add_word_own_dictionary(data));\n    }\n\n    ;\n\n    if (((_ownDictionary2 = ownDictionary[length - 1]) === null || _ownDictionary2 === void 0 ? void 0 : (_ownDictionary2$words = _ownDictionary2.words) === null || _ownDictionary2$words === void 0 ? void 0 : _ownDictionary2$words.length) < 30) {\n      dispatch(add_word_own_dictionary(data));\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchView, {\n    initialState: initialState,\n    data: data,\n    dispatchWord: dispatchWord,\n    onSubmit: onSubmit,\n    loading: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SearchWord, \"NnbBkWmnkbDqS18VfFCxQIUFTIM=\", false, function () {\n  return [useDispatch, useAppSelector];\n});\n\n_c = SearchWord;\nexport default SearchWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWord\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx"],"names":["axios","React","useState","useDispatch","useAppSelector","add_word_own_dictionary","add_part_own_dictionary","SearchView","SearchWord","API_BASE","dispatch","ownDictionary","state","auth","dictionary","data","setData","loading","setLoading","initialState","word","onSubmit","values","get","then","d","dispatchOwnhWord","length","words","part","dispatchWord"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gCAAjE;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAMC,QAAQ,GAAG,kDAAjB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,aAAa,GAAGP,cAAc,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,UAArB,CAApC;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAa,EAAb,CAAhC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAIC;AAED,QAAMiB,YAA2B,GAAE;AACjCC,IAAAA,IAAI,EAAE;AAD2B,GAAnC;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAgC;AAC/CJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAlB,IAAAA,KAAK,CAACuB,GAAN,CAAUd,QAAQ,GAAGa,MAAM,CAACF,IAA5B,EACCI,IADD,CACOC,CAAD,IAAY;AAChBT,MAAAA,OAAO,CAACS,CAAC,CAACV,IAAH,CAAP;AACAG,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GAPD;;AASA,QAAMQ,gBAAgB,GAAIX,IAAD,IAAe;AAAA;;AACtC,UAAMY,MAAM,GAAGhB,aAAa,CAACgB,MAA7B,CADsC,CACD;;AAErC,QAAGhB,aAAa,CAACgB,MAAd,KAAyB,CAAzB,IAA8B,mBAAAhB,aAAa,CAACgB,MAAM,GAAG,CAAV,CAAb,kEAA2BC,KAA3B,CAAiCD,MAAjC,KAA2C,EAA5E,EAAgF;AAC9EjB,MAAAA,QAAQ,CAACJ,uBAAuB,CAAC;AAACuB,QAAAA,IAAI,EAAG,GAAEF,MAAM,GAAG,CAAE,OAArB;AAA6BC,QAAAA,KAAK,EAAE;AAApC,OAAD,CAAxB,CAAR;AACAlB,MAAAA,QAAQ,CAACL,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACD;;AAAA;;AACD,QAAG,oBAAAJ,aAAa,CAACgB,MAAM,GAAG,CAAV,CAAb,6FAA2BC,KAA3B,gFAAkCD,MAAlC,IAA2C,EAA9C,EAAkD;AAChDjB,MAAAA,QAAQ,CAACL,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACD;;AAAA;AACF,GAVD;;AAYA,sBAAO,QAAC,UAAD;AACL,IAAA,YAAY,EAAEI,YADT;AAEL,IAAA,IAAI,EAAEJ,IAFD;AAGL,IAAA,YAAY,EAAEe,YAHT;AAIL,IAAA,QAAQ,EAAET,QAJL;AAKL,IAAA,OAAO,EAAEJ;AALJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAOD,CA7CD;;GAAMT,U;UAEaL,W,EAEKC,c;;;KAJlBI,U;AA+CN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../../hooks/useRedux\";\nimport { add_word_own_dictionary, add_part_own_dictionary } from \"../../store/slices/authReducer\";\nimport { WordData } from \"../../store/slices/types\";\nimport SearchView from \"./SearchView\";\n\nconst SearchWord: React.FC = () => {\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n\n  const ownDictionary = useAppSelector(state => state.auth.dictionary);\n\n  const [data, setData] = useState<WordData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  interface InitialState {\n    word: string\n  };\n\n  const initialState : InitialState= {\n    word: \"\",\n  };\n\n  const onSubmit = async (values: InitialState) => {\n    setLoading(true);\n    axios.get(API_BASE + values.word)\n    .then((d: any) => {\n      setData(d.data);\n      setLoading(false);\n    })\n  };\n\n  const dispatchOwnhWord = (data: any) => {\n    const length = ownDictionary.length; //last idx\n\n    if(ownDictionary.length === 0 || ownDictionary[length - 1]?.words.length >= 30) {\n      dispatch(add_part_own_dictionary({part: `${length + 1} part`, words: []}));\n      dispatch(add_word_own_dictionary(data));\n    };\n    if(ownDictionary[length - 1]?.words?.length < 30) {\n      dispatch(add_word_own_dictionary(data));\n    };\n  };\n\n  return <SearchView \n    initialState={initialState}\n    data={data}\n    dispatchWord={dispatchWord}\n    onSubmit={onSubmit}\n    loading={loading}\n  />\n};\n\nexport default SearchWord;\n"]},"metadata":{},"sourceType":"module"}