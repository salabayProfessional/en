{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/src/pages/Profile/underPages/All-test/All-test.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalInfo } from '../../../../component/Modal/Modals';\nimport \"./All-test.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllTest = () => {\n  _s();\n\n  const allTests = useSelector(state => state.tests.allTests);\n  const [isModal, toggleIsModal] = useState(false);\n  const [infoID, setInfoId] = useState(\"\");\n\n  const toggleIsInfoModal = () => toggleIsModal(!isModal);\n\n  const list = allTests.map(test => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-danger btn-center\",\n        type: \"button\",\n        onClick: () => {\n          setInfoId(test.name);\n          toggleIsInfoModal();\n        },\n        children: \"Kva Kva!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ModalInfo, {\n      toggle: toggleIsInfoModal,\n      info: allTests.find(test => test.name === infoID),\n      isModal: isModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"All-test\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"All-test__inner\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllTest, \"5RJT5zQe6B07c67i41byU5sdj88=\", false, function () {\n  return [useSelector];\n});\n\n_c = AllTest;\nexport default AllTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllTest\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/src/pages/Profile/underPages/All-test/All-test.tsx"],"names":["React","useState","useSelector","Button","ModalInfo","AllTest","allTests","state","tests","isModal","toggleIsModal","infoID","setInfoId","toggleIsInfoModal","list","map","test","name","find"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,oCAA1B;AAEA,OAAO,iBAAP;;;;AAYA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAwBA,KAAK,CAACC,KAAN,CAAYF,QAArC,CAA5B;AACA,QAAM,CAACG,OAAD,EAAUC,aAAV,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMY,iBAAiB,GAAG,MAAMH,aAAa,CAAC,CAACD,OAAF,CAA7C;;AAEA,QAAMK,IAAI,GAAGR,QAAQ,CAACS,GAAT,CAAcC,IAAD,IAAgB;AACxC,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBAAuBA,IAAI,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,2BAAlB;AAA8C,QAAA,IAAI,EAAC,QAAnD;AAA4D,QAAA,OAAO,EAAE,MAAM;AACzEL,UAAAA,SAAS,CAACI,IAAI,CAACC,IAAN,CAAT;AACAJ,UAAAA,iBAAiB;AAClB,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVY,CAAb;AAYA,sBACE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAEA,iBADV;AAEE,MAAA,IAAI,EAAEP,QAAQ,CAACY,IAAT,CAAeF,IAAD,IAAgBA,IAAI,CAACC,IAAL,KAAcN,MAA5C,CAFR;AAGE,MAAA,OAAO,EAAEF;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACIK;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAeD,CAjCD;;GAAMT,O;UACaH,W;;;KADbG,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalInfo } from '../../../../component/Modal/Modals';\nimport { RootReducer } from '../../../../store/slices/types';\nimport \"./All-test.scss\";\n\ninterface Test {\n  name: string\n  options: {\n    timer: number,\n    amount: number,\n  }\n  type: string\n  words: {en: string, ua: string}[]\n}\n\nconst AllTest: React.FC = () => {\n  const allTests = useSelector((state: RootReducer) => state.tests.allTests);\n  const [isModal, toggleIsModal] = useState(false);\n  const [infoID, setInfoId] = useState(\"\");\n  const toggleIsInfoModal = () => toggleIsModal(!isModal);\n\n  const list = allTests.map((test: Test) => {\n    return (\n      <div className=\"test__item\">\n        <h3 className=\"title\">{test.name}</h3>\n        <Button className=\"btn btn-danger btn-center\" type=\"button\" onClick={() => {\n          setInfoId(test.name);\n          toggleIsInfoModal();\n        }}>Kva Kva!</Button>\n      </div>\n    )\n  })\n\n  return (\n    <>\n      <ModalInfo \n        toggle={toggleIsInfoModal} \n        info={allTests.find((test: Test) => test.name === infoID)} \n        isModal={isModal} \n      />\n      <div className=\"All-test\">\n        <h1>All tests</h1>\n        <div className=\"All-test__inner\">\n          { list }\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AllTest;"]},"metadata":{},"sourceType":"module"}