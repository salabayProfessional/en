{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BTN_BG } from \"../../classes\";\nimport { add_word_own_dictionary } from \"../../store/slices/authReducer\";\nimport \"./SearchWord.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getResource = async url => {\n  axios.get(url).then(d => d).catch(e => console.log(e, \"un known word!\"));\n};\n\nconst SearchWord = () => {\n  _s();\n\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n  ;\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const initialState = {\n    word: \"\"\n  };\n\n  const onSubmit = async values => {\n    setLoading(true);\n    axios.get(API_BASE + values.word).then(d => {\n      setData(d.data);\n      setLoading(false);\n    }).then(() => console.log(data));\n  };\n\n  useEffect(() => console.log(\"update\"), [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-word col-12\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: onSubmit,\n      initialValues: initialState,\n      children: () => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"search-panel col-12\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control btn-bg\",\n            placeholder: \"word\",\n            name: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-panel\",\n            onClick: () => console.log(data),\n            children: loading ? \"LOADING...\" : data === null || data === void 0 ? void 0 : data.map(d => {\n              var _d$phonetics$, _d$meanings$, _d$meanings$2, _d$meanings$2$definit, _d$meanings$3, _d$meanings$3$definit, _d$meanings$4, _d$meanings$4$definit;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: d.word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Phonetics:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$phonetics$ = d.phonetics[0]) === null || _d$phonetics$ === void 0 ? void 0 : _d$phonetics$.text]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Meanings:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 32\n                  }, this), \" part of speech: \", d === null || d === void 0 ? void 0 : (_d$meanings$ = d.meanings[0]) === null || _d$meanings$ === void 0 ? void 0 : _d$meanings$.partOfSpeech, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 95\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Definitions:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$2 = d.meanings[0]) === null || _d$meanings$2 === void 0 ? void 0 : (_d$meanings$2$definit = _d$meanings$2.definitions[0]) === null || _d$meanings$2$definit === void 0 ? void 0 : _d$meanings$2$definit.definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 96\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Synonyms:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$3 = d.meanings[0]) === null || _d$meanings$3 === void 0 ? void 0 : (_d$meanings$3$definit = _d$meanings$3.definitions[0]) === null || _d$meanings$3$definit === void 0 ? void 0 : _d$meanings$3$definit.synonyms.map(synonym => synonym + \", \"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 132\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Example:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$4 = d.meanings[0]) === null || _d$meanings$4 === void 0 ? void 0 : (_d$meanings$4$definit = _d$meanings$4.definitions[0]) === null || _d$meanings$4$definit === void 0 ? void 0 : _d$meanings$4$definit.example, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 89\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Origin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 32\n                  }, this), \" \", d === null || d === void 0 ? void 0 : d.origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: BTN_BG,\n                  type: true,\n                  onClick: () => dispatch(add_word_own_dictionary(d.word)),\n                  children: \"ADD IN DICTIONARY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchWord, \"dnZVhNVdK0on7Qto2QWOIdO9pU8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchWord;\nexport default SearchWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWord\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/component/SearchWord/SearchWord.tsx"],"names":["axios","Field","Form","Formik","React","useEffect","useState","useDispatch","BTN_BG","add_word_own_dictionary","getResource","url","get","then","d","catch","e","console","log","SearchWord","API_BASE","dispatch","data","setData","loading","setLoading","initialState","word","onSubmit","values","map","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { BTN_BG } from \"../../classes\";\nimport { add_word_own_dictionary } from \"../../store/slices/authReducer\";\nimport \"./SearchWord.scss\";\n\nconst getResource = async (url: string) => {\n  axios.get(url)\n   .then((d) => d)\n   .catch(e => console.log(e, \"un known word!\"));\n };\n\nconst SearchWord: React.FC = () => {\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n  interface Data {\n    word: string,\n    phonetics: {\n      audio: string\n      text: string\n    }[], \n    meanings: {partOfSpeech: string, definitions: {\n      definition: string, \n      example: string, \n      synonyms: string[], \n      antonyms: string[],\n    }[]}[],\n    origin: string,\n    phonetic: string\n  };\n\n  const [data, setData] = useState<Data[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  interface InitialState {\n    word: string\n  }\n\n  const initialState : InitialState= {\n    word: \"\",\n  }\n\n  const onSubmit = async (values: InitialState) => {\n    setLoading(true);\n    axios.get(API_BASE + values.word)\n    .then((d: any) => {\n      setData(d.data);\n      setLoading(false);\n    })\n    .then(() => console.log(data))\n  };\n\n  useEffect(() => console.log(\"update\"), [data]);\n\n  return (\n    <div className=\"search-word col-12\">\n      <Formik  \n        onSubmit={onSubmit}\n        initialValues={initialState}\n      >\n        {\n          () => {\n            return (\n              <Form className=\"search-panel col-12\">\n                <Field className=\"form-control btn-bg\" placeholder=\"word\" name=\"word\" />\n                <div className=\"info-panel\" onClick={() => console.log(data)}>\n                  {\n                    loading? \"LOADING...\" : (\n                      data?.map((d: Data) => {\n                        return (\n                          <div>\n                            <h4>{d.word}</h4>\n                            <p><b>Phonetics:</b> {d?.phonetics[0]?.text}</p>\n                            <p><b>Meanings:</b> part of speech: {d?.meanings[0]?.partOfSpeech}<br /></p>\n                            <p><b>Definitions:</b> {d?.meanings[0]?.definitions[0]?.definition}<br /></p>\n                            <p><b>Synonyms:</b> {d?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => synonym + \", \")}<br /></p>\n                            <p><b>Example:</b> {d?.meanings[0]?.definitions[0]?.example}<br /></p>\n                            <p><b>Origin</b> {d?.origin}<br /></p>\n                            <button className={BTN_BG} type onClick={() => dispatch(add_word_own_dictionary(d.word))}>ADD IN DICTIONARY</button>\n                          </div>\n                        )\n                      })\n                    )\n                  }\n                </div>\n              </Form>\n            )\n          }\n        }\n      </Formik>\n    </div>\n  )\n};\n\nexport default SearchWord;\n"]},"metadata":{},"sourceType":"module"}