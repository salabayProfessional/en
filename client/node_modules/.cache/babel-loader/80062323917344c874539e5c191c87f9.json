{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OwnDictionary = () => {\n  _s();\n\n  var _ownDictionary$i, _ownDictionary$i$word;\n\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"\");\n\n  const newActive = word => {\n    if (active === word) {\n      setActive(\"\");\n    } else {\n      setActive(word);\n    }\n\n    ;\n  };\n\n  const idx = ownDictionary.findIndex(item => item.part === active);\n  const listWords = (_ownDictionary$i = ownDictionary[i]) === null || _ownDictionary$i === void 0 ? void 0 : (_ownDictionary$i$word = _ownDictionary$i.words) === null || _ownDictionary$i$word === void 0 ? void 0 : _ownDictionary$i$word.map(word => {\n    return /*#__PURE__*/_jsxDEV(DataWords, {\n      data: word,\n      active: active,\n      newActive: newActive\n    }, generateString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  });\n  const dictionaryTabs = ownDictionary.map(part => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-info\",\n      onClick: () => setActivePart(part.part),\n      children: part.part\n    }, generateString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"own-dictionary\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      Left: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-tabs\",\n          children: dictionaryTabs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"bg-light\",\n          style: {\n            height: \"100%\"\n          },\n          children: listWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this),\n      Right: /*#__PURE__*/_jsxDEV(SearchWord, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this),\n      fixed: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OwnDictionary, \"xY7z6q/sdUtOHYuTz/BD/IzO+AA=\", false, function () {\n  return [useOwnDictionary];\n});\n\n_c = OwnDictionary;\nexport default OwnDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnDictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx"],"names":["React","useState","Table","Row","SearchWord","useOwnDictionary","generateString","DataWords","OwnDictionary","ownDictionary","active","setActive","activePart","setActivePart","newActive","word","idx","findIndex","item","part","listWords","i","words","map","dictionaryTabs","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,cAAT,QAA+B,6CAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,aAAuB,GAAG,MAAM;AAAA;;AAAA;;AACpC,QAAMC,aAAkB,GAAGJ,gBAAgB,EAA3C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMa,SAAS,GAAIC,IAAD,IAAkB;AAClC,QAAGL,MAAM,KAAKK,IAAd,EAAoB;AAClBJ,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD,KAFD,MAEM;AACJA,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD;;AAAA;AACF,GAND;;AAQA,QAAMC,GAAG,GAAGP,aAAa,CAACQ,SAAd,CAAyBC,IAAD,IAAeA,IAAI,CAACC,IAAL,KAAcT,MAArD,CAAZ;AAEA,QAAMU,SAAS,uBAAGX,aAAa,CAACY,CAAD,CAAhB,8EAAG,iBAAkBC,KAArB,0DAAG,sBAAyBC,GAAzB,CAA8BR,IAAD,IAAe;AAC5D,wBACE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEA,IAAjB;AAAuB,MAAA,MAAM,EAAEL,MAA/B;AAAuC,MAAA,SAAS,EAAEI;AAAlD,OAAkER,cAAc,EAAhF;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJiB,CAAlB;AAMA,QAAMkB,cAAc,GAAGf,aAAa,CAACc,GAAd,CAAmBJ,IAAD,IAAe;AACtD,wBACE;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,OAAO,EAAE,MAAMN,aAAa,CAACM,IAAI,CAACA,IAAN,CAH9B;AAAA,gBAKGA,IAAI,CAACA;AALR,OACOb,cAAc,EADrB;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVsB,CAAvB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,GAAD;AACE,MAAA,IAAI,eAAE;AAAA,gCACJ;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACGkB;AADH;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAnC;AAAA,oBAAsDL;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,cADR;AAOE,MAAA,KAAK,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPT;AAQE,MAAA,KAAK,EAAC;AARR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA/CD;;GAAMZ,a;UACuBH,gB;;;KADvBG,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary: any = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"\");\n\n  const newActive = (word: string) => {\n    if(active === word) {\n      setActive(\"\");\n    }else {\n      setActive(word);\n    };\n  };\n\n  const idx = ownDictionary.findIndex((item: any) => item.part === active);\n\n  const listWords = ownDictionary[i]?.words?.map((word: any) => {\n    return (\n      <DataWords data={word} active={active} newActive={newActive} key={generateString()}/>\n    )\n  });\n\n  const dictionaryTabs = ownDictionary.map((part: any) => {\n    return (\n      <button \n        key={generateString()} \n        className=\"btn btn-outline-info\"\n        onClick={() => setActivePart(part.part)}\n      >\n        {part.part}\n      </button>\n    )\n  });\n\n  return (\n    <div className=\"own-dictionary\">\n      <Row\n        Left={<div>\n          <div className=\"dictionary-tabs\">\n            {dictionaryTabs}\n          </div>\n          <Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords}</Table>\n        </div>}\n        Right={<SearchWord />}\n        fixed=\"right\"\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n"]},"metadata":{},"sourceType":"module"}