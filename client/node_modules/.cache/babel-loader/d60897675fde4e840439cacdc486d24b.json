{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst findPart = (partName, state) => state.dictionary.findIndex(item => item.part === partName);\n\nconst foundWord = (word, state, partIdx) => state.dictionary[partIdx].words.findIndex(item => item.word === word);\n\nconst initialState = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [{\n    part: \"one\",\n    words: []\n  }]\n};\nconst auth = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    log_out: state => {\n      state.authentication = false;\n    },\n    sign_in: state => {\n      state.authentication = true;\n    },\n    add_part_own_dictionary: (state, {\n      payload\n    }) => {\n      state.dictionary = [...state.dictionary, payload];\n    },\n    add_word_own_dictionary: (state, {\n      payload\n    }) => {\n      const foundedPart = state.dictionary.length;\n      state.dictionary[foundedPart - 1].words = [...state.dictionary[foundedPart - 1].words, ...payload.word];\n    },\n    remove_word: (state, {\n      payload\n    }) => {\n      const {\n        word,\n        part\n      } = payload;\n      const foundedPart = findPart(part, state);\n      const foundedWord = foundWord(word, state, foundedPart);\n      state.dictionary[foundedPart].words = [...state.dictionary[foundedPart].words.slice(0, itWordID), ...state.dictionary[foundedPart].words.slice(itWordID + 1)];\n    }\n  }\n});\nexport const {\n  log_out,\n  sign_in,\n  add_word_own_dictionary,\n  add_part_own_dictionary,\n  remove_word\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/store/slices/authReducer.ts"],"names":["createSlice","findPart","partName","state","dictionary","findIndex","item","part","foundWord","word","partIdx","words","initialState","authentication","role","name","surname","email","photo","describe","password","auth","reducers","log_out","sign_in","add_part_own_dictionary","payload","add_word_own_dictionary","foundedPart","length","remove_word","foundedWord","slice","itWordID","actions","reducer"],"mappings":"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","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport { AuthReducer } from './types';\n\nconst findPart = (partName: string, state: AuthReducer) => state.dictionary.findIndex((item) => item.part === partName);\nconst foundWord = (word: string, state: AuthReducer, partIdx: number) => state.dictionary[partIdx].words.findIndex((item) => item.word === word);\n\nconst initialState: AuthReducer = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [\n    {\n      part: \"one\", \n      words: [],\n    }\n  ],\n};\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n      log_out: (state) => {\n        state.authentication = false\n      },\n      sign_in: (state) => {\n        state.authentication = true\n      },\n      add_part_own_dictionary: (state, {payload}) => {\n        state.dictionary = [...state.dictionary, payload];\n      },\n      add_word_own_dictionary: (state, {payload}) => {\n        const foundedPart = state.dictionary.length\n        state.dictionary[foundedPart - 1].words = [...state.dictionary[foundedPart - 1].words, ...payload.word];\n      },\n      remove_word: (state, {payload}) => {\n        const {word, part} = payload;\n        const foundedPart = findPart(part, state);\n        const foundedWord = foundWord(word, state, foundedPart);\n\n        state.dictionary[foundedPart].words = [\n          ...state.dictionary[foundedPart].words.slice(0, itWordID), \n          ...state.dictionary[foundedPart].words.slice(itWordID + 1, )\n        ]\n      },\n    },\n});\n\nexport const { log_out, sign_in, add_word_own_dictionary, add_part_own_dictionary, remove_word } = auth.actions;\n\nexport default auth.reducer;"]},"metadata":{},"sourceType":"module"}