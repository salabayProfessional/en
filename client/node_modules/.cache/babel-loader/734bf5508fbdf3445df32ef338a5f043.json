{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/src/component/ModalNotice/ModalNotice.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, Modal, ModalFooter, ModalHeader } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalResult = ({\n  modal,\n  toggle\n}) => {\n  _s();\n\n  const [redirect, setRedirect] = useState(false);\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"See result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        w: true,\n        onClick: () => {\n          setRedirect(true);\n          toggle();\n        },\n        children: \"See\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalResult, \"CWdZc/XNNsJ2bMqPvAv6+207j+o=\");\n\n_c = ModalResult;\nexport default ModalResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalResult\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/src/component/ModalNotice/ModalNotice.tsx"],"names":["React","useState","Redirect","Button","Modal","ModalFooter","ModalHeader","ModalResult","modal","toggle","redirect","setRedirect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,WAArC,QAAwD,YAAxD;;;AAEA,MAAMC,WAA2D,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAAA;;AAEvF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,MAAGS,QAAH,EAAa;AACX,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,KAAf;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,CAAC,MAAzB;AAA0B,QAAA,OAAO,EAAE,MAAM;AACvCE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,UAAAA,MAAM;AACP,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;GAAMF,W;;KAAAA,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, Modal, ModalFooter, ModalHeader } from 'reactstrap';\n\nconst ModalResult: React.FC<{modal: boolean, toggle: () => void}> = ({modal, toggle}) => {\n\n  const [redirect, setRedirect] = useState(false);\n\n  if(redirect) {\n    return <Redirect to=\"/result\" />\n  }\n\n  return (\n    <Modal isOpen={modal}>\n      <ModalHeader toggle={toggle}>See result</ModalHeader>\n      <ModalFooter>\n        <Button color=\"primary\" w onClick={() => {\n          setRedirect(true);\n          toggle();\n        }}>See</Button>\n      </ModalFooter>\n    </Modal>\n  )\n};\n\nexport default ModalResult;\n"]},"metadata":{},"sourceType":"module"}