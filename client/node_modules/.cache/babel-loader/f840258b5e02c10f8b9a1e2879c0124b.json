{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'reactstrap';\nimport \"./Dictionary.scss\";\nimport { mockData } from './mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dictionary = () => {\n  _s();\n\n  const [isList, setIsList] = useState(false);\n\n  const toggleList = () => setIsList(!isList);\n\n  const [dictionaries, setDictionaries] = useState([]);\n  const [activeListItem, setActiveListItem] = useState({});\n\n  const toggleActiveListItem = name => {\n    if (name === activeListItem) {\n      setActiveListItem(\"\");\n    } else {\n      setActiveListItem(name);\n    }\n  };\n\n  useEffect(() => {\n    setDictionaries(mockData);\n  }, []);\n\n  const randomDictionaryWords = activeDictionary => {\n    setActiveListItem();\n  };\n\n  const tableList = dictionaries.map(item => {\n    const innerList = item.words.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: idx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.ua\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-dictionary-words-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"table-dictionary-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"EN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"UA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"YOUR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: innerList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-100\",\n        children: \"EDIT THE DICTIONARY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  });\n  const tableSettingList = mockData.map(item => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n        onClick: () => toggleActiveListItem(item),\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), activeListItem.name === item.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-option\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success\",\n          onClick: () => randomDictionaryWords(activeListItem),\n          children: \"RANDOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictionary-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-words\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-words__party\",\n          children: tableList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"filter\",\n            className: \"btn-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"Add new dictionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"DELETE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            onClick: () => toggleList(),\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), isList && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              hover: true,\n              children: tableSettingList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictionary, \"fd6r6in9TL15f7R62K07+KM82jM=\");\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useEffect","useState","Table","mockData","Dictionary","isList","setIsList","toggleList","dictionaries","setDictionaries","activeListItem","setActiveListItem","toggleActiveListItem","name","randomDictionaryWords","activeDictionary","tableList","map","item","innerList","words","idx","en","ua","tableSettingList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;;;;AAEA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMM,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAM,EAAN,CAAhD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAM,EAAN,CAApD;;AAEA,QAAMW,oBAAoB,GAAIC,IAAD,IAAkB;AAE7C,QAAGA,IAAI,KAAKH,cAAZ,EAA4B;AAC1BC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,CAACE,IAAD,CAAjB;AACD;AACF,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,eAAe,CAACN,QAAD,CAAf;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,qBAAqB,GAAIC,gBAAD,IAA2B;AACvDJ,IAAAA,iBAAiB;AAClB,GAFD;;AAIA,QAAMK,SAAS,GAAGR,YAAY,CAACS,GAAb,CAAkBC,IAAD,IAAe;AAEhD,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAe,CAACC,IAAD,EAAYG,GAAZ,KAA4B;AAC3D,0BACE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMJ,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATiB,CAAlB;AAWA,wBACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,wBAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBACIJ;AADJ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD,GA/BiB,CAAlB;AAiCA,QAAMK,gBAAgB,GAAGrB,QAAQ,CAACc,GAAT,CAAcC,IAAD,IAAgB;AACpD,wBACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAE,MAAMN,oBAAoB,CAACM,IAAD,CAA1C;AAAA,+BACE;AAAA,iCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,sBACGA,IAAI,CAACL;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EASGH,cAAc,CAACG,IAAf,KAAwBK,IAAI,CAACL,IAA7B,iBACC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,yBAAlB;AAA4C,UAAA,OAAO,EAAE,MAAMC,qBAAqB,CAACJ,cAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA,oBADF;AAkBD,GAnBwB,CAAzB;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBACIM;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,QAA/B;AAAwC,YAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAII;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAoD,YAAA,OAAO,EAAE,MAAMT,UAAU,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGIF,MAAM,iBACJ;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAA,wBAEImB;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAnHD;;GAAMpB,U;;KAAAA,U;AAqHN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table } from 'reactstrap';\nimport \"./Dictionary.scss\";\nimport { mockData } from './mockData';\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const [dictionaries, setDictionaries] = useState<any>([]);\n  const [activeListItem, setActiveListItem] = useState<any>({});\n\n  const toggleActiveListItem = (name: string) => {\n\n    if(name === activeListItem) {\n      setActiveListItem(\"\");\n    } else {\n      setActiveListItem(name);\n    }\n  }\n\n  useEffect(() => {\n    setDictionaries(mockData);\n  }, []);\n\n  const randomDictionaryWords = (activeDictionary: any) => {\n    setActiveListItem()\n  };\n\n  const tableList = dictionaries.map((item: any) => {\n\n    const innerList = item.words.map((item: any, idx: number) => {\n      return (\n        <tr>\n          <th scope=\"row\">{ idx }</th>\n          <td>{ item.en }</td>\n          <td>{ item.ua }</td>\n          <td>answer</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"table-dictionary-words-wrapper\">\n        <Table className=\"table-dictionary-words\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>EN</th>\n              <th>UA</th>\n              <th>YOUR</th>\n            </tr>\n          </thead>\n          <tbody>\n            { innerList }\n          </tbody>\n        </Table>\n        <button className=\"btn btn-outline-success btn-100\">EDIT THE DICTIONARY</button>\n      </div>\n    )\n  });\n\n  const tableSettingList = mockData.map((item: any,) => {\n    return (\n      <>\n        <tbody onClick={() => toggleActiveListItem(item)}>\n          <tr>\n            <th scope=\"row\">\n              {item.name}\n            </th>\n          </tr>\n        </tbody>\n       {\n         activeListItem.name === item.name && (\n          <div className=\"active-option\">\n            <button className=\"btn btn-outline-success\" onClick={() => randomDictionaryWords(activeListItem)}>RANDOM</button>\n          </div>\n         )\n       }\n      </>\n    )\n  });\n\n  return (\n    <div className=\"dictionary-page\">\n      <div className=\"col-9\">\n        <div className=\"dictionary-words\">\n          <div className=\"dictionary-words__party\">\n            { tableList }\n          </div>\n        </div>\n      </div>\n      <div className=\"col-3\">\n        <div className=\"dictionary-options\">\n          <div className=\"dictionary-options__party\">\n              <input type=\"text\" placeholder=\"filter\" className=\"btn-100\" />\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">Add new dictionary</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">DELETE</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n              {\n                isList && (\n                  <div className=\"\">\n                    <Table hover>\n                      {\n                        tableSettingList\n                      }\n                    </Table>\n                  </div>\n                )\n              }\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}