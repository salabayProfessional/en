{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport \"./OwnDictionary.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OwnDictionary = () => {\n  _s();\n\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n\n  const newActive = word => {\n    if (active === word) {\n      setActive(\"\");\n    } else {\n      setActive(word);\n    }\n\n    ;\n  };\n\n  const listWords = ownDictionary.map(d => {\n    var _d$phonetics$, _d$meanings$, _d$meanings$2, _d$meanings$2$definit, _d$meanings$3, _d$meanings$3$definit, _d$meanings$4, _d$meanings$4$definit;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: d.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"option\",\n          onClick: () => newActive(d.word),\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, generateString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `active-tab ${active === d.word ? \"show\" : \"close\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Phonetics:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 12\n          }, this), \" \", d === null || d === void 0 ? void 0 : (_d$phonetics$ = d.phonetics[0]) === null || _d$phonetics$ === void 0 ? void 0 : _d$phonetics$.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Meanings:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 12\n          }, this), \" part of speech: \", d === null || d === void 0 ? void 0 : (_d$meanings$ = d.meanings[0]) === null || _d$meanings$ === void 0 ? void 0 : _d$meanings$.partOfSpeech, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 75\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Definitions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 12\n          }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$2 = d.meanings[0]) === null || _d$meanings$2 === void 0 ? void 0 : (_d$meanings$2$definit = _d$meanings$2.definitions[0]) === null || _d$meanings$2$definit === void 0 ? void 0 : _d$meanings$2$definit.definition, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Synonyms:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 12\n          }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$3 = d.meanings[0]) === null || _d$meanings$3 === void 0 ? void 0 : (_d$meanings$3$definit = _d$meanings$3.definitions[0]) === null || _d$meanings$3$definit === void 0 ? void 0 : _d$meanings$3$definit.synonyms.map(synonym => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [synonym, \", \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 96\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 122\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 12\n          }, this), \" \", d === null || d === void 0 ? void 0 : (_d$meanings$4 = d.meanings[0]) === null || _d$meanings$4 === void 0 ? void 0 : (_d$meanings$4$definit = _d$meanings$4.definitions[0]) === null || _d$meanings$4$definit === void 0 ? void 0 : _d$meanings$4$definit.example, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 12\n          }, this), \" \", d === null || d === void 0 ? void 0 : d.origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, generateString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"own-dictionary\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      Left: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"bg-light\",\n        style: {\n          height: \"100%\"\n        },\n        children: listWords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this),\n      Right: /*#__PURE__*/_jsxDEV(SearchWord, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this),\n      fixed: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OwnDictionary, \"KUk7RAhcz/jXjCl1nefigRTnEQo=\", false, function () {\n  return [useOwnDictionary];\n});\n\n_c = OwnDictionary;\nexport default OwnDictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OwnDictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx"],"names":["React","useState","Table","Row","SearchWord","useOwnDictionary","generateString","OwnDictionary","ownDictionary","active","setActive","newActive","word","listWords","map","d","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary = useOwnDictionary();\n  const [active, setActive] = useState(\"\");\n\n  const newActive = (word: string) => {\n    if(active === word) {\n      setActive(\"\");\n    }else {\n      setActive(word);\n    };\n  }\n\n  const listWords = ownDictionary.map((d) => {\n    return (\n     <>\n      <tr key={generateString()}>\n        <th>{d.word}</th>\n        <th className=\"option\" onClick={() => newActive(d.word)}>...</th>\n      </tr>\n      <div key={generateString()} className={`active-tab ${active === d.word? \"show\" : \"close\"}`}>\n        <p><b>Phonetics:</b> {d?.phonetics[0]?.text}</p>\n        <p><b>Meanings:</b> part of speech: {d?.meanings[0]?.partOfSpeech}<br /></p>\n        <p><b>Definitions:</b> {d?.meanings[0]?.definitions[0]?.definition}<br /></p>\n        <p><b>Synonyms:</b> {d?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span>{synonym}, </span>)}<br /></p>\n        <p><b>Example:</b> {d?.meanings[0]?.definitions[0]?.example}<br /></p>\n        <p><b>Origin</b> {d?.origin}<br /></p>\n      </div>\n      </>\n    )\n  });\n\n  return (\n    <div className=\"own-dictionary\">\n      <Row\n        Left={<Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords}</Table>}\n        Right={<SearchWord />}\n        fixed=\"right\"\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n"]},"metadata":{},"sourceType":"module"}