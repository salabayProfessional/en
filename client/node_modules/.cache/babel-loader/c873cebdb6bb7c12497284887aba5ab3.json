{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Main/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Proposition from \"../../component/Proposition/Proposition\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  useEffect(() => {\n    fetch(\"https://google-translate20.p.rapidapi.com/translate?text=One%20idea%20behind%20Java's%20automatic%20memory%20management%20model%20is%20that%20programmers%20should%20be%20spared%20the%20burden%20of%20having%20to%20perform%20manual%20memory%20management.%20In%20some%20languages%20the%20programmer%20allocates%20memory%20to%20create%20any%20object%20stored%20on%20the%20heap%20and%20is%20responsible%20for%20later%20manually%20deallocating%20that%20memory%20to%20delete%20any%20such%20objects.%20If%20a%20programmer%20forgets%20to%20deallocate%20memory%20or%20writes%20code%20that%20fails%20to%20do%20so%20in%20a%20timely%20fashion%2C%20a%20memory%20leak%20can%20occur%3A%20the%20program%20will%20consume%20a%20potentially%20arbitrarily%20large%20amount%20of%20memory.%20In%20addition%2C%20if%20a%20region%20of%20memory%20is%20deallocated%20twice%2C%20the%20program%20can%20become%20unstable%20and%20may%20crash.%20Finally%2C%20in%20non%20garbage%20collected%20environments%2C%20there%20is%20a%20certain%20degree%20of%20overhead%20and%20complexity%20of%20user-code%20to%20track%20and%20finalize%20allocations.&tl=hi&sl=en\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"google-translate20.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"1d3b5b16a2msh7d414f6792e02e5p15a931jsnc5a4f28f53c4\"\n      }\n    }).then(response => {\n      ;\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(Proposition, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Main/Main.tsx"],"names":["React","useEffect","Proposition","Main","fetch","then","response","catch","err","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAO,aAAP;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAE3BF,EAAAA,SAAS,CAAC,MAAM;AAChBG,IAAAA,KAAK,CAAC,imCAAD,EAAomC;AACvmC,gBAAU,KAD6lC;AAEvmC,iBAAW;AACT,2BAAmB,mCADV;AAET,0BAAkB;AAFT;AAF4lC,KAApmC,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAChB;AACD,KATD,EAUCC,KAVD,CAUOC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAZD;AAaC,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD;;GAAML,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Proposition from \"../../component/Proposition/Proposition\";\nimport \"./Main.scss\";\n\nconst Main: React.FC = () => {\n\n  useEffect(() => {\n  fetch(\"https://google-translate20.p.rapidapi.com/translate?text=One%20idea%20behind%20Java's%20automatic%20memory%20management%20model%20is%20that%20programmers%20should%20be%20spared%20the%20burden%20of%20having%20to%20perform%20manual%20memory%20management.%20In%20some%20languages%20the%20programmer%20allocates%20memory%20to%20create%20any%20object%20stored%20on%20the%20heap%20and%20is%20responsible%20for%20later%20manually%20deallocating%20that%20memory%20to%20delete%20any%20such%20objects.%20If%20a%20programmer%20forgets%20to%20deallocate%20memory%20or%20writes%20code%20that%20fails%20to%20do%20so%20in%20a%20timely%20fashion%2C%20a%20memory%20leak%20can%20occur%3A%20the%20program%20will%20consume%20a%20potentially%20arbitrarily%20large%20amount%20of%20memory.%20In%20addition%2C%20if%20a%20region%20of%20memory%20is%20deallocated%20twice%2C%20the%20program%20can%20become%20unstable%20and%20may%20crash.%20Finally%2C%20in%20non%20garbage%20collected%20environments%2C%20there%20is%20a%20certain%20degree%20of%20overhead%20and%20complexity%20of%20user-code%20to%20track%20and%20finalize%20allocations.&tl=hi&sl=en\", {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"google-translate20.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"1d3b5b16a2msh7d414f6792e02e5p15a931jsnc5a4f28f53c4\"\n    }\n  })\n  .then(response => {\n    ;\n  })\n  .catch(err => {\n    console.error(err);\n  });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Proposition />\n\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}