{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Table } from 'reactstrap';\nimport \"./Dictionary.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockData = [{\n  dictionary: \"one\",\n  words: [{\n    en: \"sail\",\n    ua: \"плавати\"\n  }, {\n    en: \"some\",\n    ua: \"декілька\"\n  }, {\n    en: \"same\",\n    ua: \"те саме\"\n  }, {\n    en: \"case\",\n    ua: \"випадок\"\n  }, {\n    en: \"cause\",\n    ua: \"причина\"\n  }, {\n    en: \"weak\",\n    ua: \"слабкий\"\n  }, {\n    en: \"therefore\",\n    ua: \"тому\"\n  }, {\n    en: \"fluent\",\n    ua: \"впливати\"\n  }, {\n    en: \"introduce\",\n    ua: \"представляти\"\n  }, {\n    en: \"carry out\",\n    ua: \"продовжуй\"\n  }]\n}, {\n  dictionary: \"two\",\n  words: [{\n    en: \"sail\",\n    ua: \"плавати\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }]\n}, {\n  dictionary: \"tree\",\n  words: [{\n    en: \"sail\",\n    ua: \"плавати\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }, {\n    en: \"\",\n    ua: \"\"\n  }]\n}];\n\nconst Dictionary = () => {\n  _s();\n\n  const [isList, setIsList] = useState(false);\n\n  const toggleList = () => setIsList(!isList);\n\n  const list = mockData.map(item => {\n    const innerList = item.words.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"row\",\n          children: idx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.ua\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Table, {\n      className: \"table-dictionary-words\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"YOUR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: innerList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-success btn-100\",\n        children: \"EDIT THE DICTIONARY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dictionary-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-words\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-words__party\",\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionary-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"filter\",\n            className: \"btn-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"Add new dictionary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            children: \"Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionary-options__party\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-success btn-100\",\n            onClick: () => toggleList(),\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), isList && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"row\",\n                  children: idx\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.en\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.ua\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dictionary, \"837pxj+1vCTrUFpoyWgdfoBxfvY=\");\n\n_c = Dictionary;\nexport default Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"sources":["/Users/macbookpro/Documents/trainee/client/src/pages/Profile/underPages/Dictionary/Dictionary.tsx"],"names":["React","useState","Table","mockData","dictionary","words","en","ua","Dictionary","isList","setIsList","toggleList","list","map","item","innerList","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAO,mBAAP;;AAEA,MAAMC,QAAQ,GAAG,CACf;AACEC,EAAAA,UAAU,EAAE,KADd;AAEEC,EAAAA,KAAK,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,OAAL;AAAcC,IAAAA,EAAE,EAAE;AAAlB,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GANK,EAOL;AAACD,IAAAA,EAAE,EAAE,WAAL;AAAkBC,IAAAA,EAAE,EAAE;AAAtB,GAPK,EAQL;AAACD,IAAAA,EAAE,EAAE,QAAL;AAAeC,IAAAA,EAAE,EAAE;AAAnB,GARK,EASL;AAACD,IAAAA,EAAE,EAAE,WAAL;AAAkBC,IAAAA,EAAE,EAAE;AAAtB,GATK,EAUL;AAACD,IAAAA,EAAE,EAAE,WAAL;AAAkBC,IAAAA,EAAE,EAAE;AAAtB,GAVK;AAFT,CADe,EAgBf;AACEH,EAAAA,UAAU,EAAE,KADd;AAEEC,EAAAA,KAAK,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GANK,EAOL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAPK,EAQL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GARK,EASL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GATK,EAUL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAVK;AAFT,CAhBe,EA+Bf;AACEH,EAAAA,UAAU,EAAE,MADd;AAEEC,EAAAA,KAAK,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,MAAL;AAAaC,IAAAA,EAAE,EAAE;AAAjB,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GANK,EAOL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAPK,EAQL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GARK,EASL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GATK,EAUL;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,EAAE,EAAE;AAAb,GAVK;AAFT,CA/Be,CAAjB;;AAgDA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMU,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AAEA,QAAMG,IAAI,GAAGT,QAAQ,CAACU,GAAT,CAAcC,IAAD,IAAe;AAEvC,UAAMC,SAAS,GAAGD,IAAI,CAACT,KAAL,CAAWQ,GAAX,CAAe,CAACC,IAAD,EAAYE,GAAZ,KAA4B;AAC3D,0BACE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA,oBAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMF,IAAI,CAACR;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMQ,IAAI,CAACP;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATiB,CAAlB;AAWA,wBACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,wBAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACIQ;AADJ;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAQ,QAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GA7BY,CAAb;AA+BA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,oBACIH;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,QAA/B;AAAwC,YAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAII;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAoD,YAAA,OAAO,EAAE,MAAMD,UAAU,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGIF,MAAM,iBACJ;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,mCACE,QAAC,KAAD;AAAA,qCACA;AAAA,wCACA;AAAI,kBAAA,KAAK,EAAC,KAAV;AAAA,4BAAkBO;AAAlB;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAA,4BAAMF,IAAI,CAACR;AAAX;AAAA;AAAA;AAAA;AAAA,wBAFA,eAGA;AAAA,4BAAMQ,IAAI,CAACP;AAAX;AAAA;AAAA;AAAA;AAAA,wBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA5ED;;GAAMC,U;;KAAAA,U;AA8EN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Table } from 'reactstrap';\n\nimport \"./Dictionary.scss\";\n\nconst mockData = [\n  {\n    dictionary: \"one\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"some\", ua: \"декілька\"},\n      {en: \"same\", ua: \"те саме\"},\n      {en: \"case\", ua: \"випадок\"},\n      {en: \"cause\", ua: \"причина\"},\n      {en: \"weak\", ua: \"слабкий\"},\n      {en: \"therefore\", ua: \"тому\"},\n      {en: \"fluent\", ua: \"впливати\"},\n      {en: \"introduce\", ua: \"представляти\"},\n      {en: \"carry out\", ua: \"продовжуй\"},\n    ]\n  },\n  {\n    dictionary: \"two\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n    ]\n  },\n  {\n    dictionary: \"tree\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n    ]\n  },\n];\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n\n  const list = mockData.map((item: any) => {\n\n    const innerList = item.words.map((item: any, idx: number) => {\n      return (\n        <tr>\n          <th scope=\"row\">{ idx }</th>\n          <td>{ item.en }</td>\n          <td>{ item.ua }</td>\n          <td>answer</td>\n        </tr>\n      )\n    })\n\n    return (\n      <Table className=\"table-dictionary-words\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>EN</th>\n            <th>UA</th>\n            <th>YOUR</th>\n          </tr>\n        </thead>\n        <tbody>\n          { innerList }\n        </tbody>\n        <button className=\"btn btn-outline-success btn-100\">EDIT THE DICTIONARY</button>\n      </Table>\n    )\n  });\n\n  return (\n    <div className=\"dictionary-page\">\n      <div className=\"col-9\">\n        <div className=\"dictionary-words\">\n          <div className=\"dictionary-words__party\">\n            { list }\n          </div>\n        </div>\n      </div>\n      <div className=\"col-3\">\n        <div className=\"dictionary-options\">\n          <div className=\"dictionary-options__party\">\n              <input type=\"text\" placeholder=\"filter\" className=\"btn-100\" />\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">Add new dictionary</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\">Random</button>\n            </div>\n            <div className=\"dictionary-options__party\">\n              <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n              {\n                isList && (\n                  <div className=\"\">\n                    <Table>\n                    <tr>\n                    <th scope=\"row\">{ idx }</th>\n                    <td>{ item.en }</td>\n                    <td>{ item.ua }</td>\n                    <td>answer</td>\n                  </tr>\n                    </Table>\n                  </div>\n                )\n              }\n            </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Dictionary;"]},"metadata":{},"sourceType":"module"}