{"version":3,"sources":["component/RestrictedList/RestrictedList.tsx","pages/Profile/underPages/Results/Statistics.tsx","pages/Profile/underPages/Results/Results.tsx"],"names":["RestrictedList","renderItem","children","amount","list","listClasses","restrictedList","slice","map","item","className","Statistics","resultItems","length","Results","results","useSelector","state","result","useState","idResult","setIDResult","isModal","setIsModal","setAmount","toggleIsModal","toggle","name","startTime","endTime","Button","type","onClick","generateString"],"mappings":"mNA4BeA,EAlBsC,SAAC,GAK/C,IAJKC,EAIN,EAJJC,SACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,KACAC,EACI,EADJA,YAGMC,EAAiBF,EAAKG,MAAM,EAAGJ,GAAQK,KAAI,SAACC,GAAD,OAAeR,EAAWQ,MAE3E,OACE,qBAAKC,UAAWL,EAAhB,SAEIC,K,QCQOK,G,OA5BmB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAElC,OACE,qBAAKF,UAAU,aAAf,SACE,qBAAIA,UAAU,mBAAd,UACE,+CACuC,GAAX,OAAXE,QAAW,IAAXA,OAAA,EAAAA,EAAaC,WAE9B,4CAGA,gDAGA,gDAGA,gDAGA,uDC2COC,UAvDW,WACxB,IAAMC,EAAUC,aAAY,SAACC,GAAD,OAAwBA,EAAMC,OAAOH,WACjE,EAAqCI,mBAAS,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOhB,EAAP,KAAeqB,EAAf,KACMC,EAAgB,kBAAMF,GAAYD,IAExC,OACE,sBAAKZ,UAAU,cAAf,UACE,cAAC,IAAD,CACEY,QAASA,EACTI,OAAQD,EACRP,OAAQE,IAEV,cAAC,EAAD,CAAYR,YAAaG,IACzB,cAAC,EAAD,CACEX,KAAMW,EACNZ,OAAQA,EACRE,YAAY,YAHd,SAKG,SAACI,GAAU,IAAD,EACT,OACE,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBD,EAAKkB,OAC5B,oBAAGjB,UAAU,cAAb,qCAA+BD,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAMmB,kBAArC,aAA4B,EAAsBrB,MAAM,GAAI,IAA5D,MAAoE,iBAAGE,QAAH,IAAGA,OAAH,EAAGA,EAAMoB,SAAUtB,MAAM,GAAI,OACjG,cAACuB,EAAA,EAAD,CACEpB,UAAU,gDACVqB,KAAK,SACLC,QAAS,WACPX,EAAYZ,GACZgB,KALJ,oBAH+BQ,kBAiBrClB,EAAQF,OAAS,IACf,wBAAQH,UAAU,yBAAyBsB,QAAS,WAC/C7B,EAASY,EAAQF,QAClBW,EAAUrB,EAAS,KAFvB,kBASDY,EAAQF,QAAU,mBAAGH,UAAU,cAAb","file":"static/js/9.f74965f5.chunk.js","sourcesContent":["import React from 'react';\nimport './RestrictedList.scss';\n\ninterface RestrictedListType {\n  children: (item: any) => any,\n  amount: number,\n  list: any[],\n  listClasses: string,\n}\n\nconst RestrictedList: React.FC<RestrictedListType> = ({\n  children: renderItem,\n  amount,\n  list,\n  listClasses\n}) => {\n\n  const restrictedList = list.slice(0, amount).map((item: any) => renderItem(item));\n\n  return (\n    <div className={listClasses}>\n      {\n        restrictedList\n      }\n    </div>\n  )\n}\n\nexport default RestrictedList;\n","import React from \"react\";\n\nconst Statistics: React.FC<any> = ({resultItems}) => {\n\n  return (\n    <div className=\"statistics\">\n      <ul className=\"statistics__list\">\n        <li>\n          Passed test: { resultItems?.length | 0 }\n        </li>\n        <li>\n          Is tests: {}\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n      </ul>\n    </div>\n  )\n};\n\nexport default Statistics;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalResult } from '../../../../component/Modal/Modals';\nimport RestrictedList from '../../../../component/RestrictedList/RestrictedList';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { RootReducer } from '../../../../store/slices/types';\nimport \"./Results.scss\";\nimport Statistics from './Statistics';\n\nconst Results: React.FC = () => {\n  const results = useSelector((state: RootReducer) => state.result.results);\n  const [idResult, setIDResult]: any = useState(null);\n  const [isModal, setIsModal] = useState(false);\n  const [amount, setAmount] = useState(16);\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  return (\n    <div className=\"result-page\">\n      <ModalResult \n        isModal={isModal} \n        toggle={toggleIsModal} \n        result={idResult}\n      />\n      <Statistics resultItems={results}/>\n      <RestrictedList \n        list={results}\n        amount={amount}\n        listClasses=\"test-list\"\n      >\n        {(item) => {\n          return (\n            <div className=\"test__item\" key={generateString()}>\n              <h3 className=\"title\">{item.name}</h3>\n              <p className=\"under-title\">{`${item?.startTime}`?.slice(11, 19)} - {`${item?.endTime}`.slice(11, 19)}</p>\n              <Button \n                className=\"btn btn-success btn-center btn-bg border-none\" \n                type=\"button\" \n                onClick={() => {\n                  setIDResult(item);\n                  toggleIsModal();\n                }}>\n                Show\n              </Button>\n            </div>\n          )\n        }}\n      </RestrictedList>\n      {\n        results.length > 12 && (\n          <button className=\"btn btn-success btn-bg\" onClick={() => {\n            if(amount < results.length) {\n              setAmount(amount + 12);\n            };\n          }}>Yet</button>\n        )\n      }\n\n      {\n        !results.length && <p className=\"under-title\">\"you don't pass a test yet. And then here is nothing\"</p>\n      }\n    </div>\n  )\n};\n\nexport default Results;"],"sourceRoot":""}