{"version":3,"sources":["specialFunction/specialFunction.ts","classes.ts","component/Proposition/Proposition.tsx","component/Carusel/Carousel.tsx","pages/Main/Main.tsx","component/Row/Row.tsx","store/slices/resultReducer.ts","store/slices/testsReducer.ts","pages/Profile/underPages/Setting/components/DeleteSetting/DeleteSetting.tsx","images/photo.jpeg","pages/Profile/underPages/Setting/components/ChangeSetting/ChangesSetting.tsx","pages/Profile/underPages/Setting/Setting.tsx","mockData/words.ts","pages/Profile/underPages/Dictionary/mockData.ts","pages/Profile/underPages/Dictionary/components/DictionaryOptions/DictionaryOptions.tsx","pages/Profile/underPages/Dictionary/components/DictionaryPart/DictionaryPart.tsx","pages/Profile/underPages/Dictionary/Dictionary.tsx","component/Modal/Modal.tsx","component/Modal/Modals.tsx","component/RestrictedList/RestrictedList.tsx","pages/Profile/underPages/Results/Statistics.tsx","pages/Profile/underPages/Results/Results.tsx","pages/Profile/underPages/All-test/All-test.tsx","hooks/useRedux.ts","store/slices/authReducer.ts","component/SearchWord/SearchView.tsx","component/SearchWord/SearchWord.tsx","pages/Profile/underPages/OwnDictionary/DataWords.tsx","pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx","hooks/useOwnDictionary.ts","pages/Profile/underPages/Administration/Administration.tsx","pages/Profile/underPages/Homework/Component/Homework-workingPart/Homework-workingPart.tsx","pages/Profile/underPages/Homework/Component/HomeWordItem/HomeWorkItem.tsx","pages/Profile/underPages/Homework/HomeWork.tsx","hooks/useHomeWork.ts","pages/Profile/underPages/Create-test/Cteate-test.tsx","component/Tabs/TabsContnent.tsx","component/Tabs/Tabs.tsx","hooks/useRole.ts","pages/Profile/Profile.tsx","pages/Sign-in/component/Sign-in-form/Sign-in-form.tsx","pages/Sign-in/component/Sign-out-form/Sign-out-form.tsx","pages/Sign-in/Sign-in.tsx","hooks/useAuth.ts","store/slices/optionsReducer.ts","component/Options/Options.tsx","pages/Tests/View.tsx","component/Timer/Timer.tsx","mockData/options.ts","component/Options/optionsType.tsx","pages/Tests/Tests.tsx","component/MobileMenu/MobileMenu.tsx","component/Header/Header.tsx","mockData/stories.ts","pages/Story/Story.tsx","component/app/app.tsx","reportWebVitals.ts","store/slices/dictionaryReducer.ts","store/slices/profileReducer.ts","store/slices/storyReducer.ts","store/slices/rootSlice.ts","store/store.ts","index.tsx"],"names":["words","BTN_BG","INP_BG","Proposition","motion","div","animate","x","opacity","initial","transition","duration","className","items","src","altText","caption","header","key","Carousel","UncontrolledCarousel","Main","Row","Left","Right","rightWidth","leftWidth","fixed","result","createSlice","name","initialState","results","reducers","push_audited_test","state","payload","delete_results","delete_result","index","findIndex","res","before","slice","after","extraReducers","actions","tests","start","test","infoTest","allTests","set_start_test","action","set_test","reset_test","set_info_id","create_test","delete_tests","delete_test","DeleteSetting","dispatch","useDispatch","FormGroup","Label","for","Input","type","placeholder","onClick","ChangesSetting","id","alt","avatar","React","memo","Setting","initialValues","onSubmit","values","console","log","allWords","en","ua","generateString","Math","random","toString","replace","substr","shuffle","array","sort","checkAnswer","word","answer","toLowerCase","includes","makeTest","amount","randomID","i","push","floor","map","mockData","DictionaryOptions","isList","activeDictionary","toggleList","randomDictionaryWords","toggleActiveItem","reset","toggleHideColumnUa","toggleHideColumnEn","tableSettingList","item","scope","Table","hover","TableWords","register","isHideColumnEn","isHideColumnUa","list","idx","defaultValue","Dictionary","useState","setIsList","setActiveDictionary","setIsHideColumnUa","setIsHideColumnEn","useForm","handleSubmit","data","dictionary","CornModal","isModal","toggle","isConfirm","confirm","isCancel","cancel","children","isBody","confirmName","Modal","isOpen","sm","lg","ModalBody","ModalFooter","color","ModalInfo","isPassTest","setIsPassTest","to","ModalNotice","redirect","setRedirect","ModalHeader","style","width","ModalResult","isRepass","setIsRepass","answers","length","RestrictedList","renderItem","listClasses","restrictedList","Statistics","resultItems","Results","useSelector","idResult","setIDResult","setIsModal","setAmount","toggleIsModal","startTime","endTime","AllTest","infoID","setInfoId","toggleIsInfoModal","find","useAppSelector","auth","authentication","role","surname","email","photo","describe","password","homework","log_out","sign_in","add_part_own_dictionary","add_word_own_dictionary","remove_word","foundedPart","partName","part","findPart","foundedWord","partIdx","foundWord","add_home_work","remove_home_work","SearchView","loading","dispatchWord","Spinner","d","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin","SearchWord","ownDictionary","setData","setLoading","a","axios","get","then","DataWord","active","newActive","activePart","Button","marginY","marginRight","iconBefore","ManualIcon","TrashIcon","intent","OwnDictionary","setActive","setActivePart","activePartOptions","setActivePartOptions","setNewActive","tabs","onDoubleClick","setNewActivePartOptions","height","DataWords","listWords","Administration","HomeworkWorkingPart","preventDefault","HomeWorkItem","title","HomeWork","activeHomeWork","setActiveHomeWork","homeworkList","homeworkItem","foundedActiveHomework","CreateTest","mobileMenu","setMobileMenu","toggleMobileMenu","useMemo","value","splitWordsOnAnd","indexSignAnd","indexOf","timer","setFieldValue","options","as","alert","TabsContnent","path","TabContent","activeTab","TabPane","tabId","Col","fallback","ls","Tabs","history","useHistory","location","useLocation","Nav","NavItem","iconAfter","CogIcon","classnames","pathname","ListIcon","ResolveIcon","EditIcon","HomeIcon","NavLink","Profile","SignInForm","schema","Yup","shape","min","max","required","repeatPassword","resolver","yupResolver","JSON","stringify","FormFeedback","FormText","SignOut","SignIn","isAuth","set_options","Options","setIsOption","renderChild","variants","open","closed","View","count","toggleOptions","randomWords","startTest","sendAnswer","handleKeyDown","event","disabled","onKeyDown","Timer","nowTime","setNowTime","useEffect","timeout","setTimeout","clearTimeout","y","rotate","optionsData","optionsForTest","option","Test","gotTest","setTest","setCount","end","setEnd","setStart","isOptions","setIsOptions","seeResults","setSeeResults","setRandom","setStartTime","auditedTest","sortAnswers","_","e","audit","filter","endDate","Date","equalAnswerAndWord","date","arr","randomArr","makeRandomArr","MobileMenu","show","setIsMobileMenu","activeStyle","fontWeight","fontSize","textDecoration","LinkList","HeaderX","isMobileMenu","isEdit","setIsEdit","stories","author","Story","listStories","story","App","Container","fluid","exact","component","Tests","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","dictionaryParts","add_dictionary_part","delete_dictionary_part","profile","rootReducer","combineReducers","optionsReducer","storyReducer","resultReducer","dictionaryReducer","profileReducer","persistConfig","storage","transforms","createWhitelistFilter","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","localStore","persistStore","ReactDOM","render","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.8eb1659c.chunk.js","sourcesContent":["import { allWords } from \"../mockData/words\";\n\nconst generateString = () => Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5);\n\nconst shuffle = (array: any) => {\n  return array.sort(() => Math.random() - 0.5);\n};\n\nconst equalAnswerAndWord = (\n  test: any,\n  answers: string[],\n  options: any,\n  random: number[],\n  startTime: string,\n) => {\n  const type =  options.type === \"en-ua\" ? \"ua\" : \"en\";\n  const words = test.words.map((word: any) => word[type].toLowerCase());\n  const sortAnswers = random.map((_, idx) => answers[random.findIndex((e) => e === idx) as any]);\n\n  const audit = words.filter((word: string, idx: number) => checkAnswer(word, sortAnswers[idx]));\n  const endDate = new Date();\n\n  return {\n    name: test?.name? test.name : \"random\",\n    type: options.type,\n    words: test.words,\n    result: audit,\n    answers: sortAnswers,\n    options,\n    endDate,\n    startTime,\n  };\n};\n\nconst createTest: any = (words: any) => (amount: number = 10) => {\n  let randomID = [];\n  let result: any = {name: generateString(), words: []};\n\n  for(let i = 0; i < amount ; i++) {\n    randomID.push(Math.floor(Math.random() * 124));\n  };\n\n  randomID.map((id: any) => result.words.push(words[id]));\n\n  return result\n};\n\nconst checkAnswer = (word: string, answer: string) => {\n  return answer.toLowerCase().includes(word);\n};\n\nconst makeTest = createTest(allWords);\n\nexport {\n  shuffle,\n  generateString,\n  equalAnswerAndWord,\n  makeTest,\n}\n\n// const checkAnswer = (word, answer) => {\n//   const splitWord = f(word.split(\"\"));\n//   const splitAnswer = f(answer.split(\"\"));\n//   const coincidence = splitWord.filter((l) => splitAnswer.includes(l));\n//   const necessaryTrue = coincidence.length / 100 * 80;\n//   const result = coincidence.length >= necessaryTrue? true : false;\n//   return {result,splitWord, splitAnswer, coincidence, necessaryTrue, result }\n// };\n\n//checkAnswer(\"main\", \"mainсі\");","export const BTN_BG = \"btn btn-success btn-bg padding-10\";\nexport const INP_BG = \"from-control btn-bg padding-10\";","import React from 'react';\nimport { BTN_BG } from '../../classes';\nimport { motion } from 'framer-motion';\nimport './Proposition.scss';\n\nconst Proposition: React.FC = () => {\n\n  return (\n    <motion.div\n      animate={{x: 0, opacity: 1}}\n      initial={{x: \"-120%\"}}\n      transition={{duration: 1.5, opacity: 0}}\n      className=\"Proposition\"\n    >\n      <ul className=\"Proposition__item col-12 col-lg-4\">\n        <h2>FREE</h2>\n        <li className=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</li>\n        <li className=\"text-muted\">Nullam id dolor id nibh ultricies vehicula ut id elit.</li>\n        <li className=\"text-muted\">Pellentesque ornare sem lacinia quam venenatis vestibulum.</li>\n        <li className=\"text-muted\">Etiam porta sem malesuada magna mollis euismod.</li>\n        <li className=\"text-muted\">Donec ullamcorper nulla non metus auctor fringilla.</li>\n        <li className=\"text-muted\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</li>\n        <li className=\"text-muted\">Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n        <button className={BTN_BG}>BUY</button>\n      </ul>\n      <ul className=\"Proposition__item col-12 col-lg-4\">\n        <h2 className=\"text-info\">SUPER</h2>\n        <li className=\"text-info\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</li>\n        <li className=\"text-info\">Nullam id dolor id nibh ultricies vehicula ut id elit.</li>\n        <li className=\"text-info\">Pellentesque ornare sem lacinia quam venenatis vestibulum.</li>\n        <li className=\"text-info\">Etiam porta sem malesuada magna mollis euismod.</li>\n        <li className=\"text-info\">Donec ullamcorper nulla non metus auctor fringilla.</li>\n        <li className=\"text-info\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</li>\n        <li className=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n        <button className={BTN_BG}>BUY</button>\n      </ul>\n      <ul className=\"Proposition__item col-12 col-lg-4\">\n        <h2 className=\"text-primary\">EXPERT</h2>\n        <li className=\"text-primary\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</li>\n        <li className=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</li>\n        <li className=\"text-primary\">Pellentesque ornare sem lacinia quam venenatis vestibulum.</li>\n        <li className=\"text-primary\">Etiam porta sem malesuada magna mollis euismod.</li>\n        <li className=\"text-primary\">Donec ullamcorper nulla non metus auctor fringilla.</li>\n        <li className=\"text-primary\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</li>\n        <li className=\"text-primary\">Maecenas sed diam eget risus varius blandit sit amet non magna.</li>\n        <button className={BTN_BG}>BUY</button>\n      </ul>\n    </motion.div>\n  )\n};\n\nexport default Proposition;\n","import React from \"react\";\nimport { UncontrolledCarousel } from \"reactstrap\";\nimport \"./Carousel.css\";\n\nconst items = [\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa1d%20text%20%7B%20fill%3A%23555%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa1d%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23777%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.921875%22%20y%3D%22218.3%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n    header: 'Own dictionary',\n    key: '1'\n  },\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23444%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23666%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n    header: 'Slide 2 Header',\n    key: '2'\n  },\n  {\n    src: 'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23333%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23555%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n    header: 'Slide 3 Header',\n    key: '3'\n  }\n];\n\nconst Carousel: React.FC = () => {\n    \n  return (\n    <div className=\"container-carousel\">\n      <UncontrolledCarousel items={items} />\n    </div>\n  )\n};\n\nexport default Carousel;\n","import React from \"react\";\nimport Proposition from \"../../component/Proposition/Proposition\";\nimport Carousel from \"../../component/Carusel/Carousel\";\nimport \"./Main.scss\";\n\nconst Main: React.FC = () => {\n\n  return (\n    <div className=\"page\">\n      <Carousel />\n      <Proposition />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { motion } from \"framer-motion\"\nimport \"./Row.scss\";\n\nconst Row: React.FC<{\n  Left: any,\n  Right: any,\n  rightWidth?: number,\n  leftWidth?: number,\n  fixed?: \"right\" | \"left\",\n}> = ({\n  Left, \n  Right, \n  rightWidth = 6,\n  leftWidth = 6,\n  fixed = \"none\"\n}) => {\n\n  return (\n    <div className=\"row-wrapper\">\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"-100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${leftWidth} ${fixed === \"left\" && \"fixed\"}`}\n      >\n        { Left }\n      </motion.div>\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${rightWidth} ${fixed === \"right\" && \"fixed\"}`}\n      >\n        { Right }\n      </motion.div>\n    </div>\n  )\n};\n\nexport default Row;\n","import {createSlice} from '@reduxjs/toolkit';\nimport { ResultReducer } from './types';\n\nconst initialState: ResultReducer = {\n  results: [],\n};\n\nconst result = createSlice({\n    name: \"result\",\n    initialState,\n    reducers: {\n      push_audited_test: (state, {payload}) => {\n        state.results = [...state.results, payload];\n      },\n      delete_results: (state) => {\n        state.results = [];\n      },\n      delete_result: (state, {payload}) => {\n        const name = payload.name;\n        const index = state.results.findIndex((res) => res.name === name);\n        const before = state.results.slice(0, index);\n        const after = state.results.slice(index, );\n        state.results = [...before, ...after];\n      },\n    },\n    extraReducers: (state: any) => state\n});\nexport const { push_audited_test, delete_results, delete_result } = result.actions;\n\nexport default result.reducer;","import {createSlice} from '@reduxjs/toolkit';\nimport { TestsReducer } from './types';\n\nconst initialState: TestsReducer = {\n  start: false,\n  test: null,\n  infoTest: \"\",\n  allTests: [], \n};\n\nconst tests = createSlice({\n  name: \"tests\",\n  initialState,\n  reducers: {\n    set_start_test: (state, action) => {\n      state.start = action.payload;\n    },\n    set_test: (state, action) => {\n      state.test = action.payload;\n    },\n    reset_test: (state) => {\n      state.test = null;\n    },\n    set_info_id: (state, {payload}) => {\n      state.infoTest = payload;\n    },\n    create_test: (state, {payload}) => {\n      state.allTests = [...state.allTests, payload];\n    },\n    delete_tests: (state) => {\n      state.allTests = [];\n    },\n    delete_test: (state, {payload}) => {\n      const name = payload.name;\n      const index = state.allTests.findIndex((test: any) => test.name === name);\n      const before = state.allTests.slice(0, index);\n      const after = state.allTests.slice(index, );\n      state.allTests = [...before, ...after];\n    },\n  },\n  extraReducers: (state: any) => state\n});\nexport const { \n  set_start_test, \n  set_test, \n  set_info_id, \n  create_test, \n  reset_test, \n  delete_test, \n  delete_tests \n} = tests.actions;\n\nexport default tests.reducer;","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Input, Label } from 'reactstrap';\nimport Row from '../../../../../../component/Row/Row';\nimport { delete_result, delete_results } from '../../../../../../store/slices/resultReducer';\nimport { delete_test, delete_tests } from '../../../../../../store/slices/testsReducer';\nimport './DeleteSetting.scss';\n\nconst DeleteSetting: React.FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div className=\"delete-setting\">\n        <Row \n          Left={(\n            <>\n            <h1 className=\"title\">Test</h1>\n            <FormGroup>\n              <Label for=\"Name\">Delete Test</Label>\n              <Input className=\"form-control\" type=\"text\" placeholder=\"name\" name=\"name\" />\n              <Button type=\"button\" className=\"btn btn-success btn-bg\" onClick={() => dispatch(delete_test(\"oleg\"))}>DELETE</Button>\n              <Button type=\"button\" className=\"btn btn-success btn-bg\" onClick={() => dispatch(delete_tests())}>DELETE ALL</Button>\n            </FormGroup>\n            </>\n          )} \n          Right={(\n          <>\n          <h1 className=\"title\">Result</h1>\n          <FormGroup>\n            <Label for=\"Name\">Delete Result</Label>\n            <Input className=\"form-control\" type=\"text\" placeholder=\"name\" name=\"name\" />\n            <Button type=\"button\" className=\"btn btn-success btn-bg\" onClick={() => dispatch(delete_result(\"oleg\"))}>DELETE</Button>\n            <Button type=\"button\" className=\"btn btn-success btn-bg\" onClick={() => dispatch(delete_results())}>DELETE ALL</Button>\n          </FormGroup>\n          </>\n          )}/>\n      </div>\n    </div>\n  )\n};\n\nexport default DeleteSetting;\n","export default __webpack_public_path__ + \"static/media/photo.3665086d.jpeg\";","import React from 'react'\nimport { Button, FormGroup, Input, Label } from 'reactstrap';\nimport Row from '../../../../../../component/Row/Row';\nimport avatar from \"../../../../../../images/photo.jpeg\";\nimport './ChangeSetting.scss';\n\nconst ChangesSetting: React.FC = () => {\n\n  return (\n    <div className=\"change-setting\">\n      <Row \n        Left={(\n         <div className=\"between\">\n          <h2>Change</h2>\n          <FormGroup>\n            <Label for=\"Name\">Change Name</Label>\n            <Input className=\"form-control\" type=\"text\" placeholder=\"name\" name=\"name\" />\n            <Button type=\"button\" className=\"btn btn-success btn-bg\">Change name</Button>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"Password\">Change Password</Label>\n            <Input className=\"form-control\" type=\"password\" placeholder=\"password\" name=\"password\" id=\"password\" />\n            <Button type=\"button\" className=\"btn btn-success btn-bg\">Change password</Button>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"Name\">Change Email</Label>\n            <Input className=\"form-control\" type=\"text\" placeholder=\"email\" name=\"email\" id=\"email\" />\n            <Button type=\"button\" className=\"btn btn-success btn-bg\">Change email</Button>\n          </FormGroup>\n          </div>\n        )}\n        Right={(\n          <div className=\"between\">\n            <FormGroup>\n              <img alt=\"\" src={avatar} className=\"photo\" id=\"my_photo\" />\n              {/* <input type=\"file\" className=\"btn btn-outline-success btn-100\" accept=\"image/*\" ref={ref} onChange={(e: any) => {}}/> */}\n            </FormGroup>\n            <FormGroup>\n            <Button type=\"button\" className=\"btn btn-success btn-100\">Change photo</Button>\n            </FormGroup>\n          </div>\n        )}\n      />\n    </div>\n  )\n};\n\nexport default React.memo(ChangesSetting);\n","import React from \"react\";\nimport \"./Setting.scss\";\nimport { Form, Formik } from \"formik\";\nimport DeleteSetting from \"./components/DeleteSetting/DeleteSetting\";\nimport ChangesSetting from \"./components/ChangeSetting/ChangesSetting\";\n\nconst Setting: React.FC = () => {\n  // const ref = useRef(null);\n\n  const onSubmit = (values: any) => {\n    console.log(values)\n  };\n\n  return (\n    <Formik initialValues={{}} onSubmit={(values: any) => onSubmit(values)}>\n      {({values}) => {\n        return (\n          <Form>\n            <div>\n              <div className=\"user-data\">\n                <ChangesSetting />\n                <DeleteSetting />\n              </div>\n            </div>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n\nexport default React.memo(Setting);\n","const allWords = [ \n    {en: \"i am going to measure your speed\",\tua: \"Я измерю твою скорость\"},\n    {en: \"looking forward to\",\tua: \"с нетерпением ожидая\"},\n    {en: \"Rob my house\",\tua: \"Ограбить мой дом\"},\n    {en: \"You don’t?\",ua: \t\"А ты не хочешь?\"},\n    {en: \"Why don’t you cook dinner?\",ua: \t\"Почему ты не готовишь ужин?\"},\n    {en: \"For real?\",ua:  \"\tНа самом деле? \"},\n    {en: \"What about calling the police? It’s robbing\",ua: \t\"Что насчет звонка в полицию? Это ограбление\"},\n    {en: \"like hell you are\",ua: \t\"черта с два ты\"},\n    {en: \"if i get it running (I get it)\",ua: \t\"если я запущу его (я получу его)\"},\n    {en: \"what's the point?\",\tua: \"А в чем смысл?\"},\n    {en: \"i can't belive so lame even owned a bike like this.  (so lame)\", ua: \"Я не могу поверить, что у меня даже был такой мотоцикл.   (такой отстойный)\"},\n    {en: \"i feel like this cover really says (like this)\",ua: \t\"я чувствую, что эта обложка действительно говорит (как это)\"},\n    {en: \"quite\", ua: \"вполне\"},\n    {en: \"opportunity\",\tua: \"возможность\"},\n    {en: \"i could not turn it down (turn it down)\",ua: \t\"я не мог выключить его (выключить)\"},\n    {en: \"i'm aware\", ua: \"я знаю\"},\n    {en: \"i give up\", ua: \"я сдаюсь\"},\n    {en: \"I can ride it\", ua: \"Я могу ездить на ней\"},\n    {en: \"I was counting\", ua: \"on him\tЯ рассчитывал на него\"},\n    {en: \"Come in home\", ua: \"Приходить домой\"},\n    {en: \"Definition\", ua: \t\"Определение\"},\n    {en: \"thank you all the same\", ua: \"(all the same)\tспасибо всем вам одно и то же   (все равно)\"},\n    {en: \"I am also keen on\", ua: \"Я тоже в восторге \"},\n    {en: \"Get that bit out\", ua: \"Убрать эту часть\"},\n    {en: \"essentially i can say okey?\", ua:\t\"Я могу сказать хорошо?\"},\n    {en: \"Determine\", ua: \"Определять\"},\n    {en: \"You might to watch the attitude\",\tua: \"Вы могли бы следить за отношением\"},\n    {en: \"Witch another way of saying we are poor\",\tua: \"Ведьма еще один способ сказать, что мы бедные\"},\n    {en: \"and i'm quite capable of handing everything\",\tua: \"И я вполне способен дать все\"},\n    {en: \"kind of\", ua: \"своего рода\"},\n    {en: \"sort of\", ua: \"своего рода\"},\n    {en: \"vacation\", ua: \"отпуск\"},\n    {en: \"what brings you here\", ua: \"что привело тебя сюда\"},\n    {en: \"near\", ua: \"вблизи\"},\n    {en: \"Rude\", ua: \"Грубый\"},\n    {en: \"You will figured it out\", ua: \"Ты разберешься с этим\"},\n    {en: \"i ran into Sam\", ua: \"Я столкнулась с Сэмом\"},\n    {en: \"Adorable\", ua: \"Очаровательный \"},\n    {en: \"You cut those oranges into nice little wedges\", ua: \"Ты разрезаешь апельсины на милые маленькие клинья \"},\n    {en: \"Was I wrong\",\tua: \"Был ли я неправ\"},\n    {en: \"Responsible for human life\", ua: \"Ответственный за человеческую жизнь\"},\n    {en: \"But no like you older\", ua: \"Но не так, как ты старше\"},\n    {en: \"Don’t pray for any of em\", ua: \"Не молись ни за кого из них\"},\n    {en: \"i kept the receipt\", ua: \"я сохранил квитанцию\"},\n    {en: \"i have trained you well\",\tua: \"Я хорошо обучил тебя\"},\n    {en: \"exponentially\", ua: \"экспоненциально\"},\n    {en: \"If you wanna measure my iq\", ua: \"Если вы хотите измерить мой коэффициент интеллекта\"},\n    {en: \"You are barking up the wrong tree\", ua: \"Ты лаешь не на то дерево\"},\n    {en: \"well i will get just right to the point\", ua: \"Я перейду прямо к делу\"},\n    {en: \"Sheldon is impressive addition\", ua: \"Шелдон - впечатляющее дополнение\"},\n    {en: \"i didn't shake her hand\", ua: \"Я не пожимал ей руку\"},\n    {en: \"i was brought to this school\", ua: \"Меня привели в эту школу\"},\n    {en: \"You are barking up the wrong tree\", ua: \"Ты лаешь не на то дерево\"},\n    {en: \"to put pressure on you\", ua: \"чтобы надавить на тебя\"},\n    {en: \"to a lot of pressure on me\", ua: \"сильно давить на меня\"},\n    {en: \"all the same\", ua: \"все равно\"},\n    {en: \"i am also keen on\", ua: \"Я тоже в восторге\"},\n    {en: \"overalls my ass\", ua: \"комбинезончик\"},\n    {en: \"that basic particles\", ua: \"что основные частицы\"},\n    {en: \"that make up reality\", ua: \"которые составляют реальность\"},\n    {en: \"but i don't turn it on\", ua: \"но я не включаю его\"},\n    {en: \"go ahead\", ua: \"давай\"},\n    {en: \"leaping and dancing\", ua: \"прыжки и танцы\"},\n    {en: \"did it work\", ua: \"сработало\"},\n    {en: \"if i offer a stately bow\", ua: \"если я предложу величественный поклон\"},\n    {en: \"haven't been to many wedding lately\", ua: \"не часто бывали на свадьбах в последнее время\"},\n    {en: \"i happen to agree\", ua: \"Я с вами согласен\"},\n    {en: \"funeral\", ua: \"похоронный\"},\n    {en: \"furniture king\", ua: \"мебельный король\"},\n    {en: \"i had an obligation\",\tua: \"у меня были обязательства\"},\n    {en: \"and turned out fine\", ua: \"и все закончилось хорошо\"},\n    {en: \"you owe her an apology\", ua: \"ты должен перед ней извиниться\"},\n    {en: \"it turn out\", ua: \"оказывается\"},\n    {en: \"well i will get just right to the point\", ua: \"Я перейду прямо к делу\"},  \n    {en: \"Competition\", ua: \"Конкуренти\"},\n    {en: \"Conversely\", ua: \"А з іншого боку\"},\n    {en: \"Specific\", ua: \"Іменно\"},\n    {en: \"Outside\", ua: \"Зовні\"},\n    {en: \"Careful\", ua: \"Обежений\"},\n    {en: \"Decisions\", ua: \"Рішення\"},\n    {en: \"Rate \", ua: \"Показаник\"},\n    {en: \"Direction\", ua: \"Напрямок\"},\n    {en: \"It was developed by SOMETHING in\", ua: \"Воно було розроблено кимось у якомусь\"},\n    {en: \"Reusable\", ua: \"Перевикористовувані\"},\n    {en: \"separately from the others\", ua: \"Віддільно від остальних\"},\n    {en: \"Major advantages\", ua: \"Остновні переваги\"},\n    {en: \"What are some of react limitation\", ua: \"Які є ліміти в реакті\"},\n    {en: \"Solid\", ua: \"Міцний\"},\n    {en: \"Is equal to\", ua: \"=\"},\n    {en: \"Add\", ua: \"+\"},\n    {en: \"Subtract\", ua: \"-\"},\n    {en: \"Variable\", ua: \"Змінна\"},\n    {en: \"Announcement\", ua: \"Об'явлення\"},\n    {en: \"will be carefully\", ua: \"буде обережно\"},\n    {en: \"i salute you\", ua: \"я вітаю вас\"},\n    {en: \"to fall out\", ua: \"випадати\"},\n    {en: \"did you compose \", ua: \"ти склав\"},\n    {en: \"hurry up\", ua: \"поспішай\"},\n    {en: \"apparently\", ua: \"мабуть\"},\n    {en: \"complicated\t\", ua: \"складний\"},\n    {en: \"i tend to hurt women\", ua: \"Я схильний ображати жінок\"},\n    {en: \"i suppose so\t\", ua: \"я теж так думаю\"},\n    {en: \"survival kit\t\", ua: \"комплект для виживання\"},\n    {en: \"i got confused \", ua: \"я заплутався\"},\n    {en: \"i don't recognize this place\", ua: \"я не впізнаю це місце\"},\n    {en: \"why i bothering you\", ua: \"чому я тебе турбую\"},\n    {en: \"i wanted to oppologize\", ua: \"я хотів вибачитися\"},\n    {en: \"tent\", ua: \"намет\"},\n    {en: \"when she worries about me\t\", ua: \"коли вона турбується про мене\"},\n    {en: \"ever\", ua: \"коли-небудь\"},\n    {en: \"personally\", ua: \"особисто\"},\n    {en: \"which is when i stopped shagging him\", ua: \"саме тоді я перестав з ним трахатися\"},\n    {en: \"you are not supposed to stay friends with him\t\", ua: \"ти не повинен залишатися з ним друзями\"},\n    {en: \"i made the suggestion that i can to work myself\t\", ua: \"я запропонував, що можу працювати сам\"},\n    {en: \"advantage\", ua: \"перевага\"},\n    {en: \"that's over\", ua: \"це закінчено\"},\n    {en: \"i'm so aware of it\", ua: \"я так усвідомлюю це\"},\n    {en: \"did you file your story\", ua: \"ти подав свою історію\"},\n    {en: \"i never cheat on you\", ua: \"я ніколи не зраджую тобі\"},\n    {en: \"Generally\t\", ua: \"Загалом\"},\n    {en: \"Everybody stirs tea the special spoon\t\", ua: \"Кожен помішує чай спеціальною ложкою\"},\n    {en: \"Carefully\", ua: \"Обережно\"},\n    {en: \"Deploy\", ua: \"Розгорунти\"},\n    {en: \"they'll survive\", ua: \"они выживут\"},\n    {en: \"Escape\", ua: \"избежать\"},\n    {en: \"it's no over\", ua: \"это не конец\"},\n    {en: \"i was scary\", ua: \"Мені було страшно\"},\n    {en: \"substitute\", ua: \"Заміна\"},\n    {en: \"to the right of here\", ua: \"праворуч звідси\"},\n    {en: \"three years ago i was banished\", ua: \"три роки тому мене вислали\"},\n    {en: \"that came out wrong\", ua: \"що вийшло не так\"},\n    {en: \"tide\", ua: \"припливу\"},\n    {en: \"i'm afraid\", ua: \"Я боюся\"},\n    {en: \"made up their mind\", ua: \"вирішили\"},\n    {en: \"awesome\", ua: \"приголомшливий\"},\n    {en: \"one hair out of place\", ua: \"одне волосся не на місці\"},\n    {en: \"go ahead and glow it up\", ua: \"ідіть і запаліть його\"},\n    {en: \"What are your purpose\", ua: \"Які ваші цілі\"},\n    {en: \"apparently that you love her\", ua: \"мабуть, ти її любиш\"},\n    {en: \"even though i was born blind\", ua: \"хоча я народився сліпим\"},\n    {en: \"Even though\", ua: \"Незважаючи на\"},\n    {en: \"actually, it's quite the other way around\", ua: \" На самом деле, это совсем другой способ\"},\n    {en: \"I admit it\", ua: \"Я визнаю це\"},\n    {en: \"what are your purpose\", ua: \"яка ваша мета\"},\n    {en: \"apparently that you love her\", ua: \"мабуть, ти її любиш\"},\n    {en: \"all that time\", ua: \"весь цей час\"},\n    {en: \"somehow\", ua: \"якось\"},\n    {en: \"advance\", ua: \"заздалегідь\"},\n    {en: \"it's time to resume your training\", ua: \"настав час відновити навчання\"},\n    {en: \"but unfortunately for you\", ua: \"але на жаль для вас\"},\n    {en: \"precise\", ua: \"точний\"},\n    {en: \"separate\", ua: \"окремо\"},\n    {en: \"brute\", ua: \"грубий\"},\n    {en: \"i despise\", ua: \"я зневажаю\"},\n    {en: \"i ate like a pig\", ua: \"я їв як свиня\"},\n];\n\nconst users = [\n    {\n        name: \"oleg\",\n        surname: \"salabay\",\n        email: \"olegsalabaymac@gmail.com\",\n        photo: \"\",\n        describe: \"\",\n        password: \"1234\",\n        role: \"admin\",\n        dictionary: [],\n    }\n];\n\nexport {\n    allWords,\n    users\n};\n\n// {en: \"please call me\", ua: \"будь ласка, зателефонуй мені\"},\n// {en: \"from my point of you\", ua: \"з моєї точки зору вас\"},\n// {en: \"with regard to\", ua: \"стосовно\"},\n// {en: \"my best guess\", ua: \"моє найкраще припущення\"},\n// {en: \"as far as i can see\", ua: \"наскільки я бачу\"},\n// {en: \"besides\", ua: \"крім того\"},\n// {en: \"despite\", ua: \"незважаючи\"},\n// {en: \"based on\", ua: \"на основі\"},\n// {en: \"capable of\", ua: \"здатний\"},\n// {en: \"envious of\", ua: \"заздрить\"},\n// {en: \"famous of\", ua: \"відомий з\"},\n// {en: \"guilty of\", ua: \"винен у\"},\n// {en: \"keen on\", ua: \"Захоплюється\"},\n// {en: \"opposed to\", ua: \"на відміну від\"},\n// {en: \"used to\", ua: \"звик до\"},\n// {en: \"well done\", ua: \"молодець\"},\n// {en: \"keep it up\", ua: \"так тримати\"},\n// {en: \"that's better than ever\", ua: \"це краще, ніж будь -коли\"},\n// {en: \"dont apologize\", ua: \"не вибачайтесь\"},\n// {en: \"forget about it\", ua: \"забути про це\"},\n// {en: \"miracle\", ua: \"диво\"},\n// {en: \"passion\", ua: \"пристрасть\"},\n// {en: \"disire\", ua: \"неспроможність\"},\n// {en: \"in other words\", ua: \"іншими словами\"},\n// {en: \"however\", ua: \"проте\"},\n// {en: \"on the country\", ua: \"про країну\"},\n// {en: \"after all\", ua: \"після всього\"},\n// {en: \"to date\", ua: \"на сьогоднішній день\"},\n// {en: \"assume\", ua: \"припустити\"},\n// {en: \"there is\", ua: \"існує\"},\n// {en: \"gotta be\", ua: \"повинен бути\"},\n// {en: \"definitely\", ua: \"безумовно\"},\n// {en: \"recently, i notice that\", ua: \"нещодавно я помітив це\"},\n// {en: \"he is restrain\", ua: \"він стриманий\"},\n// {en: \"one of them\", ua: \"один з них\"},\n// {en: \"wake up\", ua: \"прокинься\"},\n// {en: \"whatever\", ua: \"що завгодно\"},\n// {en: \"something stange\", ua: \"щось стояти\"},\n// {en: \"what is the benefit\", ua: \"яка користь\"},\n// {en: \"refer\", ua: \"посилатися\"},\n// {en: \"execute\", ua: \"виконувати\"},\n// {en: \"communicated\", ua: \"спілкувалися\"},\n// {en: \"consist\", ua: \"складатися\"},\n// {en: \"examine\", ua: \"оглядати\"},\n// {en: \"what kind of\", ua: \"якого типу\"},\n// {en: \"to aassume\", ua: \"прийняти\"},\n// {en: \"i notice\", ua: \"я помітив\"},\n// {en: \"to restrain\", ua: \"стримувати\"},\n// {en: \"ordinary\", ua: \"звичайний\"},\n// {en: \"underdog\", ua: \"андердог\"},\n// {en: \"to pick on\", ua: \"підбирати\"},\n// {en: \"affection\", ua: \"прихильність\"},\n// {en: \"if i were you\", ua: \"на твоєму місці\"},\n// {en: \"long time no see\", ua: \"давно не бачились\"},\n// {en: \"greit to see you\", ua: \"вітаю вас\"},\n// {en: \"i am not being funny\", ua: \"я не смішний\"},\n// {en: \"to be honest\", ua: \"чесно кажучи\"},\n// {en: \"i would love but\", ua: \"я хотів би, але\"},\n// {en: \"supposed you have\", ua: \"припустимо, що у вас є\"},\n// {en: \"stab\", ua: \"колоти\"},\n// {en: \"with pleasure\", ua: \"із задоволенням\"},\n// {en: \"deprecated\", ua: \"застарілий\"},\n// {en: \"he is suspect that\", ua: \"він підозрюється в цьому\"},\n// {en: \"we will probably\", ua: \"ми напевно будемо\"},\n// {en: \"we gotta go\", ua: \"ми маємо йти\"},\n// {en: \"it looks desperat\", ua: \"виглядає відчайдушно\"},\n// {en: \"incredible\", ua: \"неймовірний\"},\n// {en: \"you should not have gone\", ua: \"ти не повинен був їхати\"},\n// {en: \"converge on\", ua: \"сходитись далі\"},\n// {en: \"rarely\", ua: \"рідко\"},\n// {en: \"barely\", ua: \"ледве\"},\n// {en: \"i needed out\", ua: \"мені потрібен був вихід\"},\n// {en: \"i guess anywhere\", ua: \"я здогадуюсь де завгодно\"},\n// {en: \"is that like\", ua: \"це схоже\"},\n// {en: \"dont get me wrong\", ua: \"не зрозумійте мене неправильно\"},\n// {en: \"how come\", ua: \"як так\"},\n// {en: \"long story short\", ua: \"короткий розповідь\"},\n// {en: \"did you ever thing that\", ua: \"ти коли небудь таке робив\"},\n// {en: \"i realized\", ua: \"я зрозумів\"},\n// {en: \"i moved out\", ua: \"я виїхав\"},\n// {en: \"odd choice\", ua: \"непарний вибір\"},\n// {en: \"it scare me\", ua: \"це мене лякає\"},\n// {en: \"that is weird\", ua: \"це дивно\"},\n// {en: \"in fact\", ua: \"фактично\"},\n// {en: \"expessially\", ua: \"бездоганно\"},\n// {en: \"i mention\", ua: \"я згадую\"},\n// {en: \"i am impressed\", ua: \"я перебуваю під враженням\"},\n// {en: \"appropriate\", ua: \"відповідний\"},\n// {en: \"whole bunch\", ua: \"ціла купа\"},\n// {en: \"litteraly\", ua: \"буквально\"},\n// {en: \"i was sore the next day\", ua: \"наступного дня мені стало боляче\"},\n// {en: \"advance\", ua: \"заздалегідь\"},\n// {en: \"influence\", ua: \"впливати\"},\n// {en: \"separate\", ua: \"окремі\"},\n// {en: \"we'll\", ua: \"добре\"},\n// {en: \"swept\", ua: \"підмітається\"},\n// {en: \"nonverbal\", ua: \"невербальний\"},\n// {en: \"actually\", ua: \"насправді\"},\n// {en: \"wanna\", ua: \"хочу\"},\n// {en: \"gonna\", ua: \"збираюся\"},\n// {en: \"get away\", ua: \"втекти\"},\n// {en: \"to be into something\", ua: \"займатися чимось\"},\n// {en: \"mess with fate\", ua: \"возитися з долею\"},\n// {en: \"relationship\", ua: \"відносини\"},\n// {en: \"i am little uncomfortable with this anyway\", ua: \"мені все одно трохи неприємно від цього\"},\n// {en: \"some good ones\", ua: \"кілька хороших\"},\n// {en: \"i'm desperate, basically\", ua: \"я відчайдушно, в основному\"},\n// {en: \"not in general\", ua: \"не загалом\"},\n// {en: \"i realize that\", ua: \"я це усвідомлюю\"},\n// {en: \"you swing for the fence. hold on aa second, Albert\", ua: \"ти розгойдуєшся за паркан. зачекайте секунду, Альберте\"},\n// {en: \"That's good\", ua: \"Добре\"},\n// {en: \"how ridiculous this is\", ua: \"як це смішно\"},\n// {en: \"you know what it's like\", ua: \"ти знаєш, як це\"},\n// {en: \"wrong\", ua: \"неправильно\"},\n// {en: \"but at the same time\", ua: \"але водночас\"},\n// {en: \"let's go paint that seiling\", ua: \"підемо пофарбувати це сідло\"},\n// {en: \"take it easy\", ua: \"заспокойся\"},\n// {en: \"On the one hand\", ua: \"З одного боку\"},\n// {en: \"i thought  to ask\", ua: \"я думав запитати\"},\n// {en: \"passion for\", ua: \"пристрасть до\"},\n// {en: \"respond\", ua: \"відповідати\"},\n// {en: \"samples\", ua: \"зразки\"},\n// {en: \"we will run the whole lot of them by you\", ua: \"ми всі ними керуватимемо вами\"},\n// {en: \"let is go over this one more time\", ua: \"давайте розглянемо це ще раз\"},\n// {en: \"what is the objective\", ua: \"яка мета\"},\n// {en: \"shock and awe\", ua: \"шок і трепет\"},\n// {en: \"awful\", ua: \"жахливо\"},\n// {en: \"exactly\", ua: \"саме\"},\n// {en: \"handle\", ua: \"ручка\"},\n// {en: \"to go over things\", ua: \"перебирати речі\"},\n// {en: \"I going to buy a car there over\", ua: \"Я збираюся купити там машину\"},\n// {en: \"occasionally\", ua: \"зрідка\"}, \n// {en: \"assist\", ua: \"допомагати\"},\n// {en: \"complicate\", ua: \"ускладнювати\"},\n// {en: \"collecte\", ua: \"збирати\"},\n// {en: \"standardize\", ua: \"стандартизувати\"},\n// {en: \"should go\", ua: \"повинен йти\"},\n// {en: \"at the same time\", ua: \"в той самий час\"},\n// {en: \"i feel obliged\", ua: \"я відчуваю себе зобов'язаним\"},\n// {en: \"first crossed my mind\", ua: \"вперше прийшло в голову\"},\n// {en: \"noting\", ua: \"відзначаючи\"},\n// {en: \"introvert\", ua: \"інтроверт\"},\n// {en: \"accross\", ua: \"навпроти\"},\n// {en: \"right away\", ua: \"зразу\"},\n// {en: \"assign\", ua: \"призначити\"},\n// {en: \"available\", ua: \"доступний\"},\n// {en: \"You should inform\", ua: \"Вам слід повідомити\"},\n// {en: \"From time to time\", ua: \"Час від часу\"},\n// {en: \"I turned on the dota\", ua: \"Я включив доту\"},\n// {en: \"urgent\", ua: \"терміново\"},\n// {en: \"Cool-headed\", ua: \"З холодною головою\"},\n// {en: \"The fact is that\", ua: \"Справа в тому, що\"},\n// {en: \"Evidence\", ua: \"Докази\"},\n// {en: \"You should be honest with what is going on\", ua: \"Ви повинні бути чесними з тим, що відбувається\"},\n// {en: \"You were busy with the emergency task\", ua: \"Ви були зайняті надзвичайним завданням\"},\n// {en: \"You will apologies and prioritise this task.\", ua: \"Ви вибачитесь і визначите пріоритетність цього завдання\"}, \n// {en: \"what he thinks of proposed solution\", ua: \"що він думає про запропоноване рішення\"},\n// {en: \"and it will be less time consuming than writing a long post.\", ua: \"і це займе менше часу, ніж написання довгого повідомлення\"},\n// {en: \"Notifying the client on the time about your vacations and obligations\", ua: \"Повідомлення клієнта вчасно про ваші відпустки та обов’язки\"},\n// {en: \"feature\", ua: \"функція\"},\n// {en: \"in front of her\", ua: \"перед нею\"},\n// {en: \"Plenty\", ua: \"Вдосталь\"},\n// {en: \"and the essense the fact is\", ua: \"і суть в тому\"},\n// {en: \"Frequently\", ua: \"зрідка\"},\n// {en: \"such as what\", ua: \"наприклад що\"},\n// {en: \"Playing football\", ua: \"Грати у футбол\"},\n// {en: \"Before\", ua: \"Раніше\"},\n// {en: \"However\", ua: \"Однак\"}, \n// {en: \"The most\", ua: \"Найбільший\"},  \n// {en: \"on daily basis\", ua: \"на щоденній основі\"},\n// {en: \"I am constantly thinking about you.\", ua:\t\"Я постійно думаю про тебе\"},\n// {en: \"how is it going?\", ua: \"Як справи?\"},\n// {en: \"I owe to you\", ua: \"Я тобі винен\"},\n// {en: \"My pleasure\", ua: \"Немає за що \"},\n// {en: \"That reminds me\", ua: \"О згадав\"},\n// {en: \"To ring a bell\", ua: \"Звучить знайомо\"},\n// {en: \"Could you do me a favor?\", ua: \"Ти можеж мені помогти?\"},\n// {en: \"It’s may be aa bit tricky\", ua: \"Це може бути трохи важко\"},\n// {en: \"It was chatting to you!\", ua: \"Було приємно проговорити\"},\n// {en: \"I gotta go!\", ua: \"Я маю йти\"},\n// {en: \"Can’t complain\", ua: \"Не жаліюсь\"},\n// {en: \"I am constantly thinking about you\", ua: \"And measure Я постоянно думаю о тебе\"},\n// {en: \"how is it going?\",ua: \t\"Как у вас дела?\"},\n// {en: \"Everything I now possess, I owe to you.\",ua: \"Все, чем я сейчас обладаю, я обязан тебе.\"},\n// {en: \"My pleasure\",\tua: \"Мое удовольствие\"},\n// {en: \"That reminds me, I must post that letter.\", ua: \"Это напомнило мне, что я должен отправить это письмо.\"},\n// {en: \"To ring a bell\",ua: \t\"Колокол\"},\n// {en: \"Could you do me a favor?\",ua: \"Можешь сделать мне одолжение? \"},\n// {en: \"It’s may be a bit tricky\",ua: \"Это может быть немного сложно\"},\n// {en: \"It was chatting to you!\",ua: \"Он разговаривал с тобой!\"},\n// {en: \"I gotta go!\",ua: \"Я должен идти, Дживс!\"},\n// {en: \"Can’t complain\",ua: \"Не могу жаловаться\"},\n// {en: \"Destroy\", ua: \"Знищити\"},\n// {en: \"Adventure\", ua: \"Пригоди\"},\n// {en: \"Predict\", ua: \"Передбачити\"},\n// {en: \"Produce\", ua: \"Виробляти\"},\n// {en: \"Complete\", ua: \"Повна\"},\n// {en: \"Truly\", ua: \"Воістину\"},\n// {en: \"Burst\", ua: \"Вибух\"},\n// {en: \"Supply\", ua: \"Постачання\"},\n// {en: \"Instead\", ua: \"Натомість\"},\n// {en: \"Spare\", ua: \"Запасний\"},\n// {en: \"At once\", ua: \"Якось\"},\n// {en: \"Explode\", ua: \"Вибухнути\"},\n// {en: \"Literally\", ua: \"Буквально\"},\n// {en: \"Spy\", ua: \"Шпигун\"},\n// {en: \"Closer\", ua: \"Ближче\"},\n// {en: \"Stab\", ua: \"Колоти\"},\n// {en: \"Court\", ua: \"Суд\"},\n// {en: \"Goal\", ua: \"Гол\"},\n// {en: \"Worn\", ua: \"Зношені\"},\n// {en: \"Observe\", ua: \"Спостерігати\"},\n// {en: \"Impatient\", ua: \"Нетерплячий\"},\n// {en: \"evidence\", ua: \"Свідчення\"},\n// {en: \"Flare\", ua: \"Спалах\"},\n// {en: \"Blame\", ua: \"Винуватий\"},\n// {en: \"Threat\", ua: \"Загроза\"},\n// {en: \"Trail\", ua: \"Стежка\"},\n// {en: \"Respect\", ua: \"Повага\"},\n// {en: \"Fool\", ua: \"Дурень\"},\n// {en: \"Escape\", ua: \"Втеча\"},\n// {en: \"Sake\", ua: \"Користь\"},\n// {en: \"Reveal\", ua: \"Розкрити\"},\n// {en: \"Coward\", ua: \"Боягуз\"},\n// {en: \"Proud\", ua: \"Гордий\"},\n// {en: \"Admit\", ua: \"Визнати\"},\n// {en: \"Pure\", ua: \"Чистий\"},\n// {en: \"Cooperate\", ua: \"Співпрацювати\"},\n// {en: \"Eventually\", ua: \"Зрештою\"},\n// {en: \"Solve\", ua: \"Розв’язати\"},\n// {en: \"Envy\", ua: \"Заздрість\"},\n// {en: \"Regret\", ua: \"Шкода\"},\n// {en: \"Obviously\", ua: \"Очевидно\"},\n// {en: \"Apparently\", ua: \"Мабуть\"},\n// {en: \"Evil\", ua: \"Зло\"},\n// {en: \"Rush\", ua: \"Поспіх\"},\n// {en: \"Employ\", ua: \"Працевлаштування\"},\n// {en: \"Dire\", ua: \"Страшно\"},\n// {en: \"Consequence\", ua: \"Наслідок\"},\n// {en: \"Spans\", ua: \"Прольоти\"},\n// {en: \"Able\", ua: \"Здатний\"},\n// {en: \"Barely\", ua: \"Ледве\"},\n// {en: \"Deliver\", ua: \"Доставити\"},\n// {en: \"Rely\", ua: \"Вірити\"},\n// {en: \"Honey\", ua: \"Мед\"},\n// {en: \"Mock\", ua: \"Макет\"},\n// {en: \"Betray\", ua: \"Зрада\"},\n// {en: \"Get on\", ua: \"Вступайте\"},\n// {en: \"Trust\", ua: \"Довіра\"},\n// {en: \"Steer\", ua: \"Рульове управління\"},\n// {en: \"Demand\", ua: \"Попит\"},\n// {en: \"Cost\", ua: \"Вартість\"},\n// {en: \"Pleasure\", ua: \"Задоволення\"},\n// {en: \"Edit\", ua: \"Редагувати\"},\n// {en: \"Case\", ua: \"Футляр\"},\n// {en: \"Template\", ua: \"Шаблон\"},\n// {en: \"Give up\", ua: \"Здаватися\"},\n// {en: \"Robber\", ua: \"Розбійник\"},\n// {en: \"Suddenly\", ua: \"Раптом\"},\n// {en: \"Separate\", ua: \"Окремі\"},\n// {en: \"Dest\", ua: \"Доля\"},\n// {en: \"Primarily\", ua: \"Насамперед\"},\n// {en: \"Barely\", ua: \"Ледве\"},\n// {en: \"trap\", ua: \"ловушка\"},\n// {en: \"Shelter\", ua: \"Укриття\"},\n// {en: \"Hang\", ua: \"Повісити\"},\n// {en: \"around\", ua: \"навколо\"},\n// {en: \"Surround\", ua: \"Об'ємне звучання\"},\n// {en: \"Instant\", ua: \"Миттєвий\"},\n// {en: \"Lick\", ua: \"Лизати\"},\n// {en: \"Chill out\", ua: \"Розслабся\"},\n// {en: \"Sprain\", ua: \"Розтягнення\"},\n// {en: \"Exact\", ua: \"Точний\"},\n// {en: \"To sum up\", ua: \"Підсумовуючи\"},\n// {en: \"Stare at\", ua: \"Дивитися на\"},\n// {en: \"Advert\", ua: \"Реклама\"},\n// {en: \"Bumb\", ua: \"Бум\"},\n// {en: \"into\", ua: \"в\"},\n// {en: \"Get into\", ua: \"Залазь\"},\n// {en: \"Stuffy\", ua: \"в'язкий\"},\n// {en: \"Crave\", ua: \"Жадати\"},\n// {en: \"Confuse\", ua: \"Плутати\"},\n// {en: \"Elect\", ua: \"Обраний\"},\n// {en: \"Enforce\", ua: \"Примусити\"},\n// {en: \"Impress\", ua: \"Вразити\"},\n// {en: \"Struggle\", ua: \"Боротьба\"},\n// {en: \"Compulsory\", ua: \"Обов’язковий\"},\n// {en: \"Climb\", ua: \"Підйом\"},\n// {en: \"Cliff\", ua: \"Скеля\"},\n// {en: \"Base\", ua: \"База\"},\n// {en: \"Camp\", ua: \"Табір\"},\n// {en: \"Admire\", ua: \"Захоплюватися\"},\n// {en: \"Sight\", ua: \"Зір\"},\n// {en: \"Recover\", ua: \"Відновити\"},\n// {en: \"Vomit\", ua: \"Блювота\"},\n// {en: \"Fever\", ua: \"Лихоманка\"},\n// {en: \"Herbar\", ua: \"Гербар\"},\n// {en: \"Dizzy\", ua: \"Запаморочення\"},\n// {en: \"Injection\", ua: \"Ін'єкції\"},\n// {en: \"Busy\", ua: \"Зайнято\"},\n// {en: \"Dedicate\", ua: \"Присвячувати\"},\n// {en: \"Prescribe\", ua: \"Призначити\"},\n// {en: \"Receive\", ua: \"Отримувати\"},\n// {en: \"Invent\", ua: \"Винайти\"},\n// {en: \"Average\", ua: \"Середній\"},\n// {en: \"Aware\", ua: \"Усвідомлений\"},\n// {en: \"Confuse\", ua: \"Плутати\"},\n// {en: \"Daily\", ua: \"Щоденно\"},\n// {en: \"Shout\", ua: \"Кричати\"},\n// {en: \"Tend\", ua: \"Схильні\"},\n// {en: \"Lean\", ua: \"Пісний\"},\n// {en: \"Quilt\", ua: \"Ковдра\"},\n// {en: \"Wide\", ua: \"Широкий\"},\n// {en: \"Rude\", ua: \"Грубо\"},\n// {en: \"Consider\", ua: \"Поміркуйте\"},\n// {en: \"Faced\", ua: \"Зіткнувся\"},\n// {en: \"Permit\", ua: \"Дозвіл\"},\n// {en: \"Occurs\", ua: \"Виникає\"},\n// {en: \"Apply\", ua: \"Застосувати\"},\n// {en: \"Hybrid\", ua: \"Гібридний\"},\n// {en: \"Assume\", ua: \"Припустимо\"},\n// {en: \"Aligned\", ua: \"Вирівняно\"},\n// {en: \"Volume\", ua: \"Обсяг\"},\n// {en: \"Motion\", ua: \"Рух\"},\n// {en: \"Impact\", ua: \"Вплив\"},\n// {en: \"Because Of Me\", ua: \"Через мене\"},\n// {en: \"Actually\", ua: \"Власне\"},\n// {en: \"Inspect\", ua: \"Оглянути\"},\n// {en: \"Enture\", ua: \"Підприємство\"},\n// {en: \"Impression\", ua: \"Враження\"},\n// {en: \"The same\", ua: \"Той самий\"},\n// {en: \"Quite\", ua: \"Цілком\"},\n// {en: \"Reject\", ua: \"Відхилити\"},\n// {en: \"Absent\", ua: \"Відсутній\"},\n// {en: \"Occurs\", ua: \"Виникає\"},\n// {en: \"Woolly\", ua: \"Вовняний\"},\n// {en: \"Hybrid\", ua: \"Гібридний\"},\n// {en: \"There for\", ua: \"Там для\"},\n// {en: \"Hence\", ua: \"Отже\"},\n// {en: \"Indeed\", ua: \"Дійсно\"},\n// {en: \"Generally\", ua: \"Загалом\"},\n// {en: \"Besides\", ua: \"Крім того\"},\n// {en: \"In spite of\", ua: \"Попри\"},\n// {en: \"As a rule\", ua: \"Як правило\"},\n// {en: \"Freak\", ua: \"Виродка\"},\n// {en: \"Calm down\", ua: \"Заспокойся\"},\n// {en: \"Never mina\", ua: \"Ніколи не міна\"},\n// {en: \"I mean\", ua: \"Я маю на увазі\"},\n// {en: \"For real\", ua: \"Насправді\"},\n// {en: \"Like what\", ua: \"Як що\"},\n// {en: \"Cheer\", ua: \"Вболівати\"},\n// {en: \"Get in\", ua: \"Залазь\"},\n// {en: \"Holds\", ua: \"Тримає\"},\n// {en: \"On time\", ua: \"Вчасно\"},\n// {en: \"Scary\", ua: \"Страшно\"},\n// {en: \"Fellow\", ua: \"Товариш\"},\n// {en: \"Gather\", ua: \"Збирати\"},\n// {en: \"Duties\", ua: \"Обов’язки\"},\n// {en: \"Vary\", ua: \"Варіація\"},\n// {en: \"Income\", ua: \"Дохід\"},\n// {en: \"Profit\", ua: \"Прибуток\"},\n// {en: \"Decade\", ua: \"Десятиліття\"},\n// {en: \"Burnt\", ua: \"Вигоріла\"},\n// {en: \"To note\", ua: \"Занотовувати\"},\n// {en: \"Shape\", ua: \"Форма\"},\n// {en: \"Restock\", ua: \"Поповнення запасів\"},\n// {en: \"Amount\", ua: \"Сума\"},\n// {en: \"Extreme\", ua: \"Екстремальний\"},\n// {en: \"Source\", ua: \"Джерело\"},\n// {en: \"Conversation\", ua: \"Бесіда\"},\n// {en: \"Average\", ua: \"Середній\"},\n// {en: \"Obtain\", ua: \"Отримати\"},\n// {en: \"Arrange\", ua: \"Влаштувати\"},\n// {en: \"Blind\", ua: \"Сліпий\"},\n// {en: \"Wage\", ua: \"Заробітна плата\"},\n// {en: \"Rural\", ua: \"Сільський\"},\n// {en: \"Goal\", ua: \"Гол\"},\n// {en: \"Approach\", ua: \"Підхід\"},\n// {en: \"Pull\", ua: \"Потягнути\"},\n// {en: \"Undo\", ua: \"Скасувати\"},\n// {en: \"Redo\", ua: \"Повторити\"},\n// {en: \"Comit\", ua: \"Комітет\"},\n// {en: \"Examine\", ua: \"Вивчити\"},\n// {en: \"Request\", ua: \"Запит\"},\n// {en: \"Ref\", ua: \"Посилання\"},\n// {en: \"Consistent\", ua: \"Послідовний\"},\n// {en: \"Bundle\", ua: \"Пачка\"},\n// {en: \"Trial\", ua: \"Випробування\"},\n// {en: \"Affirm\", ua: \"Підтвердити\"},\n// {en: \"Such\", ua: \"Такі\"},\n// {en: \"Special\", ua: \"Спеціальні\"},\n// {en: \"adjust\", ua: \"коригувати\"},\n// {en: \"charm\", ua: \"чарівність\"},\n// {en: \"merger\", ua: \"злиття\"},\n// {en: \"move\", ua: \"рухатися\"},\n// {en: \"embody\", ua: \"втілювати\"},\n// {en: \"baffled\", ua: \"збентежений\"},\n// {en: \"don't worry\", ua: \"не хвилюйтесь\"},\n// {en: \"time has passed\", ua: \"час минув\"},\n// {en: \"press\", ua: \"прес\"},\n// {en: \"produce\", ua: \"виробляти\"},\n// {en: \"approve\", ua: \"схвалювати\"},\n// {en: \"deploy\", ua: \"розгорнути\"},\n// {en: \"conversation\", ua: \"розмова\"},\n// {en: \"intersection\", ua: \"перехрестя\"},\n// {en: \"customize\", ua: \"налаштувати\"},\n// {en: \"reproduce\", ua: \"відтворювати\"},\n// {en: \"quickly\", ua: \"швидко\"},\n// {en: \"decition\", ua: \"постановлення\"},\n// {en: \"anable\", ua: \"анаболічний\"},\n// {en: \"mention\", ua: \"згадка\"},\n// {en: \"metric\", ua: \"метричні\"},\n// {en: \"comper\", ua: \"компер\"},\n// {en: \"regarding\", ua: \"стосовно\"},\n// {en: \"becomes\", ua: \"стає\"},\n// {en: \"publisher\", ua: \"видавець\"},\n// {en: \"immpresion\", ua: \"імпресія\"},\n// {en: \"sentually\", ua: \"посланний\"},\n// {en: \"mock\", ua: \"макет\"},\n// {en: \"difficult\", ua: \"важко\"},\n// {en: \"generally\", ua: \"загалом\"},\n// {en: \"quickly\", ua: \"швидко\"},\n// {en: \"decition\", ua: \"постановлення\"},\n// {en: \"mention\", ua: \"згадка\"},\n// {en: \"compare\", ua: \"порівнювати\"},\n// {en: \"regarding\", ua: \"стосовно\"},\n// {en: \"becomes\", ua: \"стає\"},\n// {en: \"publisher\", ua: \"видавець\"},\n// {en: \"immpretion\", ua: \"імпресія\"},\n// {en: \"mock\", ua: \"макет\"},\n// {en: \"difficult\", ua: \"важко\"},\n// {en: \"generally\", ua: \"загалом\"},\n// {en: \"imoleament\", ua: \"підживлення\"},\n// {en: \"compale\", ua: \"ущільнювати\"},\n// {en: \"simmilar\", ua: \"подібний\"},\n// {en: \"compatible\", ua: \"сумісні\"},\n// {en: \"divide\", ua: \"розділити\"},\n// {en: \"relate\", ua: \"пов'язувати\"},\n// {en: \"terrain\", ua: \"місцевість\"},\n// {en: \"customizable\", ua: \"настроюється\"},\n// {en: \"enhancements\", ua: \"покращення\"},\n// {en: \"layer\", ua: \"шар\"},\n// {en: \"horizon\", ua: \"горизонт\"},\n// {en: \"fog\", ua: \"туман\"},\n// {en: \"Invalid\", ua: \"Недійсний\"},\n// {en: \"assignment\", ua: \"призначення\"},\n// {en: \"occur\", ua: \"відбуваються\"},\n// {en: \"toggle-baselayers\", ua: \"перемикачі-базові шари\"},\n// {en: \"baselayer\", ua: \"базовий шар\"},\n// {en: \"referre\", ua: \"направити\"},\n// {en: \"deprecate\", ua: \"знецінити\"},\n// {en: \"in favor\", ua: \"на користь\"},\n// {en: \"Internally\", ua: \"Внутрішньо\"},\n// {en: \"plainly\", ua: \"однозначно\"},\n// {en: \"snippet\", ua: \"фрагмент\"},\n// {en: \"hit\", ua: \"удар\"},\n// {en: \"repetitive\", ua: \"повторювані\"},\n// {en: \"nullish\", ua: \"нульовий\"},\n// {en: \"proposal\", ua: \"пропозиція\"},\n// {en: \"toggler\", ua: \"перемикач\"},\n// {en: \"posibility\", ua: \"можливість\"},\n// {en: \"impleament\", ua: \"реалізація\"},\n// {en: \"doesn't\", ua: \"не робить\"},\n// {en: \"matter\", ua: \"матерія\"},\n// {en: \"generally\", ua: \"загалом\"},\n// {en: \"prefix\", ua: \"префікс\"},\n// {en: \"abvious\", ua: \"відсутня\"},\n// {en: \"diff\", ua: \"різниця\"},\n// {en: \"represents\", ua: \"представляє\"},\n// {en: \"exposes\", ua: \"викриває\"},\n// {en: \"bearing\", ua: \"підшипник\"},\n// {en: \"hash\", ua: \"хеш\"},\n// {en: \"fired\", ua: \"звільнений\"},\n// {en: \"idle\", ua: \"простою\"},\n// {en: \"pointing\", ua: \"вказування\"},\n// {en: \"rotate\", ua: \"обертати\"},\n// {en: \"fit\", ua: \"підходить\"},\n// {en: \"bounds\", ua: \"межі\"},\n// {en: \"terrain\", ua: \"місцевість\"},\n// {en: \"repaint\", ua: \"перефарбувати\"},\n// {en: \"handling\", ua: \"поводження\"},\n// {en: \"logger\", ua: \"лісоруб\"},\n// {en: \"Square\", ua: \"Майдан\"},\n// {en: \"Discast\", ua: \"Розповсюдження\"},\n// {en: \"capture\", ua: \"захоплення\"},\n// {en: \"recognize\", ua: \"впізнати\"},\n// {en: \"execute\", ua: \"виконувати\"},\n// {en: \"dispense\", ua: \"дозувати\"},\n// {en: \"monetary\", ua: \"грошові\"},\n// {en: \"built in\", ua: \"вбудований\"},\n// {en: \"record\", ua: \"запис\"},\n// {en: \"we got\", ua: \"ми отримали\"},\n// {en: \"what we do\", ua: \"що ми робимо\"},\n// {en: \"what makes all the difference\", ua: \"у чому різниця\"},\n// {en: \"horrible\", ua: \"жахливо\"},\n// {en: \"terrible\", ua: \"страшний\"},\n// {en: \"taste\", ua: \"смак\"},\n// {en: \"to buzz\", ua: \"гудіти\"},\n// {en: \"buzz him in\", ua: \"ввімкніть його\"},\n// {en: \"he finnaly\", ua: \"він нарешті\"},\n// {en: \"to ask me\", ua: \"спитати мене\"},\n// {en: \"in other words\", ua: \"іншими словами\"},\n// {en: \"more\", ua: \"більше\"},\n// {en: \"less\", ua: \"менше\"},\n// {en: \"what you think is less important\", ua: \"те, що ви вважаєте менш важливим\"},\n// {en: \"confident\", ua: \"впевнений у собі\"},\n// {en: \"is there a defference between you and me?\", ua: \"чи є різниця між вами та мною ?\"},\n// {en: \"self-help\", ua: \"самодопомога\"},\n// {en: \"availabel\", ua: \"доступний\"},\n// {en: \"inreality\", ua: \"в реальності\"},\n// {en: \"to matter\", ua: \"мати значення\"},\n// {en: \"where is the?\", ua: \"де є?\"},\n// {en: \"let is go to\", ua: \"let is to to\"},\n// {en: \"how much is this\", ua: \"скільки це коштує\"},\n// {en: \"hungry\", ua: \"голодний\"},\n// {en: \"what time is it\", ua: \"котра година\"},\n// {en: \"could be worse\", ua: \"могло бути гірше\"},\n// {en: \"could be better\", ua: \"могло б бути краще\"},\n// {en: \"in general! not bad\", ua: \"загалом! непогано\"},\n// {en: \"i was learnt\", ua: \"мене навчили\"},\n// {en: \"never better\", ua: \"ніколи краще\"},\n// {en: \"what dows this word mean\", ua: \"що означає це слово\"},\n// {en: \"that sound greate\", ua: \"це чудово звучить\"},\n// {en: \"that suks\", ua: \"що смокче\"},\n// {en: \"hold on\", ua: \"Зачекай\"},\n// {en: \"lets have some\", ua: \"давайте трохи\"},\n// {en: \"i down\", ua: \"i вниз\"},\n// {en: \"queue\", ua: \"черга\"},\n// {en: \"for shure!\", ua: \"за шуре !\"},\n// {en: \"i will you miss to\", ua: \"я буду сумувати за тобою\"},\n// {en: \"to be here on time\", ua: \"бути вчасно\"},\n// {en: \"to inform you\", ua: \"повідомити вас\"},\n// {en: \"this is nonsense\", ua: \"це нісенітниця\"},\n// {en: \"clearly\", ua: \"чітко\"},\n// {en: \"this is your fault\", ua: \"це твоя провина\"},\n// {en: \"but you leave me no choice\", ua: \"але ти не залишаєш мені вибору\"},\n// {en: \"you will regret this\", ua: \"ви пошкодуєте про це\"},\n// {en: \"you are a brave\", ua: \"ти сміливий\"},\n// {en: \"those are actually\", ua: \"це насправді\"},\n// {en: \"that comes from\", ua: \"що походить від\"},\n// {en: \"it is pleasure\", ua: \"це задоволення\"},\n// {en: \"hopefully\", ua: \"сподіваюся\"},\n// {en: \"introduction\", ua: \"введення\"},\n// {en: \"i couldn't make\", ua: \"я не міг зробити\"},\n// {en: \"would you like to have some\", ua: \"ти хотів би мати\"},\n// {en: \"that is nice\", ua: \"це мило\"},\n// {en: \"we will probably\", ua: \"ми напевно будемо\"},\n// {en: \"i am just glad\", ua: \"я просто радий\"},\n// {en: \"it went really well\", ua: \"це пройшло дуже добре\"},\n// {en: \"conclusion\", ua: \"висновок\"},\n// {en: \"this article\", ua: \"Ця стаття\"},\n// {en: \"those\", ua: \"ті\"},","export const mockData = [\n  {\n    name: \"one\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"some\", ua: \"декілька\"},\n      {en: \"same\", ua: \"те саме\"},\n      {en: \"case\", ua: \"випадок\"},\n      {en: \"cause\", ua: \"причина\"},\n      {en: \"weak\", ua: \"слабкий\"},\n      {en: \"therefore\", ua: \"тому\"},\n      {en: \"fluent\", ua: \"впливати\"},\n      {en: \"introduce\", ua: \"представляти\"},\n      {en: \"carry out\", ua: \"продовжуй\"},\n    ]\n  },\n  {\n    name: \"two\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n    ]\n  },\n  {\n    name: \"tree\",\n    words: [\n      {en: \"sail\", ua: \"плавати\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n      {en: \"\", ua: \"\"},\n    ]\n  },\n];","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { generateString } from '../../../../../../specialFunction/specialFunction';\nimport { mockData } from '../../mockData';\n\nconst DictionaryOptions: React.FC<any> = ({\n  isList, \n  activeDictionary, \n  toggleList, \n  randomDictionaryWords,\n  toggleActiveItem,\n  reset,\n  toggleHideColumnUa,\n  toggleHideColumnEn\n}) => {\n\n  const tableSettingList = mockData.map((item: any) => {\n    return (\n      <>\n        <tbody onClick={() => toggleActiveItem(item)} key={generateString()}>\n          <tr>\n            <th scope=\"row\">\n              {item.name}\n            </th>\n          </tr>\n        </tbody>\n       {\n         activeDictionary.name === item.name && (\n          <div className=\"active-option\">\n            <button className=\"btn btn-outline-success top-10\" onClick={() => randomDictionaryWords(activeDictionary)}>RANDOM</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => reset()}>CLEAR ANSWER</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnUa()}>HIDE UA COLUMN</button>\n            <button className=\"btn btn-outline-success top-10\" onClick={() => toggleHideColumnEn()}>HIDE EN COLUMN</button>\n          </div>\n         )\n       }\n      </>\n    )\n  });\n\n  return (\n    <div className=\"dictionary-options\">\n      <div className=\"dictionary-options__party\">\n        <input type=\"text\" placeholder=\"filter\" className=\"form-control btn-bg\" />\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\">Add new dictionary</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\">DELETE</button>\n      </div>\n      <div className=\"dictionary-options__party\">\n        <button className=\"btn btn-outline-success btn-100\" onClick={() => toggleList()}>List</button>\n        {\n          isList && (\n            <Table hover>\n              {\n                tableSettingList\n              }\n            </Table>\n          )\n        }\n      </div>\n    </div>\n  )\n};\n\nexport default DictionaryOptions;\n","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { generateString } from '../../../../../../specialFunction/specialFunction';\n\nconst TableWords: React.FC<any> = ({\n  activeDictionary, \n  register,\n  isHideColumnEn,\n  isHideColumnUa\n}) => {\n\n  const list = activeDictionary?.words.map((word: any, idx: number) => (\n    <tr key={generateString()}>\n      <th scope=\"row\">{ idx }</th>\n      {!isHideColumnEn? <td className=\"words-column\">{ word.en }</td> : <td className=\"words-column\"></td>}\n      {!isHideColumnUa? <td className=\"words-column\">{ word.ua }</td> : <td className=\"words-column\"></td>}\n      <td><input className=\"form-control\" defaultValue=\"\" {...register(`answers${word.en}`)} /></td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>EN</th>\n            <th>UA</th>\n            <th>YOUR</th>\n          </tr>\n        </thead>\n        <tbody>\n          { list }\n        </tbody>\n      </Table>\n      <button className=\"btn btn-outline-success btn-100\">EDIT THE DICTIONARY</button>\n    </>\n  )\n};\n\nexport default TableWords;\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { shuffle } from '../../../../specialFunction/specialFunction';\nimport DictionaryOptions from './components/DictionaryOptions/DictionaryOptions';\nimport TableWords from './components/DictionaryPart/DictionaryPart';\nimport { mockData } from './mockData';\nimport \"./Dictionary.scss\";\nimport Row from '../../../../component/Row/Row';\n\nconst Dictionary: React.FC = () => {\n  const [isList, setIsList] = useState(false);\n  const toggleList = () => setIsList(!isList);\n  const [activeDictionary, setActiveDictionary] = useState<any>(mockData[0]);\n  const [isHideColumnUa, setIsHideColumnUa] = useState(false);\n  const [isHideColumnEn, setIsHideColumnEn] = useState(false);\n  const toggleHideColumnUa = () => setIsHideColumnUa(!isHideColumnUa);\n  const toggleHideColumnEn = () => setIsHideColumnEn(!isHideColumnEn);\n  const { register, handleSubmit, reset } = useForm();\n\n  interface DictionaryPart {name: string, words: {en: string, ua: string}}\n\n  const toggleActiveItem = (dictionary: DictionaryPart) => {\n    if(dictionary.name === activeDictionary) {\n      return\n    } else {\n      setActiveDictionary(dictionary);\n    }\n  }\n\n  const randomDictionaryWords = (activeDictionary: any) => {\n    setActiveDictionary({\n      name: activeDictionary.name, \n      words: shuffle(activeDictionary.words)\n    });\n  };\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} >\n      <div className=\"dictionary-page\">\n        <Row \n          leftWidth={9}\n          Left={(\n            <div className=\"dictionary-words\">\n              <TableWords \n                activeDictionary={activeDictionary} \n                register={register}\n                isHideColumnUa={isHideColumnUa}\n                isHideColumnEn={isHideColumnEn}\n              />\n            </div>\n          )}\n          rightWidth={3}\n          Right={(\n            <DictionaryOptions \n                isList={isList}\n                activeDictionary={activeDictionary}\n                randomDictionaryWords={randomDictionaryWords}\n                toggleActiveItem={toggleActiveItem}\n                toggleList={toggleList}\n                reset={reset}\n                toggleHideColumnUa={toggleHideColumnUa}\n                toggleHideColumnEn={toggleHideColumnEn}\n            />\n          )}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Dictionary;","import React from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, Table } from 'reactstrap';\nimport \"./Modal.scss\";\n\ninterface CornModalTypes {\n  isModal: boolean, \n  toggle: () => void,\n  isConfirm?: boolean, \n  confirm?: () => void,\n  isCancel?: boolean, \n  cancel?: () => void,\n  children?: any,\n  isBody?: boolean,\n  confirmName?: string,\n}\n\n\nconst CornModal: React.FC<CornModalTypes> = ({\n  isModal, \n  toggle,\n  isConfirm,\n  confirm,\n  isCancel,\n  cancel,\n  children,\n  isBody,\n  confirmName = \"\",\n}) => {\n\n  return (\n    <div>\n      <Modal isOpen={isModal} toggle={toggle} className=\"corn-modal\" sm={8} lg={6}>\n        {\n          isBody && (\n          <ModalBody>\n            <Table>\n              { children }\n            </Table>\n          </ModalBody>\n          )\n        }\n        {!isBody && children}\n        {\n          (isCancel || isConfirm) && (\n            <ModalFooter>\n            {isConfirm && <Button color=\"info\" onClick={confirm}>{confirmName !== \"\" ? confirmName : \"confirm\"}</Button>}\n            {isCancel && <Button color=\"info\" type=\"submit\" onClick={() => {\n              toggle();\n              if(!!cancel) {\n                cancel();\n              };\n            }}>Cancel</Button>}\n            </ModalFooter>\n          )\n        }\n      </Modal>\n    </div>\n  );\n}\n\nexport default CornModal;","import React, {useState} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { generateString } from '../../specialFunction/specialFunction';\nimport { set_test, create_test } from '../../store/slices/testsReducer';\nimport CornModal from './Modal';\nimport { InitialValuesModalCreate, ModalInfoTypes, ModalType } from './types';\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, Table, FormGroup, ModalHeader, ModalBody } from 'reactstrap';\nimport { allWords } from \"../../mockData/words\";\nimport \"./Modal.scss\";\n\nconst ModalInfo: React.FC<ModalInfoTypes> = ({\n  isModal, \n  toggle,\n  test,\n}) => {\n  const [isPassTest, setIsPassTest] = useState(false);\n  const dispatch = useDispatch();\n\n  const passTest = () => {\n    toggle();\n    setIsPassTest(!isPassTest);\n    dispatch(set_test({name: test.name, words: test.words}));\n  };\n\n  if(isPassTest) {\n    return <Redirect to=\"/tests\" />\n  };\n\n  return (\n    <CornModal \n      isModal={isModal} \n      toggle={toggle} \n      isCancel \n      isConfirm \n      confirm={passTest}\n      isBody\n    >\n      <tbody className=\"table-words\">\n        {\n          test?.words.map((word: {en: string, ua: string}) => {\n            return (\n              <tr key={generateString()}>\n                <td>{word.en}</td>\n                <td>{word.ua}</td>\n              </tr>\n            )\n          })\n        }\n      </tbody>\n   </CornModal>\n  );\n};\n\nconst ModalCreatedTest: React.FC<ModalType> = ({\n  isModal, \n  toggle,\n}) => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValuesModalCreate = {\n    name: \"\",\n    words: [],\n    options: {\n      amount: 10,\n      type: \"en-ua\",\n      timer: 60,\n    },\n  }\n\n  const allWordsList = allWords.map((word: {en: string, ua: string}, idx: number) => {\n    return (\n      <tr key={`list-success-${idx}`}>\n        <td>{word.en}</td>\n        <td>{word.ua}</td>\n        <th><Field type=\"checkbox\" value={word.en}/></th>\n      </tr>\n    ) \n  });\n\n  const onSubmit = (values: InitialValuesModalCreate) => {\n    dispatch(create_test({\n      name: values.name,\n      words: values.words,\n      type: \"en-ua\",\n      options: values.options\n    }));\n    toggle();\n  }\n\n  return (\n    <CornModal\n      isModal={isModal} \n      toggle={toggle} \n      isCancel \n      isConfirm \n    >\n      <Formik initialValues={initialValues} onSubmit={(values) => onSubmit(values)} >\n        <Form>\n          <tbody className=\"words-list\">\n            { allWordsList }\n          </tbody>\n          <FormGroup>\n            <div className=\"input__name\">\n              <input className=\"form-control\" type=\"text\" placeholder=\"name\"/>\n            </div>\n          </FormGroup>\n        </Form>\n      </Formik>\n    </CornModal>\n  );\n};\n\nconst ModalNotice: React.FC<ModalType> = ({isModal, toggle}) => {\n\n  const [redirect, setRedirect] = useState(false);\n\n  if(redirect) {\n    return <Redirect to=\"/profile/results\" />\n  }\n\n  return (\n    <CornModal isModal={isModal} toggle={toggle} isBody>\n      <ModalHeader toggle={toggle}>See result</ModalHeader>\n        <Button color=\"btn btn-outline-success\" style={{width: \"100%\"}} onClick={() => {\n          setRedirect(true);\n          toggle();\n        }}>To look</Button>\n    </CornModal>\n  )\n};\n\nconst ModalResult: React.FC<{\n  isModal: boolean,\n  toggle: () => void,\n  result: any\n}> = ({\n  isModal, \n  toggle,\n  result,\n}) => {\n  const dispatch = useDispatch();\n  const [isRepass, setIsRepass] = useState(false);\n\n  const repass = () => setIsRepass(true);\n\n  const list = result?.words.map((word: any, idx: number) => {\n    return (\n      <tr key={generateString()}>\n        <td>{word.en}</td>\n        <td>{word.ua}</td>\n        <td>{result.answers[idx]}</td>\n      </tr>\n    );\n  });\n\n  const repassTest = () => {\n    dispatch(set_test({name: result.name, words: result.words}));\n    repass();\n  };\n\n  if(isRepass) {\n    return <Redirect to=\"/tests\"/>\n  };\n\n  return (\n      <CornModal \n        isModal={isModal} \n        toggle={toggle} \n        isBody={false} \n        isConfirm\n        confirm={repassTest}\n        confirmName=\"Repass\"\n      >\n        <ModalBody>\n          <h2 className=\"title\">{result?.name}</h2>\n          <Table className=\"table-words\">\n            <tbody>\n                {list}\n            </tbody>\n          </Table>\n          <div className=\"bottom-panel\"> \n            <div className=\"bottom-panel__inner\">\n              <span className=\"inline-block\">type: en-ua</span>\n              <span className=\"inline-block\">true: {result?.result.length}</span>\n              <span className=\"inline-block\">timer: 60</span>\n            </div>\n          </div>\n        </ModalBody>\n      </CornModal>\n  );\n};\n\nexport { \n  ModalInfo,\n  ModalCreatedTest,\n  ModalNotice,\n  ModalResult,\n};","import React from 'react';\nimport './RestrictedList.scss';\n\ninterface RestrictedListType {\n  children: (item: any) => any,\n  amount: number,\n  list: any[],\n  listClasses: string,\n}\n\nconst RestrictedList: React.FC<RestrictedListType> = ({\n  children: renderItem,\n  amount,\n  list,\n  listClasses\n}) => {\n\n  const restrictedList = list.slice(0, amount).map((item: any) => renderItem(item));\n\n  return (\n    <div className={listClasses}>\n      {\n        restrictedList\n      }\n    </div>\n  )\n}\n\nexport default RestrictedList;\n","import React from \"react\";\n\nconst Statistics: React.FC<any> = ({resultItems}) => {\n\n  return (\n    <div className=\"statistics\">\n      <ul className=\"statistics__list\">\n        <li>\n          Passed test: { resultItems?.length | 0 }\n        </li>\n        <li>\n          Is tests: {}\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n        <li>\n          Passed test: 0\n        </li>\n      </ul>\n    </div>\n  )\n};\n\nexport default Statistics;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalResult } from '../../../../component/Modal/Modals';\nimport RestrictedList from '../../../../component/RestrictedList/RestrictedList';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { RootReducer } from '../../../../store/slices/types';\nimport \"./Results.scss\";\nimport Statistics from './Statistics';\n\nconst Results: React.FC = () => {\n  const results = useSelector((state: RootReducer) => state.result.results);\n  const [idResult, setIDResult]: any = useState(null);\n  const [isModal, setIsModal] = useState(false);\n  const [amount, setAmount] = useState(16);\n  const toggleIsModal = () => setIsModal(!isModal);\n\n  return (\n    <div className=\"result-page\">\n      <ModalResult \n        isModal={isModal} \n        toggle={toggleIsModal} \n        result={idResult}\n      />\n      <Statistics resultItems={results}/>\n      <RestrictedList \n        list={results}\n        amount={amount}\n        listClasses=\"test-list\"\n      >\n        {(item) => {\n          return (\n            <div className=\"test__item\" key={generateString()}>\n              <h3 className=\"title\">{item.name}</h3>\n              <p className=\"under-title\">{`${item?.startTime}`?.slice(11, 19)} - {`${item?.endTime}`.slice(11, 19)}</p>\n              <Button \n                className=\"btn btn-success btn-center btn-bg border-none\" \n                type=\"button\" \n                onClick={() => {\n                  setIDResult(item);\n                  toggleIsModal();\n                }}>\n                Show\n              </Button>\n            </div>\n          )\n        }}\n      </RestrictedList>\n      {\n        results.length > 12 && (\n          <button className=\"btn btn-success btn-bg\" onClick={() => {\n            if(amount < results.length) {\n              setAmount(amount + 12);\n            };\n          }}>Yet</button>\n        )\n      }\n\n      {\n        !results.length && <p className=\"under-title\">\"you don't pass a test yet. And then here is nothing\"</p>\n      }\n    </div>\n  )\n};\n\nexport default Results;","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { ModalInfo } from '../../../../component/Modal/Modals';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { RootReducer } from '../../../../store/slices/types';\nimport \"./All-test.scss\";\n\ninterface Test {\n  name: string\n  options: {\n    timer: number,\n    amount: number,\n  }\n  type: string\n  words: {en: string, ua: string}[]\n}\n\nconst AllTest: React.FC = () => {\n  const allTests = useSelector((state: RootReducer) => state.tests.allTests);\n  const [isModal, toggleIsModal] = useState(false);\n  const [infoID, setInfoId] = useState(\"\");\n  const toggleIsInfoModal = () => toggleIsModal(!isModal);\n\n  const list = allTests.map((test: Test) => {\n    return (\n      <div className=\"test__item\" key={generateString()}>\n        <h3 className=\"title\">{test.name}</h3>\n        <Button className=\"btn btn-success btn-center btn-bg border-none\" type=\"button\" onClick={() => {\n          setInfoId(test.name);\n          toggleIsInfoModal();\n        }}>Show</Button>\n      </div>\n    )\n  })\n\n  return (\n    <>\n      <ModalInfo \n        toggle={toggleIsInfoModal} \n        test={allTests.find((test: Test) => test.name === infoID)} \n        isModal={isModal} \n      />\n      <div className=\"All-test\">\n        <div className=\"All-test__inner\">\n          { list }\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AllTest;","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useAppDispatch = () => useDispatch();\n\nexport const useAppSelector: TypedUseSelectorHook<RootReducer> = useSelector;","import {createSlice} from '@reduxjs/toolkit';\nimport { AuthReducer } from './types';\n\nconst findPart = (partName: string, state: AuthReducer) => state.dictionary.findIndex((item) => item.part === partName);\nconst foundWord = (word: string, state: AuthReducer, partIdx: number) => state.dictionary[partIdx].words.findIndex((item) => item.word === word);\n\nconst initialState: AuthReducer = {\n  authentication: true,\n  role: \"admin\",\n  name: \"oleg\",\n  surname: \"salabay\",\n  email: \"olegsalabaymac@gmail.com\",\n  photo: \"\",\n  describe: \"\",\n  password: \"1234\",\n  dictionary: [],\n  homework: [],\n};\n\nconst auth = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n      log_out: (state) => {\n        state.authentication = false\n      },\n      sign_in: (state) => {\n        state.authentication = true\n      },\n      add_part_own_dictionary: (state, {payload}) => {\n        state.dictionary = [...state.dictionary, payload];\n      },\n      add_word_own_dictionary: (state, {payload}) => {\n        const length = state.dictionary.length;\n        state.dictionary[length - 1].words = [...state.dictionary[length - 1].words, ...payload.word];\n      },\n      remove_word: (state, {payload}) => {\n        const {word, part} = payload;\n        const foundedPart = findPart(part, state);\n        const foundedWord = foundWord(word, state, foundedPart);\n\n        state.dictionary[foundedPart].words = [\n          ...state.dictionary[foundedPart].words.slice(0, foundedWord), \n          ...state.dictionary[foundedPart].words.slice(foundedWord + 1, )\n        ]\n      },\n      add_home_work: (state, {payload}) => {\n        state.homework = [...state.homework, payload];\n      },\n      remove_home_work: (state, {payload}) => {\n        console.log(state, payload.name)\n      }\n    },\n});\n\nexport const { \n  log_out, \n  sign_in, \n  add_word_own_dictionary, \n  add_part_own_dictionary, \n  remove_word, \n  add_home_work,\n  remove_home_work,\n} = auth.actions;\n\nexport default auth.reducer;","import React from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { Spinner } from \"reactstrap\";\nimport { WordData } from \"../../store/slices/types\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\nimport { BTN_BG } from \"../../classes\";\nimport \"./SearchWord.scss\";\n\nconst SearchView: React.FC<{\n  onSubmit: any,\n  initialState: any,\n  loading: any,\n  data: any,\n  dispatchWord: any\n}> = ({\n  onSubmit,\n  initialState,\n  loading,\n  data,\n  dispatchWord,\n}) => (\n  <div className=\"search-word\">  \n    <Formik  \n      onSubmit={onSubmit}\n      initialValues={initialState}\n    >\n      {\n        () => {\n          return (\n            <Form className=\"search-panel col-12\">\n              <Field className=\"form-control btn-bg\" placeholder=\"word\" name=\"word\" />\n              <div className=\"info-panel\">\n                {\n                  loading? <Spinner /> : (\n                    data?.map((d: WordData) => (\n                      <div key={generateString()}>\n                        <h4>{d.word}</h4>\n                        <p><b>Phonetics:</b> {d?.phonetics[0]?.text}</p>\n                        <p><b>Meanings:</b> part of speech: {d?.meanings[0]?.partOfSpeech}<br /></p>\n                        <p><b>Definitions:</b> {d?.meanings[0]?.definitions[0]?.definition}<br /></p>\n                        <p><b>Synonyms:</b> {d?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span>{synonym}, </span>)}<br /></p>\n                        <p><b>Example:</b> {d?.meanings[0]?.definitions[0]?.example}<br /></p>\n                        <p><b>Origin</b> {d?.origin}<br /></p>\n                        <button \n                          className={BTN_BG} type=\"button\" \n                          onClick={() => dispatchWord({word: data})}\n                        >\n                          ADD IN DICTIONARY\n                        </button>\n                      </div>\n                    ))\n                  )\n                }\n              </div>\n            </Form>\n          )\n        }\n      }\n    </Formik>\n  </div>\n);\n\nexport default SearchView\n","import axios from \"axios\";\nimport React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../../hooks/useRedux\";\nimport { add_word_own_dictionary, add_part_own_dictionary } from \"../../store/slices/authReducer\";\nimport { WordData } from \"../../store/slices/types\";\nimport SearchView from \"./SearchView\";\n\nconst SearchWord: React.FC = () => {\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n\n  const ownDictionary = useAppSelector(state => state.auth.dictionary);\n\n  const [data, setData] = useState<WordData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  interface InitialState {\n    word: string\n  };\n\n  const initialState : InitialState= {\n    word: \"\",\n  };\n\n  const onSubmit = async (values: InitialState) => {\n    setLoading(true);\n    axios.get(API_BASE + values.word)\n    .then((d: any) => {\n      setData(d.data);\n      setLoading(false);\n    })\n  };\n\n  const dispatchOwnWord = (data: any) => {\n    const length = ownDictionary.length; //last idx\n\n    if(ownDictionary.length === 0 || ownDictionary[length - 1]?.words.length >= 30) {\n      dispatch(add_part_own_dictionary({part: `${length + 1} part`, words: []}));\n      dispatch(add_word_own_dictionary(data));\n    };\n    \n    if(ownDictionary[length - 1]?.words?.length < 30) {\n      dispatch(add_word_own_dictionary(data));\n    };\n  };\n\n  return (\n    <SearchView \n      initialState={initialState}\n      data={data}\n      dispatchWord={dispatchOwnWord}\n      onSubmit={onSubmit}\n      loading={loading}\n    />\n  )\n};\n\nexport default SearchWord;\n","import React from 'react'\nimport { Button, TrashIcon, ManualIcon } from 'evergreen-ui'\nimport { useDispatch } from 'react-redux'\nimport { generateString } from '../../../../specialFunction/specialFunction'\nimport { remove_word } from '../../../../store/slices/authReducer'\n\nconst DataWord: React.FC<{data: any, active: string, newActive: any, activePart: string}> = ({data, active, newActive, activePart}) => {\n  const dispatch = useDispatch();\n  return (\n    <tbody className=\"table-item\">\n      <tr className=\"word-item col-12\">\n        <th className=\"col-10\">{data?.word}</th>\n        <th><Button marginY={8} marginRight={12} iconBefore={ManualIcon} onClick={() => newActive(data.word)}></Button></th>\n        <th><Button marginY={8} marginRight={12} iconBefore={TrashIcon} onClick={() => dispatch(remove_word({word: data.word, part: activePart}))} intent=\"danger\"></Button></th>\n      </tr>\n\n      <div className={`tab-item ${active === data?.word? \"show\" : \"close\"} col-12`}>\n        <p><b>Phonetics:</b> {data?.phonetics[0]?.text}</p>\n        <p><b>Meanings:</b> part of speech: {data?.meanings[0]?.partOfSpeech}<br /></p>\n        <p><b>Definitions:</b> {data?.meanings[0]?.definitions[0]?.definition}<br /></p>\n        <p><b>Synonyms:</b> {data?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span key={generateString()}>{synonym}, </span>)}<br /></p>\n        <p><b>Example:</b> {data?.meanings[0]?.definitions[0]?.example}<br /></p>\n        <p><b>Origin</b> {data?.origin}<br /></p>\n      </div>\n    </tbody>\n  )\n}\n\nexport default DataWord\n","import { Button } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary: any = useOwnDictionary();\n\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"1 part\");\n  const [activePartOptions, setActivePartOptions] = useState(\"\");\n\n  const setNewActive = (word: string) => active === word? setActive(\"\") : setActive(word);\n\n  const setNewActivePartOptions = (part: string) => activePartOptions === part? setActivePartOptions(\"\") : setActivePartOptions(part);\n\n  const listWords = (ownDictionary: any) => {\n    const idx = [...ownDictionary].findIndex((item: any) => item.part === activePart);\n\n    return ownDictionary[idx]?.words?.map((word: any) => (\n      <DataWords data={word} active={active} newActive={setNewActive} key={generateString()} activePart={activePart}/>\n    ));\n  };\n\n  const tabs = ownDictionary.map((part: any) => {\n    return (\n      <div className=\"flex-btn-group\" key={generateString()}>\n        <Button \n          marginY={8} \n          marginRight={12}\n          key={generateString()} \n          onClick={() => {\n            setActivePart(part.part);\n          }}\n          onDoubleClick={() => setNewActivePartOptions(part.part)}\n        >\n          {part.part}\n        </Button>\n        <div className={`${activePartOptions === part.part? \"open-part\" : \"close-part\"} part-option`}>\n          <Button \n            marginY={8} \n            marginRight={12}\n            key={generateString()} \n          >\n            make test\n          </Button>\n          <Button \n            marginY={8} \n            marginRight={12}\n            key={generateString()} \n          >\n            shuffle\n          </Button>\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <div className=\"own-dictionary-page\">\n      <Row\n        Left={\n          <div>\n            <div className=\"dictionary-tabs\">\n              { tabs }\n            </div>\n            <Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords(ownDictionary)}</Table>\n          </div>\n        }\n        Right={<SearchWord />}\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n","import { useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useOwnDictionary = () => useSelector((state: RootReducer) => state.auth.dictionary);","import React from 'react'\n\nconst Administration: React.FC = () => {\n\n  return (\n    <div>\n      <h1 className=\"title\">Administration</h1>\n    </div>\n  )\n}\n\nexport default Administration\n","import React from \"react\";\nimport { BTN_BG } from \"../../../../../../classes\";\nimport { generateString } from \"../../../../../../specialFunction/specialFunction\";\nimport \"./Homework-workingPart\";\n\nconst HomeworkWorkingPart: React.FC<{homework: any}> = ({homework}) => {\n\n  const list = homework?.words?.map((word: any) => {\n    return (\n      <div className=\"top-20\" key={generateString()}>\n        <input className=\"form-control\" name={word.en} placeholder={word.en}/>\n      </div>\n    )\n  });\n\n  const onSubmit = (values: any) => {\n    values.preventDefault();\n  }\n\n  return (\n    <form  className=\"h-100\" onSubmit={(values) => onSubmit(values)}>\n      { list }\n      <button className={BTN_BG} type=\"submit\">COMMIT</button>\n    </form>\n  )\n};\n\nexport default HomeworkWorkingPart;\n","import React from 'react';\nimport { generateString } from '../../../../../../specialFunction/specialFunction';\nimport './HomeWorkItem.scss';\n\nconst HomeWorkItem: React.FC<{\n  homework: {\n    title: string, \n    words: {\n      en: string, \n      ua: string\n    }[]\n  }, \n  active: string\n}> = ({homework, active}) => {\n  return (\n    <div className={`home-work-item ${active === homework.title && \"active-homework\"}`} key={generateString()}>\n      <h4 className=\"title\">{homework.title}</h4>\n    </div>\n  )\n};\n\nexport default HomeWorkItem;\n","import React, { useState } from 'react';\nimport { useHomeWork } from '../../../../hooks/useHomeWork';\nimport HomeworkWorkingPart from './Component/Homework-workingPart/Homework-workingPart';\nimport HomeWorkItem from './Component/HomeWordItem/HomeWorkItem';\nimport Row from '../../../../component/Row/Row';\nimport \"./HomeWork.scss\";\n\nconst HomeWork: React.FC = () => {\n  const homework = useHomeWork();\n\n  const [activeHomeWork, setActiveHomeWork] = useState<string>(\"\");\n\n  const homeworkList = homework?.map((homeworkItem) => {\n    return (\n      <div onClick={() => setActiveHomeWork(homeworkItem.title)}><HomeWorkItem homework={homeworkItem} active={activeHomeWork} /></div>\n    )\n  });\n\n  const foundedActiveHomework = homework.find((item: any) => item.title === activeHomeWork);\n\n  return (\n    <div className=\"homework-page\">\n      <Row \n        Left={\n          (\n          <div className=\"homework-list h-100\"> \n            { homeworkList }\n          </div>\n          )\n        }\n        Right={\n          (<HomeworkWorkingPart homework={foundedActiveHomework}/>)\n        }\n        rightWidth={7}\n        leftWidth={5}\n      />\n    </div>\n  )\n};\n\nexport default HomeWork;\n","import { useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useHomeWork = () => useSelector((state: RootReducer) => state.auth.homework);","import { Field, Formik, Form } from 'formik';\nimport React, { useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Label, Table } from 'reactstrap';\nimport { INP_BG } from '../../../../classes';\nimport Row from '../../../../component/Row/Row';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { add_home_work } from '../../../../store/slices/authReducer';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { InitialValues } from './types';\n\nconst CreateTest: React.FC = () => {\n  const dispatch = useDispatch();\n  const [mobileMenu, setMobileMenu] = useState(false);\n  const toggleMobileMenu = () => setMobileMenu(!mobileMenu);\n\n  const initialValues: InitialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    words: [],\n  }\n\n  const list = useMemo(() => {\n    return allWords.map((word: {en: string, ua: string}) => {\n      return (\n        <tr key={generateString()}>\n          <td>{word.en}</td>\n          <td>{word.ua}</td>\n          <th>\n            <Field type=\"checkbox\" value={`${word.en}&${word.ua}`} name=\"words\" />\n          </th>\n        </tr>\n      )\n    })\n  }, []);\n\n  const onSubmit = (values: any, setFieldValue: any) => {\n      const words = splitWordsOnAnd(values.words);\n  \n      dispatch(create_test({\n        name: values.name,\n        words: words,\n        type: \"en-ua\",\n        options: values.options\n      }));\n      \n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"timer\", 60);\n      setFieldValue(\"amount\", 10);\n      setFieldValue(\"type\", \"en-ua\");\n      setFieldValue(\"words\", []);\n  };\n\n  const splitWordsOnAnd = (words: string[]) => {\n    return words.map((word: string) => {\n      const indexSignAnd = word.indexOf(\"&\");\n      return {en: word.slice(0, indexSignAnd), ua: word.slice(indexSignAnd + 1)};// split words on \"&\" en-word&ua-word\n    });\n  }\n\n  return (\n    <>\n    <div>\n      <Formik initialValues={initialValues} onSubmit={(values, {setFieldValue}) => onSubmit(values, setFieldValue)}>\n        {({values, handleSubmit}) => {\n          return (\n            <>\n              <Form className=\"crete-test__inner\">\n                <Row \n                  fixed={\"right\"}\n                  Left={\n                    (\n                      <div>\n                        <Table className=\"bg-light\">\n                          <tbody>\n                            { list }\n                          </tbody>\n                        </Table>\n                      </div>\n                    )\n                  }\n                  rightWidth={3}\n                  leftWidth={8}\n                  Right={\n                    (\n                      <div>\n                        <div className=\"mobile-format\">\n                          <FormGroup>\n                            <Label for=\"Name\">Name</Label>\n                            <Field className={INP_BG} type=\"text\" placeholder=\"name\" name=\"name\" id=\"Name\" />\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"Type\">Type</Label>\n                            <Field className={INP_BG} as=\"select\" name=\"type\" id=\"Type\">\n                              <option>EN - UA</option>\n                              <option>UA - EN</option>\n                            </Field>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"Amount\">Amount</Label>\n                            <Field className={INP_BG} as=\"select\" name=\"amount\" id=\"Amount\">\n                              <option>10</option>\n                              <option>15</option>\n                              <option>20</option>\n                              <option>25</option>\n                              <option>30</option>\n                            </Field>\n                          </FormGroup>\n                          <FormGroup>\n                            <Label for=\"Timer\">Timer</Label>\n                            <Field className={INP_BG} as=\"select\" name=\"timer\" id=\"Timer\">\n                              <option>30</option>\n                              <option>60</option>\n                              <option>90</option>\n                              <option>120</option>\n                              <option>150</option>\n                            </Field>\n                          </FormGroup>\n                          <footer>\n                            <FormGroup>\n                              <Button \n                                className=\"form-control btn-bg\" \n                                color=\"success\" \n                                type=\"button\" \n                                onClick={() => {\n                                  if(values.words.length !== values.amount) {\n                                    return alert(`You need to select a ${values.amount}`)\n                                  } else {\n                                    alert(\"success\");\n                                    handleSubmit();\n                                  }\n                              }}\n                              >\n                                CREATE TEST\n                              </Button>\n                            </FormGroup>\n                            <FormGroup>\n                              <Button \n                                className=\"form-control btn-bg\" \n                                color=\"success\" \n                                type=\"button\" \n                                onClick={() => {\n                                  dispatch(add_home_work({title: values.name, words: splitWordsOnAnd(values.words as any)}));\n                              }}\n                              >\n                                CREATE HOMEWORK\n                              </Button>\n                            </FormGroup>\n                            <h2>Words selected: {values.words.length}</h2>\n                          </footer>\n                        </div>\n                        <Button className={`mobile-helper-btn`} onClick={toggleMobileMenu}>Show Parameters</Button>\n                      </div>\n                    )\n                  }\n                />\n              </Form>\n            </>\n          )\n        }}\n      </Formik>\n    </div>\n    </>\n  )\n}\n\nexport default CreateTest;","import React, { Suspense } from \"react\";\nimport { TabContent, TabPane, Col, Spinner } from \"reactstrap\";\n\nimport Setting from \"../../pages/Profile/underPages/Setting/Setting\";\nimport Dictionary from \"../../pages/Profile/underPages/Dictionary/Dictionary\";\nimport Results from \"../../pages/Profile/underPages/Results/Results\";\nimport AllTest from \"../../pages/Profile/underPages/All-test/All-test\";\nimport OwnDictionary from \"../../pages/Profile/underPages/OwnDictionary/OwnDictionary\";\nimport Administration from \"../../pages/Profile/underPages/Administration/Administration\";\nimport HomeWork from \"../../pages/Profile/underPages/Homework/HomeWork\";\nimport CreateTest from \"../../pages/Profile/underPages/Create-test/Cteate-test\";\n\nconst TabsContnent: React.FC<{path: string}> = ({path}) => {\n  return (\n\n    <TabContent activeTab={path}>\n    {\n      path.includes(\"/profile/setting\") && (\n      <TabPane tabId=\"/profile/setting\">\n        <Col>\n          <Suspense fallback={<Spinner />}>\n            <Setting />\n          </Suspense>\n        </Col>\n      </TabPane>\n      )\n    }\n    {\n      path.includes(\"/profile/dictionary\") && (\n      <TabPane tabId=\"/profile/dictionary\">\n        <Col ls={12}>\n          <Suspense fallback={<Spinner />}>\n            <Dictionary />\n          </Suspense>\n        </Col>\n      </TabPane>\n      )\n    }\n    {\n    path.includes(\"/profile/results\") && (\n      <TabPane tabId=\"/profile/results\">\n        <Col ls={12}>\n          <Suspense fallback={<Spinner />}>\n            <Results />\n          </Suspense>\n        </Col>\n      </TabPane>\n      )\n    }\n    {\n    path.includes(\"/profile/all tests\") && \n      <TabPane tabId=\"/profile/all tests\">\n        <Col ls={12}>\n          <Suspense fallback={<Spinner />}>\n            <AllTest />\n          </Suspense>\n        </Col>\n      </TabPane>\n    }\n    {\n      path.includes(\"/profile/create test\") && (\n        <TabPane tabId=\"/profile/create test\">\n          <Col ls={12}>\n            <Suspense fallback={<Spinner />}>\n              <CreateTest />\n            </Suspense>\n          </Col>\n        </TabPane>\n      )\n    }\n    {\n      path.includes(\"/profile/administration\") && (\n        <TabPane tabId=\"/profile/administration\">\n          <Col ls={12}>\n            <Suspense fallback={<Spinner />}>\n              <Administration />\n            </Suspense>\n          </Col>\n        </TabPane>\n      )\n    }\n            {\n      path.includes(\"/profile/home work\") && (\n        <TabPane tabId=\"/profile/home work\">\n          <Col ls={12}>\n            <Suspense fallback={<Spinner />}>\n              <HomeWork />\n            </Suspense>\n          </Col>\n        </TabPane>\n      )\n    }\n    {\n      path.includes(\"/profile/own dictionary\") && (\n        <TabPane tabId=\"/profile/own dictionary\">\n          <Col ls={12}>\n            <Suspense fallback={<Spinner />}>\n              <OwnDictionary />\n            </Suspense>\n          </Col>\n        </TabPane>\n      )\n    }\n  </TabContent>\n  )\n}\n\nexport default TabsContnent\n\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Button, CogIcon, ManualIcon, HomeIcon, ResolveIcon, EditIcon, ListIcon } from \"evergreen-ui\";\nimport classnames from 'classnames';\nimport { useHistory, useLocation } from 'react-router';\nimport { useRole } from '../../hooks/useRole';\nimport TabsContent from './TabsContnent';\nimport './Tabs.scss';\n\nconst Tabs: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const role = useRole();\n\n  const list = (\n    <Nav tabs className=\"tabs\">\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={CogIcon}\n            className={classnames({ active: location.pathname === \"/profile/setting\" })}\n            onClick={() => { \n              history.push(\"/profile/setting\");\n            }}\n          >\n            <span>setting</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={ManualIcon}\n            className={classnames({ active: location.pathname === \"/profile/dictionary\" })}\n            onClick={() => { \n              history.push(\"/profile/dictionary\");\n            }}\n          >\n            <span>dictionary</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={ListIcon}\n            className={classnames({ active: location.pathname === \"/profile/results\" })}\n            onClick={() => {\n              history.push(\"/profile/results\");\n            }}\n          >\n            <span>results</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={ResolveIcon}\n            className={classnames({ active: location.pathname === \"/profile/all tests\" })}\n            onClick={() => { \n              history.push(\"/profile/all tests\");\n            }}\n          >\n            <span>all tests</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={EditIcon}\n            className={classnames({ active: location.pathname === \"/profile/create test\" })}\n            onClick={() => { \n              history.push(\"/profile/create test\");\n            }}\n          >\n            <span>create test</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={ManualIcon}\n            className={classnames({ active: location.pathname === \"/profile/own dictionary\" })}\n            onClick={() => { \n              history.push(\"/profile/own dictionary\");\n            }}\n          >\n            <span>own dictionary</span>\n          </Button>\n        </NavItem>\n        <NavItem>\n          <Button marginY={8} marginRight={12} iconAfter={HomeIcon}\n            className={classnames({ active: location.pathname === \"/profile/home work\" })}\n            onClick={() => { \n              history.push(\"/profile/home work\");\n            }}\n          >\n            <span>home work</span>\n          </Button>\n        </NavItem>\n        {\n          role === \"admin\" && (\n          <NavItem>\n            <NavLink\n              className={classnames({ active: location.pathname === \"/profile/administration\" })}\n              onClick={() => { \n                history.push(\"/profile/administration\");\n              }}\n            >\n              <span>administration</span>\n            </NavLink>\n          </NavItem>\n          )\n        }\n      </Nav>\n  )\n\n  return (\n    <div>\n      { list }\n      <TabsContent path={location.pathname} />\n    </div>\n  );\n}\n\nexport default Tabs;","import { useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useRole = () => useSelector((state: RootReducer) => state.auth.role);","import React from 'react';\nimport Tabs from '../../component/Tabs/Tabs';\nimport \"./Profile.scss\";\n\nconst Profile: React.FC = () => {\n\n  return (\n    <div className=\"page page-profile\">\n      <Tabs />\n    </div>\n  )\n};\n\nexport default Profile;\n","import React from 'react';\nimport { FormGroup, Label, FormFeedback, FormText } from 'reactstrap';\nimport { BTN_BG } from '../../../../classes';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nconst SignInForm: React.FC = () => {\n\n  interface I {\n    name: string,\n    password: string,\n    repeatPassword: string,\n    email: string,\n    submit: boolean,\n  }\n\n  const onSubmit = (values: I) => {\n    alert(JSON.stringify(values));\n  };\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n    password: Yup.string().required('Required'),\n    repeatPassword: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required'),\n  });\n\n  const { register, handleSubmit } = useForm({resolver: yupResolver (schema)});\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"sign-in col-12 col-lg-6\">\n      <div >\n        <FormGroup>\n          <Label for=\"name\">Email</Label>\n          <input className=\"form-control btn-bg\" {...register(\"name\")}/>\n          <FormFeedback>Error email</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">Password</Label>\n          <input className=\"form-control btn-bg\" {...register(\"email\")}></input>  \n          <FormFeedback>Error password</FormFeedback>\n          <FormText>Example help text that remains unchanged.</FormText>\n        </FormGroup>\n      </div>\n      \n      <FormGroup className=\"position-relative\">\n        <button type=\"submit\" className={BTN_BG}>SUBMIT</button>\n      </FormGroup>\n    </form>\n  )\n};\n\nexport default SignInForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { log_out } from '../../../../store/slices/authReducer';\n\nconst SignOut: React.FC = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <form className=\"sign-out col-12 col-lg-6\">\n      <h1 className=\"title\">Sign out</h1>\n      <p className=\"under-title\">Now you can sign ou because you sign in</p>\n      <button type=\"button\" onClick={() => dispatch(log_out())} className=\"btn btn-danger btn-bg btn-10\">Sign out</button>\n    </form>\n  )\n};\n\nexport default SignOut;\n","import React from 'react';\nimport \"./Sign-in.scss\";\nimport { useAuth } from '../../hooks/useAuth';\nimport SignInForm from './component/Sign-in-form/Sign-in-form';\nimport SignOutForm from './component/Sign-out-form/Sign-out-form';\n\nconst SignIn: React.FC = () => {\n\n  const isAuth = useAuth()\n\n  return (\n    <div className=\"page\">\n      <div className=\"sign-in__inner\">\n        {\n          isAuth? <SignOutForm /> : <SignInForm />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn\n","import { useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useAuth = () => useSelector((state: RootReducer) => state.auth.authentication);","import {createSlice} from '@reduxjs/toolkit';\nimport { OptionsReducer } from './types';\n\n\nconst initialState: OptionsReducer = {\n  options: {\n    timer: 60,\n    words: 10,\n    type: \"en-ua\",\n    random: true,\n  }\n};\n\nconst options = createSlice({\n    name: \"options\",\n    initialState,\n    reducers: {\n      set_options: (state, action) => {\n        state.options = action.payload;\n      },\n    },\n    extraReducers: (state: any) => state\n});\nexport const { set_options } = options.actions;\n\nexport default options.reducer;","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { set_options } from '../../store/slices/optionsReducer';\nimport { motion } from 'framer-motion';\nimport './Options.scss';\n\nconst Options: React.FC<{isOpen: boolean, setIsOption: () => void, children: any}> = \n({\n  isOpen, \n  setIsOption, \n  children: renderChild,\n}) => {\n  const dispatch = useDispatch()\n  \n  const initialValues = {\n    timer: \"60\",\n    type: \"en-ua\",\n    words: \"10\",\n    random: true,\n  };\n\n  const onSubmit = (values: any) => {\n    dispatch(set_options(values));\n    setIsOption();\n  };\n\n  const variants = {\n    open: { opacity: 1, x: 0 },\n    closed: { opacity: 0, x: \"100%\" },\n  }\n\n  return (\n    <Formik \n      initialValues={initialValues} \n      onSubmit={(values) => onSubmit(values)}\n    >\n      {({values}: any) => {\n        return (\n          <Form>\n            <motion.div \n              animate={isOpen ? \"open\" : \"closed\"}\n              variants={variants}\n              transition={{duration: 0.7}}\n              className=\"options col-8 col-lg-3 bg-light\"\n            >    \n              <div className=\"options__content\">\n                {\n                  renderChild(values)\n                }\n              </div>\n              <button type=\"submit\" className=\"btn btn-outline-success btn-apply\">APPLY</button>\n            </motion.div>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n};\n\nexport default Options;\n","import React from 'react';\nimport {Field} from 'formik';\nimport { ViewProps } from './types';\nimport './Tests.scss';\nimport { BTN_BG, INP_BG} from '../../classes';\n\nconst View: React.FC<ViewProps> = ({\n  test, \n  count = 0, \n  start, \n  toggleOptions, \n  options, \n  randomWords,\n\tstartTest,\n\tsendAnswer,\n\tsetFieldValue,\n\tvalues,\n}) => {\n\tconst word = start? options.type === \"en-ua\"? test.words[randomWords[count]].en : test.words[randomWords[count]].ua : \"\";\n\n\tconst handleKeyDown = (event: any) => {\n\t\tif(count === options.words - 1) {\n\t\t\treturn\n\t\t}\n    if (event.key === 'Enter') {\n\t\t\tevent.preventDefault();\n      sendAnswer(setFieldValue, values);\n    }\n  };\n\n\treturn (\n\t\t<>   \n\t\t\t<div className=\"header\">\n\t\t\t\t<button \n\t\t\t\t\ttype=\"button\" \n\t\t\t\t\tclassName={BTN_BG}\n\t\t\t\t\tonClick={toggleOptions} \n\t\t\t\t\tdisabled={start}\n\t\t\t\t>\n\t\t\t\t\tOPTIONS\n\t\t\t\t</button> \n\t\t\t</div>\n\n\t\t\t<div className=\"content\">\n\t\t\t\t{\n\t\t\t\t\tstart && (\n\t\t\t\t\t\t<div className=\"content__info\">\n\t\t\t\t\t\t\t<div className=\"content__info-inner\">\n\t\t\t\t\t\t\t\t<h1 className=\"title\">test name: {test?.name}</h1>\n\t\t\t\t\t\t\t\t<h4 className=\"under-title\">type: EN _ UA</h4>\n\t\t\t\t\t\t\t\t<h5 className=\"under-title\">{count}</h5>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<h2 className=\"title title_bottom_border\">{ word }</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"bottom-panel\">\n\t\t\t\t{\n\t\t\t\t\tstart && (\n\t\t\t\t\t\t<Field className={INP_BG}\n\t\t\t\t\t\t\tname=\"answer\" \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tplaceholder=\"YOUR ANSWER\" \n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tcount === options.words - 1 && (\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\tclassName={BTN_BG}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEND THE TEST\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)\n\t\t\t\t} \n\t\t\t\t{ \n\t\t\t\t\tstart && count !== options.words && (\n\t\t\t\t\t<button \n\t\t\t\t\t\ttype=\"button\" \n\t\t\t\t\t\tclassName={BTN_BG}\n\t\t\t\t\t\tonClick={() => sendAnswer(setFieldValue, values)}\n\t\t\t\t\t>\n\t\t\t\t\t\tSEND ANSWER\n\t\t\t\t\t</button>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t!start && (\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName={BTN_BG}\n\t\t\t\t\t\t\tonClick={() => startTest()}>\n\t\t\t\t\t\t\tSTART\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</>\n\t)\n};\n\nexport default View;\n","import React, { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\"\nimport \"./Timer.scss\";\n\nconst Timer: React.FC<{timer: number | string}> = ({timer}) => {\n\n\tconst [nowTime, setNowTime] = useState(0);\n\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n\t\t\tsetNowTime(nowTime + 1);\n\t  }, 1000);\n\n\tif(nowTime === 72) {\n\t\tclearTimeout(timeout);\n\t};\n  }, [nowTime, timer]);\n\n\treturn (\n\t\t<motion.div \n\t\t\tanimate={{y: 0, rotate: 360}}\n\t\t\tinitial={{y: \"-500px\"}}\n\t\t\ttransition={{duration: 1}}\n\t\t\tclassName={`alert-${nowTime < timer ? \"success\" : \"danger\"} timer`}\n\t\t>\n\t\t\t<h3>Time is up</h3>\n\t\t\t<h1>{nowTime}/{timer}</h1>\n\t\t</motion.div>\n\t)\n};\n\nexport default Timer;\n","const optionsData = [\n  {\n    title: 'timer',\n    options: [\n      \"30\", \"45\", \"60\", \"75\", \"90\", \"105\", \"120\",\n    ]\n  }, \n  {\n    title: 'type',\n    options: [\n      'en-ua',\n      'ua-en',\n    ]\n  },\n  {\n    title: 'words',\n    options: [\n      \"10\", \"15\", \"20\", \"25\", \"30\",\n    ]\n  }, \n  {\n    title: 'random',\n    options: [\n      \"true\", \"false\"\n    ]\n  }\n];\n\nexport default optionsData;","import { Field } from \"formik\";\nimport optionsData from \"../../mockData/options\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\n\nconst optionsForTest = (values: any) => {\n  return (\n    <div className=\"options__content__list\">\n      { \n        optionsData.map((item) => (\n          <li key={generateString()}>     \n            <div className=\"group-type__options\">\n              <h3 className=\"start-title\">{item.title}</h3>\n              <div className=\"group-type__option-content\">\n                {\n                  item.options.map((option: string | number) => (\n                    <div className=\"group-type__option-content-inner\" key={generateString()}>\n                      <div>{option}</div>\n                      <div className={`input-checkbox ${option === values[item.title] && \"active\"}`} />\n                      <Field name={item.title} value={option} type=\"radio\" className=\"filed-checkbox\" />\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          </li>\n        ))\n      } \n    </div>\n  )\n};\n\nexport {\n  optionsForTest,\n};\n","import React, { useState } from 'react';\nimport {Form, Formik} from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeTest, shuffle, equalAnswerAndWord } from '../../specialFunction/specialFunction';\nimport { push_audited_test } from '../../store/slices/resultReducer';\nimport { reset_test } from \"../../store/slices/testsReducer\";\nimport Options from '../../component/Options/Options';\nimport { ModalNotice } from '../../component/Modal/Modals';\nimport View from './View';\nimport Timer from '../../component/Timer/Timer';\nimport { RootReducer } from '../../store/slices/types';\nimport { InitialValues } from './types';\nimport { optionsForTest } from '../../component/Options/optionsType';\n\nconst makeRandomArr = (arr: any) => {\n  let randomArr = []; \n\n  for(let i = 0;i < arr; i++) {\n    randomArr.push(i);\n  }\n  return randomArr\n};\n\nconst Test: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const options = useSelector((state: RootReducer) => state.options.options);\n  const gotTest: any = useSelector((state: RootReducer) => state.tests.test);\n  const [test, setTest] = useState([]);\n  const [count, setCount] = useState(0);\n  const [end, setEnd] = useState(false);\n  const [start, setStart] = useState(false);\n  const [isOptions, setIsOptions] = useState(false);\n  const [seeResults, setSeeResults] = useState(false);\n  const [random, setRandom] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]);\n  const [startTime, setStartTime] = useState<any>(\"\");\n\n  const initialValues: InitialValues = {\n    answer: '',\n    answers: [],\n  };\n\n  const onSubmit = (values: any) => {\n    values.answers.push(values.answer);\n    const auditedTest = equalAnswerAndWord(test, values.answers, options, random, startTime);\n    dispatch(push_audited_test(auditedTest));\n    setSeeResults(true);\n    setCount(0);\n    setStart(false);\n    setEnd(true);\n    values.answers = [];\n    values.answer = \"\";\n  };\n\n  const toggleOptions = () => setIsOptions(!isOptions);\n\n  const sendAnswer = (setFieldValue: Function, values: any) => {\n    setCount(count + 1);\n    setFieldValue(\"answers\", [...values.answers, values.answer]);\n    setFieldValue(\"answer\", \"\");\n  };\n\n  const startTest = () => {\n    if(!gotTest) {\n      setTest(makeTest(options.words));\n    }else {\n      setTest(gotTest);\n    };\n    const date = new Date();\n    setStartTime(date);\n    setStart(true);\n    setEnd(false);\n    setIsOptions(false);\n    setSeeResults(false);\n    setRandom(shuffle(makeRandomArr(options.words)));\n    dispatch(reset_test());\n  };\n\n  return (\n    <div className=\"page\">\n      { start && <Timer timer={60} /> }\n      <Options isOpen={isOptions} setIsOption={() => setIsOptions(false)}> \n        {optionsForTest}\n      </Options>\n\n      <ModalNotice isModal={seeResults} toggle={() => setSeeResults(!seeResults)}/>\n\n      <Formik \n        initialValues={initialValues} \n        onSubmit={(values) => onSubmit(values)} \n      >\n        {({values, setFieldValue}) => {\n          return (\n            <Form className=\"pass-test\">\n              <div className=\"pass-test__inner col-12 col-lg-6\">\n              <View\n                test={test} \n                count={count} \n                end={end}\n                start={start}\n                toggleOptions={toggleOptions}\n                options={options}\n                randomWords={random}\n                values={values}\n                setFieldValue={setFieldValue}\n                startTest={startTest}\n                sendAnswer={sendAnswer}\n              />\n              </div>\n            </Form>\n          )\n        }}\n      </Formik>\n    </div>\n  )\n};\n\nexport default Test;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './MobileMenu.scss';\n\nconst MobileMenu: React.FC<{\n  show: boolean,\n  setIsMobileMenu: any,\n}> = ({\n  show,\n  setIsMobileMenu,\n}) => {\n\n  return (\n    <div className=\"Mobile-menu\">\n      {\n        show && (\n          <ul className=\"navbar-nav me-auto\">\n            <li className=\"nav-item\" onClick={() => setIsMobileMenu(false)}>\n              <NavLink\n                activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"rgb(255, 255, 255)\",\n                  fontSize: \"22px\",\n                }} \n                style={{\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  textDecoration: \"none\"\n                }}\n                to=\"/main\"\n              >\n                main\n              </NavLink>\n            </li>\n            <li className=\"nav-item\" onClick={() => setIsMobileMenu(false)}>\n              <NavLink \n                activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"rgb(255, 255, 255)\",\n                  fontSize: \"22px\",\n                }} \n                style={{\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  textDecoration: \"none\"\n                }}\n                to=\"/tests\"\n              >\n                tests\n              </NavLink>\n            </li>\n            <li className=\"nav-item\" onClick={() => setIsMobileMenu(false)}>\n              <NavLink \n                activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"rgb(255, 255, 255)\",\n                  fontSize: \"22px\",\n                }} \n                style={{\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  textDecoration: \"none\"\n                }}\n                to=\"/story\"\n              >\n                story\n              </NavLink>\n            </li>\n            <li className=\"nav-item\" onClick={() => setIsMobileMenu(false)}>\n              <NavLink \n                activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"rgb(255, 255, 255)\",\n                  fontSize: \"22px\",\n                }} \n                style={{\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  textDecoration: \"none\"\n                }}\n                to=\"/sign-in\"\n              >\n                sign-in\n              </NavLink>\n            </li>\n            <li className=\"nav-item\" onClick={() => setIsMobileMenu(false)}>\n              <NavLink \n                activeStyle={{\n                  fontWeight: \"bold\",\n                  color: \"rgb(255, 255, 255)\",\n                  fontSize: \"22px\",\n                }} \n                style={{\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  textDecoration: \"none\"\n                }}\n                to=\"/profile/setting\"\n              >\n                profile\n              </NavLink>\n            </li>\n          </ul>\n        )\n      }\n    </div>\n  )\n};\n\nexport default MobileMenu;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n//import { useAuth } from '../../hooks/useAuth';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport avatar from \"../../images/photo.jpeg\";\nimport './Header.scss';\n\nconst LinkList = () => {\n  // const isAuth = useAuth();\n\n  return (\n    <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n      <ul className=\"navbar-nav me-auto\">\n        <li className=\"nav-item\">\n          <NavLink \n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"rgb(255, 255, 255)\",\n              fontSize: \"22px\",\n            }} \n            style={{\n              fontWeight: \"bold\",\n              color: \"black\",\n              textDecoration: \"none\"\n            }}\n            to=\"/main\"\n          >\n            main\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink \n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"rgb(255, 255, 255)\",\n              fontSize: \"22px\",\n            }} \n            style={{\n              fontWeight: \"bold\",\n              color: \"black\",\n              textDecoration: \"none\"\n            }}\n            to=\"/tests\"\n          >\n            tests\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink \n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"rgb(255, 255, 255)\",\n              fontSize: \"22px\",\n            }} \n            style={{\n              fontWeight: \"bold\",\n              color: \"black\",\n              textDecoration: \"none\"\n            }}\n            to=\"/story\"\n          >\n            story\n          </NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink \n            activeStyle={{\n              fontWeight: \"bold\",\n              color: \"rgb(255, 255, 255)\",\n              fontSize: \"22px\",\n            }} \n            style={{\n              fontWeight: \"bold\",\n              color: \"black\",\n              textDecoration: \"none\"\n            }}\n            to=\"/profile/setting\"\n          >\n            profile\n          </NavLink>\n        </li>\n        {/* <li className=\"nav-item\">\n          <audio src=\"../../music/m1.mp3\" controls>\n\n          </audio>\n        </li> */}\n      </ul>\n    </div>\n  )\n}\n\nconst HeaderX: React.FC = () => {\n  const [isMobileMenu, setIsMobileMenu] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const toggleEdit = () => setIsEdit(!isEdit);\n\n  return (\n    <nav className=\"navbar navbar-expand-lg header-fixed navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n\n          <div>\n\n            <img alt=\"\" src={avatar} className=\"img-header\" onClick={toggleEdit}></img>\n\n            <div className={`edit-panel ${isEdit && \"active-edit\"}`}>\n              <h1>content</h1>\n            </div>\n          </div>\n\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" onClick={() => setIsMobileMenu(!isMobileMenu)}></span>\n        </button>\n\n          <LinkList />\n\n        </div>\n          <MobileMenu show={isMobileMenu} setIsMobileMenu={setIsMobileMenu}/>\n    </nav>\n  )\n};\n\nexport default HeaderX\n","export const stories = [\n  {\n    title: \"News\",\n    author: \"Lun Maris\",\n    stories: \"TSo it was not bad and now i can to give you feedback from my side. Basically you maneged to did it and you wondered me. But i don't understand for what you it .Either you keep up to me or you are leave on your own now. So you go to me and the rest may rest. All except you may to rest. Besides you can create new task for they. We lives beside the school. Expecially i like you. Are you recognize me now. Acord with rues you need to pass the our controll. However you came to me. How i can make sure that you have lovely intention to my daugher. By the way all is on the contrary. they surraound me \",\n    date: \"01.12.2021\",\n    id: 1\n  },\n  {\n    title: \"Laugh\",\n    author: \"Snow boy\",\n    stories: \"TSo it was not bad and ut i don't understand for what you it .Either you keep up to me or you are leave on your own now. So you go to me and the rest may rest. All except you may to rest. Besides you can create new task for they. We lives beside the school. Expecially i like you. Are you recognize me now. Acord with rues you need to pass the our controll. However you came to me. How i can make sure that you have lovely intention to my daugher. By the way all is on the contrary. they surraound me \",\n    date: \"01.12.2021\",\n    id: 2\n  },\n  {\n    title: \"Top comment\",\n    author: \"San Mores\",\n    stories: \"TSo it was not bad and now i can to give you How i can make sure that you have lovely intention to my daugher. By the way all is on the contrary. they surraound me \",\n    date: \"01.12.2021\",\n    id: 3\n  },\n  {\n    title: \"Life\",\n    author: \"Ina La\",\n    stories: \"TSo it was not bad and now i can to give you feedback from my side. Basically you maneged to did it and you wondered me. But i don't understand for what you it .Either you keep up to me or you are leave on your own now. So you go to me and the rest may rest. All except you may to rest. Besides you can create new task for they. We lives beside the school. Expecially i like you. Are you recognize me now. Acord with rues you need to pass the our controll. However you came to me. How i can make sure that you have lovely intention to my daugher. By the way all is on the contrary. they surraound me \",\n    date: \"01.12.2021\",\n    id: 4\n  },\n  {\n    title: \"Riddle\",\n    author: \"Bas\",\n    stories: \"rstand for what you it .Either you keep up to me or you are leave on your own now. So you go to me and the rest may rest. All except you may to rest. Besides organize me now. Acord with rues you need to pass the our controll. However you came to me. How i can make sure that you have lovely intention to my daugher. By the way all is on the contrary. they surraound me \",\n    date: \"01.12.2021\",\n    id: 5\n  },\n  {\n    title: \"Advice if i know it in 20\",\n    author: \"Lui tone\",\n    stories: \"TSo it was not bad and now i can to give you feedback from my side. Basically you maneged to did it and you wondered me. But i don't understand for what you it .Either you keep up to me or you are leave on your own now. So you go to me and the rest may rest. All except you may to rest. Besides you can create new task for they. We lives beside the school. Expecially i like you. Are you recognize me now. Acord with rues you need to pass the our controll. However you came to me. How i can make sure that you have lovely intention to my daugher \",\n    date: \"01.12.2021\",\n    id: 6\n  },\n  {\n    title: \"Project\", \n    author: \"Salabay Oleg\",\n    stories: \"I was learning React & JS. I applied to IT company after that i went to interview, but i didn't pass it. Approximately i was shy and i had red face. And besides i didn't know English language and He told me learn English and good luck you. Then i arrived to home and decided to learn the english and so was not long because i must learn IT. but after time i understand that i can to create Website for english for yourself and this will be cool for EN and JS & React\",\n    data: \"09.17.2021\"\n  }\n]","import React from 'react';\nimport { stories } from '../../mockData/stories';\nimport { motion } from 'framer-motion';\nimport './Story.scss';\n\nconst Story: React.FC = () => {\n\n  const listStories = stories.map((story, idx: number) => {\n    return (\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"-100%\", opacity: 0}}\n        transition={{duration: 1.5}}\n        className={`story-item col-12 col-lg-5 ${idx / 2 === 1 && \"col-lg-6\"}`} key={story.id}>\n        <h3 className=\"title\">{story.title}</h3>\n        <p>{story.author}</p>\n        <p>{story.date}</p>\n        <p>{story.stories}</p>\n      </motion.div>\n    )\n  });\n\n  return (\n    <div className=\"page\">\n      <div className=\"story\">\n        { listStories }\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Main from '../../pages/Main/Main';\nimport Profile from '../../pages/Profile/Profile';\nimport SignIn from '../../pages/Sign-in/Sign-in';\nimport Tests from '../../pages/Tests/Tests';\nimport Header from '../Header/Header';\nimport Story from '../../pages/Story/Story';\nimport { Container } from 'reactstrap';\nimport \"./app.scss\";\n\nconst App: React.FC = () => {\n\n  return (\n      <Router>\n        <Header />\n        <Switch>\n          <Container fluid>\n            <Route path=\"/main\" exact component={Main}/>\n            <Route path=\"/sign-in\" exact component={SignIn}/>\n            <Route path=\"/story\" exact component={Story}/>\n            <Route path=\"/profile\" exact component={Profile}/>\n            <Route path=\"/profile/:id\" exact component={Profile}/>\n            <Route path=\"/tests\" exact component={Tests}/>\n          </Container>\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState: any = {\n    dictionaryParts: [],\n}\n\nconst dictionary = createSlice({\n    name: \"dictionary\",\n    initialState,\n    reducers: {\n        add_dictionary_part: (state, action) => {\n            state.dictionaryParts.push(action.payload);\n        },\n        delete_dictionary_part: (state, action) => {\n            const start = state.dictionaryParts.slice(0, action.payload.id);\n            const end = state.dictionaryParts.slice(action.payload.id + 1);\n            state.dictionaryParts = [...start, ...end];\n        },\n    },\n    extraReducers: (state: any) => state\n});\n//export const { } = dictionary.actions;\n\nexport default dictionary.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nexport interface Profile {\n\n};\n\nconst initialState: Profile = {\n\n};\n\nconst profile = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (state: any) => state\n});\n//export const { } = profile.actions;\n\nexport default profile.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nexport interface Story {\n\n};\n\nconst initialState: Story = {\n\n};\n\nconst story = createSlice({\n    name: \"story\",\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (state: any) => state\n});\n//export const { } = story.actions;\n\nexport default story.reducer;","import { combineReducers } from \"redux\";\nimport auth from \"./authReducer\";\nimport dictionaryReducer from \"./dictionaryReducer\";\nimport optionsReducer from \"./optionsReducer\";\nimport profileReducer from \"./profileReducer\";\nimport resultReducer from \"./resultReducer\";\nimport storyReducer from \"./storyReducer\";\nimport tests from \"./testsReducer\";\n\nconst rootReducer = combineReducers({\n  tests: tests,\n  options: optionsReducer,\n  story: storyReducer,\n  result: resultReducer,\n  dictionary: dictionaryReducer,\n  profile: profileReducer,\n  auth: auth,\n});\n\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './slices/rootSlice';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { createWhitelistFilter } from 'redux-persist-transform-filter';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [\n    createWhitelistFilter(\"tests\", [\"allTests\"]),\n    createWhitelistFilter(\"result\", [\"results\"]),\n    createWhitelistFilter(\"auth\", [\"dictionary\", \"homework\"]),\n  ],\n  whitelist: [\"tests\", \"result\", \"auth\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n \nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n \nexport const localStore = persistStore(store);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './component/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport store, { localStore } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={localStore}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}