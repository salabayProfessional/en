{"version":3,"sources":["component/Row/Row.tsx","pages/Profile/underPages/Create-test/Cteate-test.tsx"],"names":["Row","Left","Right","rightWidth","leftWidth","fixed","className","div","animate","x","opacity","initial","transition","duration","CreateTest","dispatch","useDispatch","list","useMemo","allWords","map","word","en","ua","type","value","name","generateString","splitWordsOnAnd","words","indexSignAnd","indexOf","slice","initialValues","amount","timer","onSubmit","values","setFieldValue","create_test","options","handleSubmit","for","INP_BG","placeholder","id","as","color","onClick","length","alert","add_home_work","title"],"mappings":"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","file":"static/js/6.9e25253c.chunk.js","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\"\nimport \"./Row.scss\";\n\nconst Row: React.FC<{\n  Left: any,\n  Right: any,\n  rightWidth?: number,\n  leftWidth?: number,\n  fixed?: \"right\" | \"left\",\n}> = ({\n  Left, \n  Right, \n  rightWidth = 6,\n  leftWidth = 6,\n  fixed = \"none\"\n}) => {\n\n  return (\n    <div className=\"row-wrapper\">\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"-100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${leftWidth} ${fixed === \"left\" && \"fixed\"}`}\n      >\n        { Left }\n      </motion.div>\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${rightWidth} ${fixed === \"right\" && \"fixed\"}`}\n      >\n        { Right }\n      </motion.div>\n    </div>\n  )\n};\n\nexport default Row;\n","import { Field, Formik, Form } from 'formik';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, FormGroup, Label, Table } from 'reactstrap';\nimport { INP_BG } from '../../../../classes';\nimport Row from '../../../../component/Row/Row';\nimport { allWords } from '../../../../mockData/words';\nimport { generateString } from '../../../../specialFunction/specialFunction';\nimport { add_home_work } from '../../../../store/slices/authReducer';\nimport { create_test } from '../../../../store/slices/testsReducer';\nimport \"./Create-test.scss\";\nimport { InitialValues } from './types';\n\nconst CreateTest: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const initialValues: InitialValues = {\n    name: \"\",\n    amount: 10,\n    type: \"en-ua\",\n    timer: 60,\n    words: [],\n  }\n\n  const list = useMemo(() => {\n    return allWords.map((word: {en: string, ua: string}) => {\n      return (\n        <tr key={generateString()}>\n          <td>{word.en}</td>\n          <td>{word.ua}</td>\n          <th>\n            <Field type=\"checkbox\" value={`${word.en}&${word.ua}`} name=\"words\" />\n          </th>\n        </tr>\n      )\n    })\n  }, []);\n\n  const onSubmit = (values: any, setFieldValue: any) => {\n      const words = splitWordsOnAnd(values.words);\n  \n      dispatch(create_test({\n        name: values.name,\n        words: words,\n        type: \"en-ua\",\n        options: values.options\n      }));\n      \n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"timer\", 60);\n      setFieldValue(\"amount\", 10);\n      setFieldValue(\"type\", \"en-ua\");\n      setFieldValue(\"words\", []);\n  };\n\n  const splitWordsOnAnd = (words: string[]) => {\n    return words.map((word: string) => {\n      const indexSignAnd = word.indexOf(\"&\");\n      return {en: word.slice(0, indexSignAnd), ua: word.slice(indexSignAnd + 1)};// split words on \"&\" en-word&ua-word\n    });\n  }\n\n  return (\n    <>\n    <div>\n      <Formik initialValues={initialValues} onSubmit={(values, {setFieldValue}) => onSubmit(values, setFieldValue)}>\n        {({values, handleSubmit}) => {\n          return (\n            <>\n              <Form className=\"crete-test__inner\">\n                <Row \n                \n                  Left={\n                    (\n                      <div>\n                        <Table className=\"bg-light\">\n                          <tbody>\n                            { list }\n                          </tbody>\n                        </Table>\n                      </div>\n                    )\n                  }\n                  rightWidth={6}\n                  Right={\n                    (\n                      <div className=\"fixed\">\n                        <FormGroup>\n                          <Label for=\"Name\">Name</Label>\n                          <Field className={INP_BG} type=\"text\" placeholder=\"name\" name=\"name\" id=\"Name\" />\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"Type\">Type</Label>\n                          <Field className={INP_BG} as=\"select\" name=\"type\" id=\"Type\">\n                            <option>EN - UA</option>\n                            <option>UA - EN</option>\n                          </Field>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"Amount\">Amount</Label>\n                          <Field className={INP_BG} as=\"select\" name=\"amount\" id=\"Amount\">\n                            <option>10</option>\n                            <option>15</option>\n                            <option>20</option>\n                            <option>25</option>\n                            <option>30</option>\n                          </Field>\n                        </FormGroup>\n                        <FormGroup>\n                          <Label for=\"Timer\">Timer</Label>\n                          <Field className={INP_BG} as=\"select\" name=\"timer\" id=\"Timer\">\n                            <option>30</option>\n                            <option>60</option>\n                            <option>90</option>\n                            <option>120</option>\n                            <option>150</option>\n                          </Field>\n                        </FormGroup>\n                        <footer>\n                          <FormGroup>\n                            <Button \n                              className=\"form-control btn-bg\" \n                              color=\"success\" \n                              type=\"button\" \n                              onClick={() => {\n                                if(values.words.length !== values.amount) {\n                                  return alert(`You need to select a ${values.amount}`)\n                                } else {\n                                  alert(\"success\");\n                                  handleSubmit();\n                                }\n                            }}\n                            >\n                              CREATE TEST\n                            </Button>\n                          </FormGroup>\n                          <FormGroup>\n                            <Button \n                              className=\"form-control btn-bg\" \n                              color=\"success\" \n                              type=\"button\" \n                              onClick={() => {\n                                dispatch(add_home_work({title: values.name, words: splitWordsOnAnd(values.words as any)}));\n                            }}\n                            >\n                              CREATE HOMEWORK\n                            </Button>\n                          </FormGroup>\n                          <h2>Words selected: {values.words.length}</h2>\n                        </footer>\n                      </div>\n                    )\n                  }\n                />\n              </Form>\n            </>\n          )\n        }}\n      </Formik>\n    </div>\n    </>\n  )\n}\n\nexport default CreateTest;"],"sourceRoot":""}