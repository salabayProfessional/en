{"version":3,"sources":["component/Row/Row.tsx","hooks/useRedux.ts","component/SearchWord/SearchView.tsx","component/SearchWord/SearchWord.tsx","pages/Profile/underPages/OwnDictionary/DataWords.tsx","pages/Profile/underPages/OwnDictionary/OwnDictionary.tsx","hooks/useOwnDictionary.ts"],"names":["Row","Left","Right","rightWidth","leftWidth","fixed","className","div","animate","x","opacity","initial","transition","duration","useAppSelector","useSelector","SearchView","onSubmit","initialState","loading","data","dispatchWord","initialValues","placeholder","name","Spinner","map","d","word","phonetics","text","meanings","partOfSpeech","definitions","definition","synonyms","synonym","example","origin","BTN_BG","type","onClick","generateString","SearchWord","dispatch","useDispatch","ownDictionary","state","auth","dictionary","useState","setData","setLoading","values","a","axios","get","then","length","words","add_part_own_dictionary","part","add_word_own_dictionary","DataWord","active","newActive","activePart","Button","marginY","marginRight","iconBefore","ManualIcon","TrashIcon","remove_word","intent","OwnDictionary","setActive","setActivePart","activePartOptions","setActivePartOptions","setNewActive","tabs","onDoubleClick","setNewActivePartOptions","Table","style","height","findIndex","item","DataWords","listWords"],"mappings":"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","file":"static/js/5.0d4b7dc8.chunk.js","sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\"\nimport \"./Row.scss\";\n\nconst Row: React.FC<{\n  Left: any,\n  Right: any,\n  rightWidth?: number,\n  leftWidth?: number,\n  fixed?: \"right\" | \"left\",\n}> = ({\n  Left, \n  Right, \n  rightWidth = 6,\n  leftWidth = 6,\n  fixed = \"none\"\n}) => {\n\n  return (\n    <div className=\"row-wrapper\">\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"-100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${leftWidth} ${fixed === \"left\" && \"fixed\"}`}\n      >\n        { Left }\n      </motion.div>\n      <motion.div \n        animate={{x: 0, opacity: 1}}\n        initial={{x: \"100%\"}}\n        transition={{duration: 0.7, opacity: 0}}\n        className={`right col-12 col-lg-${rightWidth} ${fixed === \"right\" && \"fixed\"}`}\n      >\n        { Right }\n      </motion.div>\n    </div>\n  )\n};\n\nexport default Row;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useAppDispatch = () => useDispatch();\n\nexport const useAppSelector: TypedUseSelectorHook<RootReducer> = useSelector;","import React from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { Spinner } from \"reactstrap\";\nimport { WordData } from \"../../store/slices/types\";\nimport { generateString } from \"../../specialFunction/specialFunction\";\nimport { BTN_BG } from \"../../classes\";\nimport \"./SearchWord.scss\";\n\nconst SearchView: React.FC<{\n  onSubmit: any,\n  initialState: any,\n  loading: any,\n  data: any,\n  dispatchWord: any\n}> = ({\n  onSubmit,\n  initialState,\n  loading,\n  data,\n  dispatchWord,\n}) => (\n  <div className=\"search-word\">  \n    <Formik  \n      onSubmit={onSubmit}\n      initialValues={initialState}\n    >\n      {\n        () => {\n          return (\n            <Form className=\"search-panel col-12\">\n              <Field className=\"form-control btn-bg\" placeholder=\"word\" name=\"word\" />\n              <div className=\"info-panel\">\n                {\n                  loading? <Spinner /> : (\n                    data?.map((d: WordData) => (\n                      <div key={generateString()}>\n                        <h4>{d.word}</h4>\n                        <p><b>Phonetics:</b> {d?.phonetics[0]?.text}</p>\n                        <p><b>Meanings:</b> part of speech: {d?.meanings[0]?.partOfSpeech}<br /></p>\n                        <p><b>Definitions:</b> {d?.meanings[0]?.definitions[0]?.definition}<br /></p>\n                        <p><b>Synonyms:</b> {d?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span>{synonym}, </span>)}<br /></p>\n                        <p><b>Example:</b> {d?.meanings[0]?.definitions[0]?.example}<br /></p>\n                        <p><b>Origin</b> {d?.origin}<br /></p>\n                        <button \n                          className={BTN_BG} type=\"button\" \n                          onClick={() => dispatchWord({word: data})}\n                        >\n                          ADD IN DICTIONARY\n                        </button>\n                      </div>\n                    ))\n                  )\n                }\n              </div>\n            </Form>\n          )\n        }\n      }\n    </Formik>\n  </div>\n);\n\nexport default SearchView\n","import axios from \"axios\";\nimport React, { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"../../hooks/useRedux\";\nimport { add_word_own_dictionary, add_part_own_dictionary } from \"../../store/slices/authReducer\";\nimport { WordData } from \"../../store/slices/types\";\nimport SearchView from \"./SearchView\";\n\nconst SearchWord: React.FC = () => {\n  const API_BASE = \"https://api.dictionaryapi.dev/api/v2/entries/en/\";\n  const dispatch = useDispatch();\n\n  const ownDictionary = useAppSelector(state => state.auth.dictionary);\n\n  const [data, setData] = useState<WordData[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  interface InitialState {\n    word: string\n  };\n\n  const initialState : InitialState= {\n    word: \"\",\n  };\n\n  const onSubmit = async (values: InitialState) => {\n    setLoading(true);\n    axios.get(API_BASE + values.word)\n    .then((d: any) => {\n      setData(d.data);\n      setLoading(false);\n    })\n  };\n\n  const dispatchOwnWord = (data: any) => {\n    const length = ownDictionary.length; //last idx\n\n    if(ownDictionary.length === 0 || ownDictionary[length - 1]?.words.length >= 30) {\n      dispatch(add_part_own_dictionary({part: `${length + 1} part`, words: []}));\n      dispatch(add_word_own_dictionary(data));\n    };\n    \n    if(ownDictionary[length - 1]?.words?.length < 30) {\n      dispatch(add_word_own_dictionary(data));\n    };\n  };\n\n  return (\n    <SearchView \n      initialState={initialState}\n      data={data}\n      dispatchWord={dispatchOwnWord}\n      onSubmit={onSubmit}\n      loading={loading}\n    />\n  )\n};\n\nexport default SearchWord;\n","import React from 'react'\nimport { Button, TrashIcon, ManualIcon } from 'evergreen-ui'\nimport { useDispatch } from 'react-redux'\nimport { generateString } from '../../../../specialFunction/specialFunction'\nimport { remove_word } from '../../../../store/slices/authReducer'\n\nconst DataWord: React.FC<{data: any, active: string, newActive: any, activePart: string}> = ({data, active, newActive, activePart}) => {\n  const dispatch = useDispatch();\n  return (\n    <tbody className=\"table-item\">\n      <tr className=\"word-item col-12\">\n        <th className=\"col-10\">{data?.word}</th>\n        <th><Button marginY={8} marginRight={12} iconBefore={ManualIcon} onClick={() => newActive(data.word)}></Button></th>\n        <th><Button marginY={8} marginRight={12} iconBefore={TrashIcon} onClick={() => dispatch(remove_word({word: data.word, part: activePart}))} intent=\"danger\"></Button></th>\n      </tr>\n\n      <div className={`tab-item ${active === data?.word? \"show\" : \"close\"} col-12`}>\n        <p><b>Phonetics:</b> {data?.phonetics[0]?.text}</p>\n        <p><b>Meanings:</b> part of speech: {data?.meanings[0]?.partOfSpeech}<br /></p>\n        <p><b>Definitions:</b> {data?.meanings[0]?.definitions[0]?.definition}<br /></p>\n        <p><b>Synonyms:</b> {data?.meanings[0]?.definitions[0]?.synonyms.map((synonym: string) => <span key={generateString()}>{synonym}, </span>)}<br /></p>\n        <p><b>Example:</b> {data?.meanings[0]?.definitions[0]?.example}<br /></p>\n        <p><b>Origin</b> {data?.origin}<br /></p>\n      </div>\n    </tbody>\n  )\n}\n\nexport default DataWord\n","import { Button } from \"evergreen-ui\";\nimport React, { useState } from \"react\";\nimport { Table } from \"reactstrap\";\nimport Row from \"../../../../component/Row/Row\";\nimport SearchWord from \"../../../../component/SearchWord/SearchWord\";\nimport { useOwnDictionary } from \"../../../../hooks/useOwnDictionary\";\nimport { generateString } from \"../../../../specialFunction/specialFunction\";\nimport DataWords from \"./DataWords\";\nimport \"./OwnDictionary.scss\";\n\nconst OwnDictionary: React.FC = () => {\n  const ownDictionary: any = useOwnDictionary();\n\n  const [active, setActive] = useState(\"\");\n  const [activePart, setActivePart] = useState(\"1 part\");\n  const [activePartOptions, setActivePartOptions] = useState(\"\");\n\n  const setNewActive = (word: string) => active === word? setActive(\"\") : setActive(word);\n\n  const setNewActivePartOptions = (part: string) => activePartOptions === part? setActivePartOptions(\"\") : setActivePartOptions(part);\n\n  const listWords = (ownDictionary: any) => {\n    const idx = [...ownDictionary].findIndex((item: any) => item.part === activePart);\n\n    return ownDictionary[idx]?.words?.map((word: any) => (\n      <DataWords data={word} active={active} newActive={setNewActive} key={generateString()} activePart={activePart}/>\n    ));\n  };\n\n  const tabs = ownDictionary.map((part: any) => {\n    return (\n      <div className=\"flex-btn-group\" key={generateString()}>\n        <Button \n          marginY={8} \n          marginRight={12}\n          key={generateString()} \n          onClick={() => {\n            setActivePart(part.part);\n          }}\n          onDoubleClick={() => setNewActivePartOptions(part.part)}\n        >\n          {part.part}\n        </Button>\n        <div className={`${activePartOptions === part.part? \"open-part\" : \"close-part\"} part-option`}>\n          <Button \n            marginY={8} \n            marginRight={12}\n            key={generateString()} \n          >\n            make test\n          </Button>\n          <Button \n            marginY={8} \n            marginRight={12}\n            key={generateString()} \n          >\n            shuffle\n          </Button>\n        </div>\n      </div>\n    )\n  });\n\n  return (\n    <div className=\"col-12\">\n      <Row\n        Left={\n          <div>\n            <div className=\"dictionary-tabs\">\n              { tabs }\n            </div>\n            <Table className=\"bg-light\" style={{height: \"100%\"}}>{listWords(ownDictionary)}</Table>\n          </div>\n        }\n        Right={<SearchWord />}\n      />\n    </div>\n  )\n};\n\nexport default OwnDictionary;\n","import { useSelector } from \"react-redux\";\nimport { RootReducer } from \"../store/slices/types\";\n\nexport const useOwnDictionary = () => useSelector((state: RootReducer) => state.auth.dictionary);"],"sourceRoot":""}